{
  "swagger": "2.0",
  "info": {
    "title": "minder/v1alpha/minder.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "EvalResultsService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/v1alpha/history": {
      "get": {
        "operationId": "EvalResultsService_ListEvaluationHistory",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alphaListEvaluationHistoryResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "context.provider",
            "description": "name of the provider",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "context.project",
            "description": "ID of the project",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "context.retiredOrganization",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entityType",
            "description": "List of entity types to retrieve.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "entityName",
            "description": "List of entity names to retrieve.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "profileName",
            "description": "List of profile names to retrieve.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "status",
            "description": "List of evaluation statuses to retrieve.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "remediation",
            "description": "List of remediation statuses to retrieve.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "alert",
            "description": "List of alert statuses to retrieve.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "from",
            "description": "Timestamp representing the start time of the selection window.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "to",
            "description": "Timestamp representing the end time of the selection window.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "cursor.cursor",
            "description": "cursor is the index to start from within the collection being\nretrieved. It's an opaque payload specified and interpreted on\nan per-rpc basis.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cursor.size",
            "description": "size is the number of items to retrieve from the collection.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "EvalResultsService"
        ]
      }
    }
  },
  "definitions": {
    "v1Context": {
      "type": "object",
      "properties": {
        "provider": {
          "type": "string",
          "title": "name of the provider"
        },
        "project": {
          "type": "string",
          "title": "ID of the project"
        },
        "retiredOrganization": {
          "type": "string"
        }
      },
      "description": "Context defines the context in which a rule is evaluated.\nthis normally refers to a combination of the provider, organization and project.\n\nRemoving the 'optional' keyword from the following two fields below will break\n buf compatibility checks."
    },
    "v1Cursor": {
      "type": "object",
      "properties": {
        "cursor": {
          "type": "string",
          "description": "cursor is the index to start from within the collection being\nretrieved. It's an opaque payload specified and interpreted on\nan per-rpc basis."
        },
        "size": {
          "type": "string",
          "format": "uint64",
          "description": "size is the number of items to retrieve from the collection."
        }
      },
      "description": "Cursor message to be used in request messages. Its purpose is to\nallow clients to specify the subset of records to retrieve by means\nof index within a collection, along with the number of items to\nretrieve."
    },
    "v1CursorPage": {
      "type": "object",
      "properties": {
        "totalRecords": {
          "type": "string",
          "format": "uint64",
          "description": "Total number of records matching the request. This is optional."
        },
        "next": {
          "$ref": "#/definitions/v1Cursor",
          "description": "Cursor pointing to retrieve results logically placed after the\nones shipped with the message containing this struct."
        },
        "prev": {
          "$ref": "#/definitions/v1Cursor",
          "description": "Cursor pointing to retrieve results logically placed before the\nones shipped with the message containing this struct."
        }
      },
      "description": "CursorPage message used in response messages. Its purpose is to\nsend to clients links pointing to next and/or previous collection\nsubsets with respect to the one containing this struct."
    },
    "v1Entity": {
      "type": "string",
      "enum": [
        "ENTITY_UNSPECIFIED",
        "ENTITY_REPOSITORIES",
        "ENTITY_BUILD_ENVIRONMENTS",
        "ENTITY_ARTIFACTS",
        "ENTITY_PULL_REQUESTS"
      ],
      "default": "ENTITY_UNSPECIFIED",
      "description": "Entity defines the entity that is supported by the provider."
    },
    "v1alphaEvaluationHistory": {
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/v1alphaEvaluationHistoryEntity",
          "description": "entity contains details of the entity which was evaluated."
        },
        "rule": {
          "$ref": "#/definitions/v1alphaEvaluationHistoryRule",
          "description": "rule contains details of the rule which the entity was evaluated against."
        },
        "status": {
          "$ref": "#/definitions/v1alphaEvaluationHistoryStatus",
          "description": "status contains the evaluation status."
        },
        "alert": {
          "$ref": "#/definitions/v1alphaEvaluationHistoryAlert",
          "description": "alert contains details of the alerts for this evaluation."
        },
        "remediation": {
          "$ref": "#/definitions/v1alphaEvaluationHistoryRemediation",
          "description": "remediation contains details of the remediation for this evaluation."
        }
      }
    },
    "v1alphaEvaluationHistoryAlert": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "description": "status is one of (on, off, error, skipped, not available)\nnot using enums to mirror the behaviour of the existing API contracts."
        },
        "details": {
          "type": "string",
          "description": "details contains optional details about the alert.\nthe structure and contents are alert specific, and are subject to change."
        }
      }
    },
    "v1alphaEvaluationHistoryEntity": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "id is the ID of the entity."
        },
        "type": {
          "$ref": "#/definitions/v1Entity",
          "description": "type is the entity type."
        },
        "name": {
          "type": "string",
          "description": "name is the entity name."
        }
      }
    },
    "v1alphaEvaluationHistoryRemediation": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "description": "status is one of (success, error, failure, skipped, not available)\nnot using enums to mirror the behaviour of the existing API contracts."
        },
        "details": {
          "type": "string",
          "description": "details contains optional details about the remediation.\nthe structure and contents are remediation specific, and are subject to change."
        }
      }
    },
    "v1alphaEvaluationHistoryRule": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "name is the name of the rule instance."
        },
        "type": {
          "type": "string",
          "description": "type is the name of the rule type."
        },
        "profile": {
          "type": "string",
          "description": "profile is the name of the profile which contains the rule."
        }
      }
    },
    "v1alphaEvaluationHistoryStatus": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "description": "status is one of (success, error, failure, skipped)\nnot using enums to mirror the behaviour of the existing API contracts."
        },
        "details": {
          "type": "string",
          "description": "details contains optional details about the evaluation.\nthe structure and contents are rule type specific, and are subject to change."
        }
      }
    },
    "v1alphaListEvaluationHistoryResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alphaEvaluationHistory"
          },
          "description": "List of records retrieved."
        },
        "page": {
          "$ref": "#/definitions/v1CursorPage",
          "description": "Metadata of the current page and pointers to next and/or\nprevious pages."
        }
      },
      "description": "ListEvaluationHistoryResponse represents a response message for the\nListEvaluationHistory RPC.\n\nIt ships a collection of records retrieved and pointers to get to\nthe next and/or previous pages of data."
    }
  }
}
