{
  "swagger": "2.0",
  "info": {
    "title": "minder/v1alpha/minder.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "EvalResultsService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/v1/results": {
      "get": {
        "operationId": "EvalResultsService_ListEvaluationResults",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/minderv1alphaListEvaluationResultsResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "context.provider",
            "description": "name of the provider",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "context.project",
            "description": "ID of the project",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "context.retiredOrganization",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "newField",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "profile",
            "description": "ID can contain either a profile name or an ID",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "labelFilter",
            "description": "Filter profiles to only those matching the specified labels.\n\nThe default is to return all user-created profiles; the string \"*\" can\nbe used to select all profiles, including system profiles.  This syntax\nmay be expanded in the future.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "ruleName",
            "description": "If set, only return evaluation results for the named rules.\nIf empty, return evaluation results for all rules",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "EvalResultsService"
        ]
      }
    },
    "/api/v1alpha/history": {
      "get": {
        "operationId": "EvalResultsService_ListEvaluationHistory",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alphaListEvaluationHistoryResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "context.provider",
            "description": "name of the provider",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "context.project",
            "description": "ID of the project",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "context.retiredOrganization",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entityType",
            "description": "List of entity types to retrieve.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "entityName",
            "description": "List of entity names to retrieve.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "profileName",
            "description": "List of profile names to retrieve.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "status",
            "description": "List of evaluation statuses to retrieve.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "remediation",
            "description": "List of remediation statuses to retrieve.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "alert",
            "description": "List of alert statuses to retrieve.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "from",
            "description": "Timestamp representing the start time of the selection window.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "to",
            "description": "Timestamp representing the end time of the selection window.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "cursor.cursor",
            "description": "cursor is the index to start from within the collection being\nretrieved. It's an opaque payload specified and interpreted on\nan per-rpc basis.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cursor.size",
            "description": "size is the number of items to retrieve from the collection.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "EvalResultsService"
        ]
      }
    }
  },
  "definitions": {
    "minderv1alphaListEvaluationResultsResponse": {
      "type": "object",
      "properties": {
        "entities": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/minderv1alphaListEvaluationResultsResponseEntityEvaluationResults"
          },
          "description": "Each entity selected by the list request will have _single_ entry in entities which contains results of all evaluations for each profile."
        }
      }
    },
    "minderv1alphaListEvaluationResultsResponseEntityEvaluationResults": {
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/v1EntityTypedId"
        },
        "profiles": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/minderv1alphaListEvaluationResultsResponseEntityProfileEvaluationResults"
          }
        }
      }
    },
    "minderv1alphaListEvaluationResultsResponseEntityProfileEvaluationResults": {
      "type": "object",
      "properties": {
        "profileStatus": {
          "$ref": "#/definitions/v1ProfileStatus",
          "title": "profile_status is the status of the profile - id, name, status, last_updated"
        },
        "results": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1RuleEvaluationStatus"
          },
          "title": "Note that some fields like profile_id and entity might be empty\nEventually we might replace this type with another one that fits the API better"
        }
      }
    },
    "v1Context": {
      "type": "object",
      "properties": {
        "provider": {
          "type": "string",
          "title": "name of the provider"
        },
        "project": {
          "type": "string",
          "title": "ID of the project"
        },
        "retiredOrganization": {
          "type": "string"
        }
      },
      "description": "Context defines the context in which a rule is evaluated.\nthis normally refers to a combination of the provider, organization and project.\n\nRemoving the 'optional' keyword from the following two fields below will break\n buf compatibility checks."
    },
    "v1Cursor": {
      "type": "object",
      "properties": {
        "cursor": {
          "type": "string",
          "description": "cursor is the index to start from within the collection being\nretrieved. It's an opaque payload specified and interpreted on\nan per-rpc basis."
        },
        "size": {
          "type": "string",
          "format": "uint64",
          "description": "size is the number of items to retrieve from the collection."
        }
      },
      "description": "Cursor message to be used in request messages. Its purpose is to\nallow clients to specify the subset of records to retrieve by means\nof index within a collection, along with the number of items to\nretrieve."
    },
    "v1CursorPage": {
      "type": "object",
      "properties": {
        "totalRecords": {
          "type": "string",
          "format": "uint64",
          "description": "Total number of records matching the request. This is optional."
        },
        "next": {
          "$ref": "#/definitions/v1Cursor",
          "description": "Cursor pointing to retrieve results logically placed after the\nones shipped with the message containing this struct."
        },
        "prev": {
          "$ref": "#/definitions/v1Cursor",
          "description": "Cursor pointing to retrieve results logically placed before the\nones shipped with the message containing this struct."
        }
      },
      "description": "CursorPage message used in response messages. Its purpose is to\nsend to clients links pointing to next and/or previous collection\nsubsets with respect to the one containing this struct."
    },
    "v1Entity": {
      "type": "string",
      "enum": [
        "ENTITY_UNSPECIFIED",
        "ENTITY_REPOSITORIES",
        "ENTITY_BUILD_ENVIRONMENTS",
        "ENTITY_ARTIFACTS",
        "ENTITY_PULL_REQUESTS"
      ],
      "default": "ENTITY_UNSPECIFIED",
      "description": "Entity defines the entity that is supported by the provider."
    },
    "v1EntityTypedId": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/v1Entity",
          "title": "entity is the entity to get status for. Incompatible with `all`"
        },
        "id": {
          "type": "string",
          "title": "id is the ID of the entity to get status for. Incompatible with `all`"
        }
      },
      "description": "EntiryTypeId is a message that carries an ID together with a type to uniquely identify an entity\nsuch as (repo, 1), (artifact, 2), ..."
    },
    "v1EvalResultAlert": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "title": "status is the status of the alert"
        },
        "lastUpdated": {
          "type": "string",
          "format": "date-time",
          "title": "last_updated is the last time the alert was performed or attempted"
        },
        "details": {
          "type": "string",
          "title": "details is the description of the alert attempt if any"
        },
        "url": {
          "type": "string",
          "title": "url is the URL to the alert"
        }
      },
      "title": "EvalResultAlert holds the alert details for a given rule evaluation"
    },
    "v1ProfileStatus": {
      "type": "object",
      "properties": {
        "profileId": {
          "type": "string",
          "title": "profile_id is the id of the profile"
        },
        "profileName": {
          "type": "string",
          "title": "profile_name is the name of the profile"
        },
        "profileStatus": {
          "type": "string",
          "title": "profile_status is the status of the profile"
        },
        "lastUpdated": {
          "type": "string",
          "format": "date-time",
          "title": "last_updated is the last time the profile was updated"
        },
        "profileDisplayName": {
          "type": "string",
          "title": "profile_display_name is the display name of the profile"
        }
      },
      "title": "get the overall profile status"
    },
    "v1RuleEvaluationStatus": {
      "type": "object",
      "properties": {
        "profileId": {
          "type": "string",
          "title": "profile_id is the id of the profile"
        },
        "ruleId": {
          "type": "string",
          "title": "rule_id is the id of the rule"
        },
        "ruleName": {
          "type": "string",
          "title": "rule_name is the type of the rule. Deprecated in favor of rule_type_name"
        },
        "entity": {
          "type": "string",
          "title": "entity is the entity that was evaluated"
        },
        "status": {
          "type": "string",
          "title": "status is the status of the evaluation"
        },
        "lastUpdated": {
          "type": "string",
          "format": "date-time",
          "title": "last_updated is the last time the profile was updated"
        },
        "entityInfo": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "entity_info is the information about the entity"
        },
        "details": {
          "type": "string",
          "title": "details is the description of the evaluation if any"
        },
        "guidance": {
          "type": "string",
          "title": "guidance is the guidance for the evaluation if any"
        },
        "remediationStatus": {
          "type": "string",
          "title": "remediation_status is the status of the remediation"
        },
        "remediationLastUpdated": {
          "type": "string",
          "format": "date-time",
          "title": "remediation_last_updated is the last time the remediation was performed or attempted"
        },
        "remediationDetails": {
          "type": "string",
          "title": "remediation_details is the description of the remediation attempt if any"
        },
        "ruleTypeName": {
          "type": "string",
          "title": "rule_type_name is the name of the rule"
        },
        "ruleDescriptionName": {
          "type": "string",
          "title": "rule_description_name is the name to describe the rule"
        },
        "alert": {
          "$ref": "#/definitions/v1EvalResultAlert",
          "title": "alert holds the alert details if the rule generated an alert in an external system"
        },
        "severity": {
          "$ref": "#/definitions/v1Severity",
          "title": "severity is the severity of the rule"
        },
        "ruleEvaluationId": {
          "type": "string",
          "title": "rule_evaluation_id is the id of the rule evaluation"
        },
        "remediationUrl": {
          "type": "string",
          "title": "remediation_url is a url to get more data about a remediation, for PRs is the link to the PR"
        },
        "ruleDisplayName": {
          "type": "string",
          "title": "rule_display_name captures the display name of the rule"
        }
      },
      "title": "get the status of the rules for a given profile"
    },
    "v1Severity": {
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/v1SeverityValue",
          "description": "value is the severity value."
        }
      },
      "description": "Severity defines the severity of the rule."
    },
    "v1SeverityValue": {
      "type": "string",
      "enum": [
        "VALUE_UNSPECIFIED",
        "VALUE_UNKNOWN",
        "VALUE_INFO",
        "VALUE_LOW",
        "VALUE_MEDIUM",
        "VALUE_HIGH",
        "VALUE_CRITICAL"
      ],
      "default": "VALUE_UNSPECIFIED",
      "description": "Value enumerates the severity values.\n\n - VALUE_UNKNOWN: unknown severity means that the severity is unknown or hasn't\nbeen set.\n - VALUE_INFO: info severity means that the severity is informational and\ndoes not incur risk.\n - VALUE_LOW: low severity means that the severity is low and does not\nincur significant risk.\n - VALUE_MEDIUM: medium severity means that the severity is medium and may\nincur some risk.\n - VALUE_HIGH: high severity means that the severity is high and may incur\nsignificant risk.\n - VALUE_CRITICAL: critical severity means that the severity is critical and\nrequires immediate attention."
    },
    "v1alphaEvaluationHistory": {
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/v1alphaEvaluationHistoryEntity",
          "description": "entity contains details of the entity which was evaluated."
        },
        "rule": {
          "$ref": "#/definitions/v1alphaEvaluationHistoryRule",
          "description": "rule contains details of the rule which the entity was evaluated against."
        },
        "status": {
          "$ref": "#/definitions/v1alphaEvaluationHistoryStatus",
          "description": "status contains the evaluation status."
        },
        "alert": {
          "$ref": "#/definitions/v1alphaEvaluationHistoryAlert",
          "description": "alert contains details of the alerts for this evaluation."
        },
        "remediation": {
          "$ref": "#/definitions/v1alphaEvaluationHistoryRemediation",
          "description": "remediation contains details of the remediation for this evaluation."
        }
      }
    },
    "v1alphaEvaluationHistoryAlert": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "description": "status is one of (on, off, error, skipped, not available)\nnot using enums to mirror the behaviour of the existing API contracts."
        },
        "details": {
          "type": "string",
          "description": "details contains optional details about the alert.\nthe structure and contents are alert specific, and are subject to change."
        }
      }
    },
    "v1alphaEvaluationHistoryEntity": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "id is the ID of the entity."
        },
        "type": {
          "$ref": "#/definitions/v1Entity",
          "description": "type is the entity type."
        },
        "name": {
          "type": "string",
          "description": "name is the entity name."
        }
      }
    },
    "v1alphaEvaluationHistoryRemediation": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "description": "status is one of (success, error, failure, skipped, not available)\nnot using enums to mirror the behaviour of the existing API contracts."
        },
        "details": {
          "type": "string",
          "description": "details contains optional details about the remediation.\nthe structure and contents are remediation specific, and are subject to change."
        }
      }
    },
    "v1alphaEvaluationHistoryRule": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "name is the name of the rule instance."
        },
        "type": {
          "type": "string",
          "description": "type is the name of the rule type."
        },
        "profile": {
          "type": "string",
          "description": "profile is the name of the profile which contains the rule."
        }
      }
    },
    "v1alphaEvaluationHistoryStatus": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "description": "status is one of (success, error, failure, skipped)\nnot using enums to mirror the behaviour of the existing API contracts."
        },
        "details": {
          "type": "string",
          "description": "details contains optional details about the evaluation.\nthe structure and contents are rule type specific, and are subject to change."
        }
      }
    },
    "v1alphaListEvaluationHistoryResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alphaEvaluationHistory"
          },
          "description": "List of records retrieved."
        },
        "page": {
          "$ref": "#/definitions/v1CursorPage",
          "description": "Metadata of the current page and pointers to next and/or\nprevious pages."
        }
      },
      "description": "ListEvaluationHistoryResponse represents a response message for the\nListEvaluationHistory RPC.\n\nIt ships a collection of records retrieved and pointers to get to\nthe next and/or previous pages of data."
    }
  }
}
