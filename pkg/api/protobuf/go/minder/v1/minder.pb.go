//
// Copyright 2023 Stacklok, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: minder/v1/minder.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	httpbody "google.golang.org/genproto/googleapis/api/httpbody"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	descriptorpb "google.golang.org/protobuf/types/descriptorpb"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ObjectOwner int32

const (
	ObjectOwner_OBJECT_OWNER_UNSPECIFIED  ObjectOwner = 0
	ObjectOwner_OBJECT_OWNER_ORGANIZATION ObjectOwner = 1
	ObjectOwner_OBJECT_OWNER_PROJECT      ObjectOwner = 2
	ObjectOwner_OBJECT_OWNER_USER         ObjectOwner = 3
)

// Enum value maps for ObjectOwner.
var (
	ObjectOwner_name = map[int32]string{
		0: "OBJECT_OWNER_UNSPECIFIED",
		1: "OBJECT_OWNER_ORGANIZATION",
		2: "OBJECT_OWNER_PROJECT",
		3: "OBJECT_OWNER_USER",
	}
	ObjectOwner_value = map[string]int32{
		"OBJECT_OWNER_UNSPECIFIED":  0,
		"OBJECT_OWNER_ORGANIZATION": 1,
		"OBJECT_OWNER_PROJECT":      2,
		"OBJECT_OWNER_USER":         3,
	}
)

func (x ObjectOwner) Enum() *ObjectOwner {
	p := new(ObjectOwner)
	*p = x
	return p
}

func (x ObjectOwner) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ObjectOwner) Descriptor() protoreflect.EnumDescriptor {
	return file_minder_v1_minder_proto_enumTypes[0].Descriptor()
}

func (ObjectOwner) Type() protoreflect.EnumType {
	return &file_minder_v1_minder_proto_enumTypes[0]
}

func (x ObjectOwner) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ObjectOwner.Descriptor instead.
func (ObjectOwner) EnumDescriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{0}
}

type DepEcosystem int32

const (
	DepEcosystem_DEP_ECOSYSTEM_UNSPECIFIED DepEcosystem = 0
	DepEcosystem_DEP_ECOSYSTEM_NPM         DepEcosystem = 1
	DepEcosystem_DEP_ECOSYSTEM_GO          DepEcosystem = 2
	DepEcosystem_DEP_ECOSYSTEM_PYPI        DepEcosystem = 3
)

// Enum value maps for DepEcosystem.
var (
	DepEcosystem_name = map[int32]string{
		0: "DEP_ECOSYSTEM_UNSPECIFIED",
		1: "DEP_ECOSYSTEM_NPM",
		2: "DEP_ECOSYSTEM_GO",
		3: "DEP_ECOSYSTEM_PYPI",
	}
	DepEcosystem_value = map[string]int32{
		"DEP_ECOSYSTEM_UNSPECIFIED": 0,
		"DEP_ECOSYSTEM_NPM":         1,
		"DEP_ECOSYSTEM_GO":          2,
		"DEP_ECOSYSTEM_PYPI":        3,
	}
)

func (x DepEcosystem) Enum() *DepEcosystem {
	p := new(DepEcosystem)
	*p = x
	return p
}

func (x DepEcosystem) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DepEcosystem) Descriptor() protoreflect.EnumDescriptor {
	return file_minder_v1_minder_proto_enumTypes[1].Descriptor()
}

func (DepEcosystem) Type() protoreflect.EnumType {
	return &file_minder_v1_minder_proto_enumTypes[1]
}

func (x DepEcosystem) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DepEcosystem.Descriptor instead.
func (DepEcosystem) EnumDescriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{1}
}

// Entity defines the entity that is supported by the provider.
type Entity int32

const (
	Entity_ENTITY_UNSPECIFIED        Entity = 0
	Entity_ENTITY_REPOSITORIES       Entity = 1
	Entity_ENTITY_BUILD_ENVIRONMENTS Entity = 2
	Entity_ENTITY_ARTIFACTS          Entity = 3
	Entity_ENTITY_PULL_REQUESTS      Entity = 4
)

// Enum value maps for Entity.
var (
	Entity_name = map[int32]string{
		0: "ENTITY_UNSPECIFIED",
		1: "ENTITY_REPOSITORIES",
		2: "ENTITY_BUILD_ENVIRONMENTS",
		3: "ENTITY_ARTIFACTS",
		4: "ENTITY_PULL_REQUESTS",
	}
	Entity_value = map[string]int32{
		"ENTITY_UNSPECIFIED":        0,
		"ENTITY_REPOSITORIES":       1,
		"ENTITY_BUILD_ENVIRONMENTS": 2,
		"ENTITY_ARTIFACTS":          3,
		"ENTITY_PULL_REQUESTS":      4,
	}
)

func (x Entity) Enum() *Entity {
	p := new(Entity)
	*p = x
	return p
}

func (x Entity) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Entity) Descriptor() protoreflect.EnumDescriptor {
	return file_minder_v1_minder_proto_enumTypes[2].Descriptor()
}

func (Entity) Type() protoreflect.EnumType {
	return &file_minder_v1_minder_proto_enumTypes[2]
}

func (x Entity) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Entity.Descriptor instead.
func (Entity) EnumDescriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{2}
}

type RpcOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Anonymous     bool        `protobuf:"varint,1,opt,name=anonymous,proto3" json:"anonymous,omitempty"`
	NoLog         bool        `protobuf:"varint,2,opt,name=no_log,json=noLog,proto3" json:"no_log,omitempty"`
	OwnerOnly     bool        `protobuf:"varint,3,opt,name=owner_only,json=ownerOnly,proto3" json:"owner_only,omitempty"`
	RootAdminOnly bool        `protobuf:"varint,4,opt,name=root_admin_only,json=rootAdminOnly,proto3" json:"root_admin_only,omitempty"`
	AuthScope     ObjectOwner `protobuf:"varint,5,opt,name=auth_scope,json=authScope,proto3,enum=minder.v1.ObjectOwner" json:"auth_scope,omitempty"`
}

func (x *RpcOptions) Reset() {
	*x = RpcOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RpcOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcOptions) ProtoMessage() {}

func (x *RpcOptions) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcOptions.ProtoReflect.Descriptor instead.
func (*RpcOptions) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{0}
}

func (x *RpcOptions) GetAnonymous() bool {
	if x != nil {
		return x.Anonymous
	}
	return false
}

func (x *RpcOptions) GetNoLog() bool {
	if x != nil {
		return x.NoLog
	}
	return false
}

func (x *RpcOptions) GetOwnerOnly() bool {
	if x != nil {
		return x.OwnerOnly
	}
	return false
}

func (x *RpcOptions) GetRootAdminOnly() bool {
	if x != nil {
		return x.RootAdminOnly
	}
	return false
}

func (x *RpcOptions) GetAuthScope() ObjectOwner {
	if x != nil {
		return x.AuthScope
	}
	return ObjectOwner_OBJECT_OWNER_UNSPECIFIED
}

type ListArtifactsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Provider  string   `protobuf:"bytes,1,opt,name=provider,proto3" json:"provider,omitempty"`
	ProjectId string   `protobuf:"bytes,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Context   *Context `protobuf:"bytes,3,opt,name=context,proto3" json:"context,omitempty"`
	From      string   `protobuf:"bytes,4,opt,name=from,proto3" json:"from,omitempty"`
}

func (x *ListArtifactsRequest) Reset() {
	*x = ListArtifactsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListArtifactsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListArtifactsRequest) ProtoMessage() {}

func (x *ListArtifactsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListArtifactsRequest.ProtoReflect.Descriptor instead.
func (*ListArtifactsRequest) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{1}
}

func (x *ListArtifactsRequest) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *ListArtifactsRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *ListArtifactsRequest) GetContext() *Context {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *ListArtifactsRequest) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

type ListArtifactsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*Artifact `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
}

func (x *ListArtifactsResponse) Reset() {
	*x = ListArtifactsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListArtifactsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListArtifactsResponse) ProtoMessage() {}

func (x *ListArtifactsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListArtifactsResponse.ProtoReflect.Descriptor instead.
func (*ListArtifactsResponse) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{2}
}

func (x *ListArtifactsResponse) GetResults() []*Artifact {
	if x != nil {
		return x.Results
	}
	return nil
}

type Artifact struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ArtifactPk string                 `protobuf:"bytes,1,opt,name=artifact_pk,json=artifactPk,proto3" json:"artifact_pk,omitempty"`
	Owner      string                 `protobuf:"bytes,2,opt,name=owner,proto3" json:"owner,omitempty"`
	Name       string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Type       string                 `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	Visibility string                 `protobuf:"bytes,5,opt,name=visibility,proto3" json:"visibility,omitempty"`
	Repository string                 `protobuf:"bytes,6,opt,name=repository,proto3" json:"repository,omitempty"`
	Versions   []*ArtifactVersion     `protobuf:"bytes,7,rep,name=versions,proto3" json:"versions,omitempty"`
	CreatedAt  *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *Artifact) Reset() {
	*x = Artifact{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Artifact) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Artifact) ProtoMessage() {}

func (x *Artifact) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Artifact.ProtoReflect.Descriptor instead.
func (*Artifact) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{3}
}

func (x *Artifact) GetArtifactPk() string {
	if x != nil {
		return x.ArtifactPk
	}
	return ""
}

func (x *Artifact) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *Artifact) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Artifact) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Artifact) GetVisibility() string {
	if x != nil {
		return x.Visibility
	}
	return ""
}

func (x *Artifact) GetRepository() string {
	if x != nil {
		return x.Repository
	}
	return ""
}

func (x *Artifact) GetVersions() []*ArtifactVersion {
	if x != nil {
		return x.Versions
	}
	return nil
}

func (x *Artifact) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type GithubWorkflow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Repository string `protobuf:"bytes,2,opt,name=repository,proto3" json:"repository,omitempty"`
	CommitSha  string `protobuf:"bytes,3,opt,name=commit_sha,json=commitSha,proto3" json:"commit_sha,omitempty"`
	Trigger    string `protobuf:"bytes,4,opt,name=trigger,proto3" json:"trigger,omitempty"`
}

func (x *GithubWorkflow) Reset() {
	*x = GithubWorkflow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GithubWorkflow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GithubWorkflow) ProtoMessage() {}

func (x *GithubWorkflow) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GithubWorkflow.ProtoReflect.Descriptor instead.
func (*GithubWorkflow) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{4}
}

func (x *GithubWorkflow) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GithubWorkflow) GetRepository() string {
	if x != nil {
		return x.Repository
	}
	return ""
}

func (x *GithubWorkflow) GetCommitSha() string {
	if x != nil {
		return x.CommitSha
	}
	return ""
}

func (x *GithubWorkflow) GetTrigger() string {
	if x != nil {
		return x.Trigger
	}
	return ""
}

type SignatureVerification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsSigned         bool                   `protobuf:"varint,1,opt,name=is_signed,json=isSigned,proto3" json:"is_signed,omitempty"`
	IsVerified       bool                   `protobuf:"varint,2,opt,name=is_verified,json=isVerified,proto3" json:"is_verified,omitempty"`
	IsBundleVerified bool                   `protobuf:"varint,3,opt,name=is_bundle_verified,json=isBundleVerified,proto3" json:"is_bundle_verified,omitempty"`
	CertIdentity     *string                `protobuf:"bytes,4,opt,name=cert_identity,json=certIdentity,proto3,oneof" json:"cert_identity,omitempty"`
	CertIssuer       *string                `protobuf:"bytes,5,opt,name=cert_issuer,json=certIssuer,proto3,oneof" json:"cert_issuer,omitempty"`
	RekorLogId       *string                `protobuf:"bytes,6,opt,name=rekor_log_id,json=rekorLogId,proto3,oneof" json:"rekor_log_id,omitempty"`
	RekorLogIndex    *int64                 `protobuf:"varint,7,opt,name=rekor_log_index,json=rekorLogIndex,proto3,oneof" json:"rekor_log_index,omitempty"`
	SignatureTime    *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=signature_time,json=signatureTime,proto3,oneof" json:"signature_time,omitempty"`
}

func (x *SignatureVerification) Reset() {
	*x = SignatureVerification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignatureVerification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignatureVerification) ProtoMessage() {}

func (x *SignatureVerification) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignatureVerification.ProtoReflect.Descriptor instead.
func (*SignatureVerification) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{5}
}

func (x *SignatureVerification) GetIsSigned() bool {
	if x != nil {
		return x.IsSigned
	}
	return false
}

func (x *SignatureVerification) GetIsVerified() bool {
	if x != nil {
		return x.IsVerified
	}
	return false
}

func (x *SignatureVerification) GetIsBundleVerified() bool {
	if x != nil {
		return x.IsBundleVerified
	}
	return false
}

func (x *SignatureVerification) GetCertIdentity() string {
	if x != nil && x.CertIdentity != nil {
		return *x.CertIdentity
	}
	return ""
}

func (x *SignatureVerification) GetCertIssuer() string {
	if x != nil && x.CertIssuer != nil {
		return *x.CertIssuer
	}
	return ""
}

func (x *SignatureVerification) GetRekorLogId() string {
	if x != nil && x.RekorLogId != nil {
		return *x.RekorLogId
	}
	return ""
}

func (x *SignatureVerification) GetRekorLogIndex() int64 {
	if x != nil && x.RekorLogIndex != nil {
		return *x.RekorLogIndex
	}
	return 0
}

func (x *SignatureVerification) GetSignatureTime() *timestamppb.Timestamp {
	if x != nil {
		return x.SignatureTime
	}
	return nil
}

type ArtifactVersion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VersionId             int64                  `protobuf:"varint,1,opt,name=version_id,json=versionId,proto3" json:"version_id,omitempty"`
	Tags                  []string               `protobuf:"bytes,2,rep,name=tags,proto3" json:"tags,omitempty"`
	Sha                   string                 `protobuf:"bytes,3,opt,name=sha,proto3" json:"sha,omitempty"`
	SignatureVerification *SignatureVerification `protobuf:"bytes,4,opt,name=signature_verification,json=signatureVerification,proto3" json:"signature_verification,omitempty"`
	GithubWorkflow        *GithubWorkflow        `protobuf:"bytes,5,opt,name=github_workflow,json=githubWorkflow,proto3,oneof" json:"github_workflow,omitempty"`
	CreatedAt             *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *ArtifactVersion) Reset() {
	*x = ArtifactVersion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArtifactVersion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArtifactVersion) ProtoMessage() {}

func (x *ArtifactVersion) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArtifactVersion.ProtoReflect.Descriptor instead.
func (*ArtifactVersion) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{6}
}

func (x *ArtifactVersion) GetVersionId() int64 {
	if x != nil {
		return x.VersionId
	}
	return 0
}

func (x *ArtifactVersion) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *ArtifactVersion) GetSha() string {
	if x != nil {
		return x.Sha
	}
	return ""
}

func (x *ArtifactVersion) GetSignatureVerification() *SignatureVerification {
	if x != nil {
		return x.SignatureVerification
	}
	return nil
}

func (x *ArtifactVersion) GetGithubWorkflow() *GithubWorkflow {
	if x != nil {
		return x.GithubWorkflow
	}
	return nil
}

func (x *ArtifactVersion) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type GetArtifactByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	LatestVersions int32    `protobuf:"varint,5,opt,name=latest_versions,json=latestVersions,proto3" json:"latest_versions,omitempty"`
	Tag            string   `protobuf:"bytes,6,opt,name=tag,proto3" json:"tag,omitempty"`
	Context        *Context `protobuf:"bytes,7,opt,name=context,proto3" json:"context,omitempty"`
}

func (x *GetArtifactByIdRequest) Reset() {
	*x = GetArtifactByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetArtifactByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArtifactByIdRequest) ProtoMessage() {}

func (x *GetArtifactByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArtifactByIdRequest.ProtoReflect.Descriptor instead.
func (*GetArtifactByIdRequest) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{7}
}

func (x *GetArtifactByIdRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetArtifactByIdRequest) GetLatestVersions() int32 {
	if x != nil {
		return x.LatestVersions
	}
	return 0
}

func (x *GetArtifactByIdRequest) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *GetArtifactByIdRequest) GetContext() *Context {
	if x != nil {
		return x.Context
	}
	return nil
}

type GetArtifactByIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Artifact *Artifact          `protobuf:"bytes,1,opt,name=artifact,proto3" json:"artifact,omitempty"`
	Versions []*ArtifactVersion `protobuf:"bytes,2,rep,name=versions,proto3" json:"versions,omitempty"`
}

func (x *GetArtifactByIdResponse) Reset() {
	*x = GetArtifactByIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetArtifactByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArtifactByIdResponse) ProtoMessage() {}

func (x *GetArtifactByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArtifactByIdResponse.ProtoReflect.Descriptor instead.
func (*GetArtifactByIdResponse) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{8}
}

func (x *GetArtifactByIdResponse) GetArtifact() *Artifact {
	if x != nil {
		return x.Artifact
	}
	return nil
}

func (x *GetArtifactByIdResponse) GetVersions() []*ArtifactVersion {
	if x != nil {
		return x.Versions
	}
	return nil
}

type PullRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url       string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`                              // The full URL to the PR
	CommitSha string `protobuf:"bytes,2,opt,name=commit_sha,json=commitSha,proto3" json:"commit_sha,omitempty"` // Commit SHA of the PR HEAD. Will be useful to submit a review
	Number    int32  `protobuf:"varint,3,opt,name=number,proto3" json:"number,omitempty"`                       // The sequential PR number (not the DB PK!)
	RepoOwner string `protobuf:"bytes,4,opt,name=repo_owner,json=repoOwner,proto3" json:"repo_owner,omitempty"` // The owner of the repo, will be used to submit a review
	RepoName  string `protobuf:"bytes,5,opt,name=repo_name,json=repoName,proto3" json:"repo_name,omitempty"`    // The name of the repo, will be used to submit a review
	AuthorId  int64  `protobuf:"varint,6,opt,name=author_id,json=authorId,proto3" json:"author_id,omitempty"`   // The author of the PR, will be used to check if we can request changes
	Action    string `protobuf:"bytes,7,opt,name=action,proto3" json:"action,omitempty"`                        // The action that triggered the webhook
}

func (x *PullRequest) Reset() {
	*x = PullRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PullRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullRequest) ProtoMessage() {}

func (x *PullRequest) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullRequest.ProtoReflect.Descriptor instead.
func (*PullRequest) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{9}
}

func (x *PullRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *PullRequest) GetCommitSha() string {
	if x != nil {
		return x.CommitSha
	}
	return ""
}

func (x *PullRequest) GetNumber() int32 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *PullRequest) GetRepoOwner() string {
	if x != nil {
		return x.RepoOwner
	}
	return ""
}

func (x *PullRequest) GetRepoName() string {
	if x != nil {
		return x.RepoName
	}
	return ""
}

func (x *PullRequest) GetAuthorId() int64 {
	if x != nil {
		return x.AuthorId
	}
	return 0
}

func (x *PullRequest) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

type Dependency struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ecosystem DepEcosystem `protobuf:"varint,1,opt,name=ecosystem,proto3,enum=minder.v1.DepEcosystem" json:"ecosystem,omitempty"`
	Name      string       `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Version   string       `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *Dependency) Reset() {
	*x = Dependency{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Dependency) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Dependency) ProtoMessage() {}

func (x *Dependency) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Dependency.ProtoReflect.Descriptor instead.
func (*Dependency) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{10}
}

func (x *Dependency) GetEcosystem() DepEcosystem {
	if x != nil {
		return x.Ecosystem
	}
	return DepEcosystem_DEP_ECOSYSTEM_UNSPECIFIED
}

func (x *Dependency) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Dependency) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type PrDependencies struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pr   *PullRequest                           `protobuf:"bytes,1,opt,name=pr,proto3" json:"pr,omitempty"`
	Deps []*PrDependencies_ContextualDependency `protobuf:"bytes,2,rep,name=deps,proto3" json:"deps,omitempty"`
}

func (x *PrDependencies) Reset() {
	*x = PrDependencies{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrDependencies) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrDependencies) ProtoMessage() {}

func (x *PrDependencies) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrDependencies.ProtoReflect.Descriptor instead.
func (*PrDependencies) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{11}
}

func (x *PrDependencies) GetPr() *PullRequest {
	if x != nil {
		return x.Pr
	}
	return nil
}

func (x *PrDependencies) GetDeps() []*PrDependencies_ContextualDependency {
	if x != nil {
		return x.Deps
	}
	return nil
}

type CheckHealthRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CheckHealthRequest) Reset() {
	*x = CheckHealthRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckHealthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckHealthRequest) ProtoMessage() {}

func (x *CheckHealthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckHealthRequest.ProtoReflect.Descriptor instead.
func (*CheckHealthRequest) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{12}
}

type CheckHealthResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *CheckHealthResponse) Reset() {
	*x = CheckHealthResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckHealthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckHealthResponse) ProtoMessage() {}

func (x *CheckHealthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckHealthResponse.ProtoReflect.Descriptor instead.
func (*CheckHealthResponse) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{13}
}

func (x *CheckHealthResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type GetAuthorizationURLRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Provider  string   `protobuf:"bytes,1,opt,name=provider,proto3" json:"provider,omitempty"`
	ProjectId string   `protobuf:"bytes,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Cli       bool     `protobuf:"varint,3,opt,name=cli,proto3" json:"cli,omitempty"`
	Port      int32    `protobuf:"varint,4,opt,name=port,proto3" json:"port,omitempty"`
	Owner     *string  `protobuf:"bytes,5,opt,name=owner,proto3,oneof" json:"owner,omitempty"`
	Context   *Context `protobuf:"bytes,6,opt,name=context,proto3" json:"context,omitempty"`
}

func (x *GetAuthorizationURLRequest) Reset() {
	*x = GetAuthorizationURLRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAuthorizationURLRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAuthorizationURLRequest) ProtoMessage() {}

func (x *GetAuthorizationURLRequest) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAuthorizationURLRequest.ProtoReflect.Descriptor instead.
func (*GetAuthorizationURLRequest) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{14}
}

func (x *GetAuthorizationURLRequest) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *GetAuthorizationURLRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *GetAuthorizationURLRequest) GetCli() bool {
	if x != nil {
		return x.Cli
	}
	return false
}

func (x *GetAuthorizationURLRequest) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *GetAuthorizationURLRequest) GetOwner() string {
	if x != nil && x.Owner != nil {
		return *x.Owner
	}
	return ""
}

func (x *GetAuthorizationURLRequest) GetContext() *Context {
	if x != nil {
		return x.Context
	}
	return nil
}

type GetAuthorizationURLResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *GetAuthorizationURLResponse) Reset() {
	*x = GetAuthorizationURLResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAuthorizationURLResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAuthorizationURLResponse) ProtoMessage() {}

func (x *GetAuthorizationURLResponse) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAuthorizationURLResponse.ProtoReflect.Descriptor instead.
func (*GetAuthorizationURLResponse) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{15}
}

func (x *GetAuthorizationURLResponse) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type ExchangeCodeForTokenCLIRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Provider    string   `protobuf:"bytes,1,opt,name=provider,proto3" json:"provider,omitempty"`
	ProjectId   string   `protobuf:"bytes,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Code        string   `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
	State       string   `protobuf:"bytes,4,opt,name=state,proto3" json:"state,omitempty"`
	RedirectUri string   `protobuf:"bytes,5,opt,name=redirect_uri,json=redirectUri,proto3" json:"redirect_uri,omitempty"`
	Context     *Context `protobuf:"bytes,6,opt,name=context,proto3" json:"context,omitempty"`
}

func (x *ExchangeCodeForTokenCLIRequest) Reset() {
	*x = ExchangeCodeForTokenCLIRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExchangeCodeForTokenCLIRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExchangeCodeForTokenCLIRequest) ProtoMessage() {}

func (x *ExchangeCodeForTokenCLIRequest) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExchangeCodeForTokenCLIRequest.ProtoReflect.Descriptor instead.
func (*ExchangeCodeForTokenCLIRequest) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{16}
}

func (x *ExchangeCodeForTokenCLIRequest) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *ExchangeCodeForTokenCLIRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *ExchangeCodeForTokenCLIRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ExchangeCodeForTokenCLIRequest) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *ExchangeCodeForTokenCLIRequest) GetRedirectUri() string {
	if x != nil {
		return x.RedirectUri
	}
	return ""
}

func (x *ExchangeCodeForTokenCLIRequest) GetContext() *Context {
	if x != nil {
		return x.Context
	}
	return nil
}

type StoreProviderTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Provider    string   `protobuf:"bytes,1,opt,name=provider,proto3" json:"provider,omitempty"`
	ProjectId   string   `protobuf:"bytes,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	AccessToken string   `protobuf:"bytes,3,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	Owner       *string  `protobuf:"bytes,4,opt,name=owner,proto3,oneof" json:"owner,omitempty"`
	Context     *Context `protobuf:"bytes,5,opt,name=context,proto3" json:"context,omitempty"`
}

func (x *StoreProviderTokenRequest) Reset() {
	*x = StoreProviderTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoreProviderTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreProviderTokenRequest) ProtoMessage() {}

func (x *StoreProviderTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreProviderTokenRequest.ProtoReflect.Descriptor instead.
func (*StoreProviderTokenRequest) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{17}
}

func (x *StoreProviderTokenRequest) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *StoreProviderTokenRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *StoreProviderTokenRequest) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *StoreProviderTokenRequest) GetOwner() string {
	if x != nil && x.Owner != nil {
		return *x.Owner
	}
	return ""
}

func (x *StoreProviderTokenRequest) GetContext() *Context {
	if x != nil {
		return x.Context
	}
	return nil
}

type StoreProviderTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StoreProviderTokenResponse) Reset() {
	*x = StoreProviderTokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoreProviderTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreProviderTokenResponse) ProtoMessage() {}

func (x *StoreProviderTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreProviderTokenResponse.ProtoReflect.Descriptor instead.
func (*StoreProviderTokenResponse) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{18}
}

type ExchangeCodeForTokenWEBRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Provider    string   `protobuf:"bytes,1,opt,name=provider,proto3" json:"provider,omitempty"`
	ProjectId   string   `protobuf:"bytes,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Code        string   `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
	RedirectUri string   `protobuf:"bytes,4,opt,name=redirect_uri,json=redirectUri,proto3" json:"redirect_uri,omitempty"`
	Context     *Context `protobuf:"bytes,5,opt,name=context,proto3" json:"context,omitempty"`
}

func (x *ExchangeCodeForTokenWEBRequest) Reset() {
	*x = ExchangeCodeForTokenWEBRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExchangeCodeForTokenWEBRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExchangeCodeForTokenWEBRequest) ProtoMessage() {}

func (x *ExchangeCodeForTokenWEBRequest) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExchangeCodeForTokenWEBRequest.ProtoReflect.Descriptor instead.
func (*ExchangeCodeForTokenWEBRequest) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{19}
}

func (x *ExchangeCodeForTokenWEBRequest) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *ExchangeCodeForTokenWEBRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *ExchangeCodeForTokenWEBRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ExchangeCodeForTokenWEBRequest) GetRedirectUri() string {
	if x != nil {
		return x.RedirectUri
	}
	return ""
}

func (x *ExchangeCodeForTokenWEBRequest) GetContext() *Context {
	if x != nil {
		return x.Context
	}
	return nil
}

type ExchangeCodeForTokenWEBResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken string `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	TokenType   string `protobuf:"bytes,2,opt,name=token_type,json=tokenType,proto3" json:"token_type,omitempty"`
	ExpiresIn   int64  `protobuf:"varint,3,opt,name=expires_in,json=expiresIn,proto3" json:"expires_in,omitempty"`
	Status      string `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *ExchangeCodeForTokenWEBResponse) Reset() {
	*x = ExchangeCodeForTokenWEBResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExchangeCodeForTokenWEBResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExchangeCodeForTokenWEBResponse) ProtoMessage() {}

func (x *ExchangeCodeForTokenWEBResponse) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExchangeCodeForTokenWEBResponse.ProtoReflect.Descriptor instead.
func (*ExchangeCodeForTokenWEBResponse) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{20}
}

func (x *ExchangeCodeForTokenWEBResponse) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *ExchangeCodeForTokenWEBResponse) GetTokenType() string {
	if x != nil {
		return x.TokenType
	}
	return ""
}

func (x *ExchangeCodeForTokenWEBResponse) GetExpiresIn() int64 {
	if x != nil {
		return x.ExpiresIn
	}
	return 0
}

func (x *ExchangeCodeForTokenWEBResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type RevokeOauthTokensRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RevokeOauthTokensRequest) Reset() {
	*x = RevokeOauthTokensRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RevokeOauthTokensRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokeOauthTokensRequest) ProtoMessage() {}

func (x *RevokeOauthTokensRequest) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokeOauthTokensRequest.ProtoReflect.Descriptor instead.
func (*RevokeOauthTokensRequest) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{21}
}

type RevokeOauthTokensResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RevokedTokens int32 `protobuf:"varint,1,opt,name=revoked_tokens,json=revokedTokens,proto3" json:"revoked_tokens,omitempty"`
}

func (x *RevokeOauthTokensResponse) Reset() {
	*x = RevokeOauthTokensResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RevokeOauthTokensResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokeOauthTokensResponse) ProtoMessage() {}

func (x *RevokeOauthTokensResponse) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokeOauthTokensResponse.ProtoReflect.Descriptor instead.
func (*RevokeOauthTokensResponse) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{22}
}

func (x *RevokeOauthTokensResponse) GetRevokedTokens() int32 {
	if x != nil {
		return x.RevokedTokens
	}
	return 0
}

type RevokeOauthProjectTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Provider  string `protobuf:"bytes,1,opt,name=provider,proto3" json:"provider,omitempty"`
	ProjectId string `protobuf:"bytes,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
}

func (x *RevokeOauthProjectTokenRequest) Reset() {
	*x = RevokeOauthProjectTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RevokeOauthProjectTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokeOauthProjectTokenRequest) ProtoMessage() {}

func (x *RevokeOauthProjectTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokeOauthProjectTokenRequest.ProtoReflect.Descriptor instead.
func (*RevokeOauthProjectTokenRequest) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{23}
}

func (x *RevokeOauthProjectTokenRequest) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *RevokeOauthProjectTokenRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

type RevokeOauthProjectTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RevokeOauthProjectTokenResponse) Reset() {
	*x = RevokeOauthProjectTokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RevokeOauthProjectTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokeOauthProjectTokenResponse) ProtoMessage() {}

func (x *RevokeOauthProjectTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokeOauthProjectTokenResponse.ProtoReflect.Descriptor instead.
func (*RevokeOauthProjectTokenResponse) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{24}
}

type RefreshTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RefreshTokenRequest) Reset() {
	*x = RefreshTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefreshTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshTokenRequest) ProtoMessage() {}

func (x *RefreshTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshTokenRequest.ProtoReflect.Descriptor instead.
func (*RefreshTokenRequest) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{25}
}

type RefreshTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken          string `protobuf:"bytes,2,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	AccessTokenExpiresIn int64  `protobuf:"varint,3,opt,name=access_token_expires_in,json=accessTokenExpiresIn,proto3" json:"access_token_expires_in,omitempty"`
}

func (x *RefreshTokenResponse) Reset() {
	*x = RefreshTokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefreshTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshTokenResponse) ProtoMessage() {}

func (x *RefreshTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshTokenResponse.ProtoReflect.Descriptor instead.
func (*RefreshTokenResponse) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{26}
}

func (x *RefreshTokenResponse) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *RefreshTokenResponse) GetAccessTokenExpiresIn() int64 {
	if x != nil {
		return x.AccessTokenExpiresIn
	}
	return 0
}

// Project API Objects
type Project struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId   string                 `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Name        string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Description string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	CreatedAt   *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt   *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *Project) Reset() {
	*x = Project{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Project) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Project) ProtoMessage() {}

func (x *Project) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Project.ProtoReflect.Descriptor instead.
func (*Project) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{27}
}

func (x *Project) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *Project) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Project) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Project) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Project) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type ListRemoteRepositoriesFromProviderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Provider  string   `protobuf:"bytes,1,opt,name=provider,proto3" json:"provider,omitempty"`
	ProjectId string   `protobuf:"bytes,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Context   *Context `protobuf:"bytes,3,opt,name=context,proto3" json:"context,omitempty"`
}

func (x *ListRemoteRepositoriesFromProviderRequest) Reset() {
	*x = ListRemoteRepositoriesFromProviderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRemoteRepositoriesFromProviderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRemoteRepositoriesFromProviderRequest) ProtoMessage() {}

func (x *ListRemoteRepositoriesFromProviderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRemoteRepositoriesFromProviderRequest.ProtoReflect.Descriptor instead.
func (*ListRemoteRepositoriesFromProviderRequest) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{28}
}

func (x *ListRemoteRepositoriesFromProviderRequest) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *ListRemoteRepositoriesFromProviderRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *ListRemoteRepositoriesFromProviderRequest) GetContext() *Context {
	if x != nil {
		return x.Context
	}
	return nil
}

type ListRemoteRepositoriesFromProviderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*UpstreamRepositoryRef `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
}

func (x *ListRemoteRepositoriesFromProviderResponse) Reset() {
	*x = ListRemoteRepositoriesFromProviderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRemoteRepositoriesFromProviderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRemoteRepositoriesFromProviderResponse) ProtoMessage() {}

func (x *ListRemoteRepositoriesFromProviderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRemoteRepositoriesFromProviderResponse.ProtoReflect.Descriptor instead.
func (*ListRemoteRepositoriesFromProviderResponse) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{29}
}

func (x *ListRemoteRepositoriesFromProviderResponse) GetResults() []*UpstreamRepositoryRef {
	if x != nil {
		return x.Results
	}
	return nil
}

type UpstreamRepositoryRef struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Owner  string `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty"`
	Name   string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	RepoId int32  `protobuf:"varint,3,opt,name=repo_id,json=repoId,proto3" json:"repo_id,omitempty"`
}

func (x *UpstreamRepositoryRef) Reset() {
	*x = UpstreamRepositoryRef{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpstreamRepositoryRef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpstreamRepositoryRef) ProtoMessage() {}

func (x *UpstreamRepositoryRef) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpstreamRepositoryRef.ProtoReflect.Descriptor instead.
func (*UpstreamRepositoryRef) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{30}
}

func (x *UpstreamRepositoryRef) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *UpstreamRepositoryRef) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpstreamRepositoryRef) GetRepoId() int32 {
	if x != nil {
		return x.RepoId
	}
	return 0
}

type Repository struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            *string                `protobuf:"bytes,1,opt,name=id,proto3,oneof" json:"id,omitempty"` // This is optional when returning remote repositories
	Context       *Context               `protobuf:"bytes,2,opt,name=context,proto3,oneof" json:"context,omitempty"`
	Owner         string                 `protobuf:"bytes,3,opt,name=owner,proto3" json:"owner,omitempty"`
	Name          string                 `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	RepoId        int32                  `protobuf:"varint,5,opt,name=repo_id,json=repoId,proto3" json:"repo_id,omitempty"`
	HookId        int64                  `protobuf:"varint,6,opt,name=hook_id,json=hookId,proto3" json:"hook_id,omitempty"`
	HookUrl       string                 `protobuf:"bytes,7,opt,name=hook_url,json=hookUrl,proto3" json:"hook_url,omitempty"`
	DeployUrl     string                 `protobuf:"bytes,8,opt,name=deploy_url,json=deployUrl,proto3" json:"deploy_url,omitempty"`
	CloneUrl      string                 `protobuf:"bytes,9,opt,name=clone_url,json=cloneUrl,proto3" json:"clone_url,omitempty"`
	HookName      string                 `protobuf:"bytes,10,opt,name=hook_name,json=hookName,proto3" json:"hook_name,omitempty"`
	HookType      string                 `protobuf:"bytes,11,opt,name=hook_type,json=hookType,proto3" json:"hook_type,omitempty"`
	HookUuid      string                 `protobuf:"bytes,12,opt,name=hook_uuid,json=hookUuid,proto3" json:"hook_uuid,omitempty"`
	IsPrivate     bool                   `protobuf:"varint,13,opt,name=is_private,json=isPrivate,proto3" json:"is_private,omitempty"`
	IsFork        bool                   `protobuf:"varint,14,opt,name=is_fork,json=isFork,proto3" json:"is_fork,omitempty"`
	Registered    bool                   `protobuf:"varint,15,opt,name=registered,proto3" json:"registered,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,16,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,17,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	DefaultBranch string                 `protobuf:"bytes,18,opt,name=default_branch,json=defaultBranch,proto3" json:"default_branch,omitempty"`
}

func (x *Repository) Reset() {
	*x = Repository{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Repository) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Repository) ProtoMessage() {}

func (x *Repository) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Repository.ProtoReflect.Descriptor instead.
func (*Repository) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{31}
}

func (x *Repository) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *Repository) GetContext() *Context {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *Repository) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *Repository) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Repository) GetRepoId() int32 {
	if x != nil {
		return x.RepoId
	}
	return 0
}

func (x *Repository) GetHookId() int64 {
	if x != nil {
		return x.HookId
	}
	return 0
}

func (x *Repository) GetHookUrl() string {
	if x != nil {
		return x.HookUrl
	}
	return ""
}

func (x *Repository) GetDeployUrl() string {
	if x != nil {
		return x.DeployUrl
	}
	return ""
}

func (x *Repository) GetCloneUrl() string {
	if x != nil {
		return x.CloneUrl
	}
	return ""
}

func (x *Repository) GetHookName() string {
	if x != nil {
		return x.HookName
	}
	return ""
}

func (x *Repository) GetHookType() string {
	if x != nil {
		return x.HookType
	}
	return ""
}

func (x *Repository) GetHookUuid() string {
	if x != nil {
		return x.HookUuid
	}
	return ""
}

func (x *Repository) GetIsPrivate() bool {
	if x != nil {
		return x.IsPrivate
	}
	return false
}

func (x *Repository) GetIsFork() bool {
	if x != nil {
		return x.IsFork
	}
	return false
}

func (x *Repository) GetRegistered() bool {
	if x != nil {
		return x.Registered
	}
	return false
}

func (x *Repository) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Repository) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Repository) GetDefaultBranch() string {
	if x != nil {
		return x.DefaultBranch
	}
	return ""
}

type RegisterRepositoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Provider   string                 `protobuf:"bytes,1,opt,name=provider,proto3" json:"provider,omitempty"`
	ProjectId  string                 `protobuf:"bytes,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Repository *UpstreamRepositoryRef `protobuf:"bytes,3,opt,name=repository,proto3" json:"repository,omitempty"`
	Context    *Context               `protobuf:"bytes,4,opt,name=context,proto3" json:"context,omitempty"`
}

func (x *RegisterRepositoryRequest) Reset() {
	*x = RegisterRepositoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterRepositoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterRepositoryRequest) ProtoMessage() {}

func (x *RegisterRepositoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterRepositoryRequest.ProtoReflect.Descriptor instead.
func (*RegisterRepositoryRequest) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{32}
}

func (x *RegisterRepositoryRequest) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *RegisterRepositoryRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *RegisterRepositoryRequest) GetRepository() *UpstreamRepositoryRef {
	if x != nil {
		return x.Repository
	}
	return nil
}

func (x *RegisterRepositoryRequest) GetContext() *Context {
	if x != nil {
		return x.Context
	}
	return nil
}

type RegisterRepoResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Repository *Repository                `protobuf:"bytes,1,opt,name=repository,proto3" json:"repository,omitempty"`
	Status     *RegisterRepoResult_Status `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *RegisterRepoResult) Reset() {
	*x = RegisterRepoResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterRepoResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterRepoResult) ProtoMessage() {}

func (x *RegisterRepoResult) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterRepoResult.ProtoReflect.Descriptor instead.
func (*RegisterRepoResult) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{33}
}

func (x *RegisterRepoResult) GetRepository() *Repository {
	if x != nil {
		return x.Repository
	}
	return nil
}

func (x *RegisterRepoResult) GetStatus() *RegisterRepoResult_Status {
	if x != nil {
		return x.Status
	}
	return nil
}

type RegisterRepositoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *RegisterRepoResult `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *RegisterRepositoryResponse) Reset() {
	*x = RegisterRepositoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterRepositoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterRepositoryResponse) ProtoMessage() {}

func (x *RegisterRepositoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterRepositoryResponse.ProtoReflect.Descriptor instead.
func (*RegisterRepositoryResponse) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{34}
}

func (x *RegisterRepositoryResponse) GetResult() *RegisterRepoResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type GetRepositoryByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RepositoryId string   `protobuf:"bytes,1,opt,name=repository_id,json=repositoryId,proto3" json:"repository_id,omitempty"`
	Context      *Context `protobuf:"bytes,2,opt,name=context,proto3" json:"context,omitempty"`
}

func (x *GetRepositoryByIdRequest) Reset() {
	*x = GetRepositoryByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRepositoryByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRepositoryByIdRequest) ProtoMessage() {}

func (x *GetRepositoryByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRepositoryByIdRequest.ProtoReflect.Descriptor instead.
func (*GetRepositoryByIdRequest) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{35}
}

func (x *GetRepositoryByIdRequest) GetRepositoryId() string {
	if x != nil {
		return x.RepositoryId
	}
	return ""
}

func (x *GetRepositoryByIdRequest) GetContext() *Context {
	if x != nil {
		return x.Context
	}
	return nil
}

type GetRepositoryByIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Repository *Repository `protobuf:"bytes,1,opt,name=repository,proto3" json:"repository,omitempty"`
}

func (x *GetRepositoryByIdResponse) Reset() {
	*x = GetRepositoryByIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRepositoryByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRepositoryByIdResponse) ProtoMessage() {}

func (x *GetRepositoryByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRepositoryByIdResponse.ProtoReflect.Descriptor instead.
func (*GetRepositoryByIdResponse) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{36}
}

func (x *GetRepositoryByIdResponse) GetRepository() *Repository {
	if x != nil {
		return x.Repository
	}
	return nil
}

type DeleteRepositoryByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RepositoryId string   `protobuf:"bytes,1,opt,name=repository_id,json=repositoryId,proto3" json:"repository_id,omitempty"`
	Context      *Context `protobuf:"bytes,2,opt,name=context,proto3" json:"context,omitempty"`
}

func (x *DeleteRepositoryByIdRequest) Reset() {
	*x = DeleteRepositoryByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRepositoryByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRepositoryByIdRequest) ProtoMessage() {}

func (x *DeleteRepositoryByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRepositoryByIdRequest.ProtoReflect.Descriptor instead.
func (*DeleteRepositoryByIdRequest) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{37}
}

func (x *DeleteRepositoryByIdRequest) GetRepositoryId() string {
	if x != nil {
		return x.RepositoryId
	}
	return ""
}

func (x *DeleteRepositoryByIdRequest) GetContext() *Context {
	if x != nil {
		return x.Context
	}
	return nil
}

type DeleteRepositoryByIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RepositoryId string `protobuf:"bytes,1,opt,name=repository_id,json=repositoryId,proto3" json:"repository_id,omitempty"`
}

func (x *DeleteRepositoryByIdResponse) Reset() {
	*x = DeleteRepositoryByIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRepositoryByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRepositoryByIdResponse) ProtoMessage() {}

func (x *DeleteRepositoryByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRepositoryByIdResponse.ProtoReflect.Descriptor instead.
func (*DeleteRepositoryByIdResponse) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{38}
}

func (x *DeleteRepositoryByIdResponse) GetRepositoryId() string {
	if x != nil {
		return x.RepositoryId
	}
	return ""
}

type GetRepositoryByNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Provider  string   `protobuf:"bytes,1,opt,name=provider,proto3" json:"provider,omitempty"`
	ProjectId string   `protobuf:"bytes,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Name      string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Context   *Context `protobuf:"bytes,4,opt,name=context,proto3" json:"context,omitempty"`
}

func (x *GetRepositoryByNameRequest) Reset() {
	*x = GetRepositoryByNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRepositoryByNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRepositoryByNameRequest) ProtoMessage() {}

func (x *GetRepositoryByNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRepositoryByNameRequest.ProtoReflect.Descriptor instead.
func (*GetRepositoryByNameRequest) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{39}
}

func (x *GetRepositoryByNameRequest) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *GetRepositoryByNameRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *GetRepositoryByNameRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetRepositoryByNameRequest) GetContext() *Context {
	if x != nil {
		return x.Context
	}
	return nil
}

type GetRepositoryByNameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Repository *Repository `protobuf:"bytes,1,opt,name=repository,proto3" json:"repository,omitempty"`
}

func (x *GetRepositoryByNameResponse) Reset() {
	*x = GetRepositoryByNameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRepositoryByNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRepositoryByNameResponse) ProtoMessage() {}

func (x *GetRepositoryByNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRepositoryByNameResponse.ProtoReflect.Descriptor instead.
func (*GetRepositoryByNameResponse) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{40}
}

func (x *GetRepositoryByNameResponse) GetRepository() *Repository {
	if x != nil {
		return x.Repository
	}
	return nil
}

type DeleteRepositoryByNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Provider  string   `protobuf:"bytes,1,opt,name=provider,proto3" json:"provider,omitempty"`
	ProjectId string   `protobuf:"bytes,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Name      string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Context   *Context `protobuf:"bytes,4,opt,name=context,proto3" json:"context,omitempty"`
}

func (x *DeleteRepositoryByNameRequest) Reset() {
	*x = DeleteRepositoryByNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRepositoryByNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRepositoryByNameRequest) ProtoMessage() {}

func (x *DeleteRepositoryByNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRepositoryByNameRequest.ProtoReflect.Descriptor instead.
func (*DeleteRepositoryByNameRequest) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{41}
}

func (x *DeleteRepositoryByNameRequest) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *DeleteRepositoryByNameRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *DeleteRepositoryByNameRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DeleteRepositoryByNameRequest) GetContext() *Context {
	if x != nil {
		return x.Context
	}
	return nil
}

type DeleteRepositoryByNameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *DeleteRepositoryByNameResponse) Reset() {
	*x = DeleteRepositoryByNameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRepositoryByNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRepositoryByNameResponse) ProtoMessage() {}

func (x *DeleteRepositoryByNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRepositoryByNameResponse.ProtoReflect.Descriptor instead.
func (*DeleteRepositoryByNameResponse) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{42}
}

func (x *DeleteRepositoryByNameResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ListRepositoriesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Provider  string   `protobuf:"bytes,1,opt,name=provider,proto3" json:"provider,omitempty"`
	ProjectId string   `protobuf:"bytes,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Limit     int32    `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset    int32    `protobuf:"varint,4,opt,name=offset,proto3" json:"offset,omitempty"`
	Context   *Context `protobuf:"bytes,5,opt,name=context,proto3" json:"context,omitempty"`
}

func (x *ListRepositoriesRequest) Reset() {
	*x = ListRepositoriesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRepositoriesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRepositoriesRequest) ProtoMessage() {}

func (x *ListRepositoriesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRepositoriesRequest.ProtoReflect.Descriptor instead.
func (*ListRepositoriesRequest) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{43}
}

func (x *ListRepositoriesRequest) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *ListRepositoriesRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *ListRepositoriesRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListRepositoriesRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListRepositoriesRequest) GetContext() *Context {
	if x != nil {
		return x.Context
	}
	return nil
}

type ListRepositoriesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*Repository `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
}

func (x *ListRepositoriesResponse) Reset() {
	*x = ListRepositoriesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRepositoriesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRepositoriesResponse) ProtoMessage() {}

func (x *ListRepositoriesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRepositoriesResponse.ProtoReflect.Descriptor instead.
func (*ListRepositoriesResponse) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{44}
}

func (x *ListRepositoriesResponse) GetResults() []*Repository {
	if x != nil {
		return x.Results
	}
	return nil
}

type VerifyProviderTokenFromRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Provider  string                 `protobuf:"bytes,1,opt,name=provider,proto3" json:"provider,omitempty"`
	ProjectId string                 `protobuf:"bytes,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Context   *Context               `protobuf:"bytes,4,opt,name=context,proto3" json:"context,omitempty"`
}

func (x *VerifyProviderTokenFromRequest) Reset() {
	*x = VerifyProviderTokenFromRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyProviderTokenFromRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyProviderTokenFromRequest) ProtoMessage() {}

func (x *VerifyProviderTokenFromRequest) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyProviderTokenFromRequest.ProtoReflect.Descriptor instead.
func (*VerifyProviderTokenFromRequest) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{45}
}

func (x *VerifyProviderTokenFromRequest) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *VerifyProviderTokenFromRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *VerifyProviderTokenFromRequest) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *VerifyProviderTokenFromRequest) GetContext() *Context {
	if x != nil {
		return x.Context
	}
	return nil
}

type VerifyProviderTokenFromResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *VerifyProviderTokenFromResponse) Reset() {
	*x = VerifyProviderTokenFromResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyProviderTokenFromResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyProviderTokenFromResponse) ProtoMessage() {}

func (x *VerifyProviderTokenFromResponse) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyProviderTokenFromResponse.ProtoReflect.Descriptor instead.
func (*VerifyProviderTokenFromResponse) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{46}
}

func (x *VerifyProviderTokenFromResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type GetVulnerabilitiesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetVulnerabilitiesRequest) Reset() {
	*x = GetVulnerabilitiesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVulnerabilitiesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVulnerabilitiesRequest) ProtoMessage() {}

func (x *GetVulnerabilitiesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVulnerabilitiesRequest.ProtoReflect.Descriptor instead.
func (*GetVulnerabilitiesRequest) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{47}
}

type GetVulnerabilityByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetVulnerabilityByIdRequest) Reset() {
	*x = GetVulnerabilityByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVulnerabilityByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVulnerabilityByIdRequest) ProtoMessage() {}

func (x *GetVulnerabilityByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVulnerabilityByIdRequest.ProtoReflect.Descriptor instead.
func (*GetVulnerabilityByIdRequest) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{48}
}

func (x *GetVulnerabilityByIdRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetVulnerabilityByIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// May require adjustment, currently set up for GitHub Security Advisories only
	Id              string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	GithubId        int64                  `protobuf:"varint,2,opt,name=github_id,json=githubId,proto3" json:"github_id,omitempty"`
	RepoId          int64                  `protobuf:"varint,3,opt,name=repo_id,json=repoId,proto3" json:"repo_id,omitempty"`
	RepoName        string                 `protobuf:"bytes,4,opt,name=repo_name,json=repoName,proto3" json:"repo_name,omitempty"`
	PackageName     string                 `protobuf:"bytes,5,opt,name=package_name,json=packageName,proto3" json:"package_name,omitempty"`
	Severity        string                 `protobuf:"bytes,6,opt,name=severity,proto3" json:"severity,omitempty"`
	VersionAffected string                 `protobuf:"bytes,7,opt,name=version_affected,json=versionAffected,proto3" json:"version_affected,omitempty"`
	UpgradeVersion  string                 `protobuf:"bytes,8,opt,name=upgrade_version,json=upgradeVersion,proto3" json:"upgrade_version,omitempty"`
	Ghsaid          string                 `protobuf:"bytes,9,opt,name=ghsaid,proto3" json:"ghsaid,omitempty"`
	AdvisroyUrl     string                 `protobuf:"bytes,10,opt,name=advisroy_url,json=advisroyUrl,proto3" json:"advisroy_url,omitempty"`
	ScannedAt       *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=scanned_at,json=scannedAt,proto3" json:"scanned_at,omitempty"`
	CreatedAt       *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *GetVulnerabilityByIdResponse) Reset() {
	*x = GetVulnerabilityByIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVulnerabilityByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVulnerabilityByIdResponse) ProtoMessage() {}

func (x *GetVulnerabilityByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVulnerabilityByIdResponse.ProtoReflect.Descriptor instead.
func (*GetVulnerabilityByIdResponse) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{49}
}

func (x *GetVulnerabilityByIdResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetVulnerabilityByIdResponse) GetGithubId() int64 {
	if x != nil {
		return x.GithubId
	}
	return 0
}

func (x *GetVulnerabilityByIdResponse) GetRepoId() int64 {
	if x != nil {
		return x.RepoId
	}
	return 0
}

func (x *GetVulnerabilityByIdResponse) GetRepoName() string {
	if x != nil {
		return x.RepoName
	}
	return ""
}

func (x *GetVulnerabilityByIdResponse) GetPackageName() string {
	if x != nil {
		return x.PackageName
	}
	return ""
}

func (x *GetVulnerabilityByIdResponse) GetSeverity() string {
	if x != nil {
		return x.Severity
	}
	return ""
}

func (x *GetVulnerabilityByIdResponse) GetVersionAffected() string {
	if x != nil {
		return x.VersionAffected
	}
	return ""
}

func (x *GetVulnerabilityByIdResponse) GetUpgradeVersion() string {
	if x != nil {
		return x.UpgradeVersion
	}
	return ""
}

func (x *GetVulnerabilityByIdResponse) GetGhsaid() string {
	if x != nil {
		return x.Ghsaid
	}
	return ""
}

func (x *GetVulnerabilityByIdResponse) GetAdvisroyUrl() string {
	if x != nil {
		return x.AdvisroyUrl
	}
	return ""
}

func (x *GetVulnerabilityByIdResponse) GetScannedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ScannedAt
	}
	return nil
}

func (x *GetVulnerabilityByIdResponse) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type GetVulnerabilitiesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vulns []*GetVulnerabilityByIdResponse `protobuf:"bytes,1,rep,name=vulns,proto3" json:"vulns,omitempty"`
}

func (x *GetVulnerabilitiesResponse) Reset() {
	*x = GetVulnerabilitiesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVulnerabilitiesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVulnerabilitiesResponse) ProtoMessage() {}

func (x *GetVulnerabilitiesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVulnerabilitiesResponse.ProtoReflect.Descriptor instead.
func (*GetVulnerabilitiesResponse) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{50}
}

func (x *GetVulnerabilitiesResponse) GetVulns() []*GetVulnerabilityByIdResponse {
	if x != nil {
		return x.Vulns
	}
	return nil
}

type GetSecretsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetSecretsRequest) Reset() {
	*x = GetSecretsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSecretsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSecretsRequest) ProtoMessage() {}

func (x *GetSecretsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSecretsRequest.ProtoReflect.Descriptor instead.
func (*GetSecretsRequest) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{51}
}

type GetSecretsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Secrets []*GetSecretByIdResponse `protobuf:"bytes,1,rep,name=secrets,proto3" json:"secrets,omitempty"`
}

func (x *GetSecretsResponse) Reset() {
	*x = GetSecretsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSecretsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSecretsResponse) ProtoMessage() {}

func (x *GetSecretsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSecretsResponse.ProtoReflect.Descriptor instead.
func (*GetSecretsResponse) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{52}
}

func (x *GetSecretsResponse) GetSecrets() []*GetSecretByIdResponse {
	if x != nil {
		return x.Secrets
	}
	return nil
}

type GetSecretByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetSecretByIdRequest) Reset() {
	*x = GetSecretByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSecretByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSecretByIdRequest) ProtoMessage() {}

func (x *GetSecretByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSecretByIdRequest.ProtoReflect.Descriptor instead.
func (*GetSecretByIdRequest) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{53}
}

func (x *GetSecretByIdRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetSecretByIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"` // Add other relevant fields
}

func (x *GetSecretByIdResponse) Reset() {
	*x = GetSecretByIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSecretByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSecretByIdResponse) ProtoMessage() {}

func (x *GetSecretByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSecretByIdResponse.ProtoReflect.Descriptor instead.
func (*GetSecretByIdResponse) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{54}
}

func (x *GetSecretByIdResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetSecretByIdResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetSecretByIdResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type GetBranchProtectionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetBranchProtectionRequest) Reset() {
	*x = GetBranchProtectionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBranchProtectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBranchProtectionRequest) ProtoMessage() {}

func (x *GetBranchProtectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBranchProtectionRequest.ProtoReflect.Descriptor instead.
func (*GetBranchProtectionRequest) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{55}
}

type BranchProtection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Branch      string `protobuf:"bytes,1,opt,name=branch,proto3" json:"branch,omitempty"`
	IsProtected bool   `protobuf:"varint,2,opt,name=is_protected,json=isProtected,proto3" json:"is_protected,omitempty"` // Add other relevant fields
}

func (x *BranchProtection) Reset() {
	*x = BranchProtection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BranchProtection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BranchProtection) ProtoMessage() {}

func (x *BranchProtection) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BranchProtection.ProtoReflect.Descriptor instead.
func (*BranchProtection) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{56}
}

func (x *BranchProtection) GetBranch() string {
	if x != nil {
		return x.Branch
	}
	return ""
}

func (x *BranchProtection) GetIsProtected() bool {
	if x != nil {
		return x.IsProtected
	}
	return false
}

type GetBranchProtectionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BranchProtections []*BranchProtection `protobuf:"bytes,1,rep,name=branch_protections,json=branchProtections,proto3" json:"branch_protections,omitempty"`
}

func (x *GetBranchProtectionResponse) Reset() {
	*x = GetBranchProtectionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBranchProtectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBranchProtectionResponse) ProtoMessage() {}

func (x *GetBranchProtectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBranchProtectionResponse.ProtoReflect.Descriptor instead.
func (*GetBranchProtectionResponse) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{57}
}

func (x *GetBranchProtectionResponse) GetBranchProtections() []*BranchProtection {
	if x != nil {
		return x.BranchProtections
	}
	return nil
}

// User service
type CreateUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateUserRequest) Reset() {
	*x = CreateUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserRequest) ProtoMessage() {}

func (x *CreateUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserRequest.ProtoReflect.Descriptor instead.
func (*CreateUserRequest) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{58}
}

type CreateUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	OrganizationId  string                 `protobuf:"bytes,2,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	OrganizatioName string                 `protobuf:"bytes,3,opt,name=organizatio_name,json=organizatioName,proto3" json:"organizatio_name,omitempty"`
	ProjectId       string                 `protobuf:"bytes,4,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	ProjectName     string                 `protobuf:"bytes,5,opt,name=project_name,json=projectName,proto3" json:"project_name,omitempty"`
	IdentitySubject string                 `protobuf:"bytes,6,opt,name=identity_subject,json=identitySubject,proto3" json:"identity_subject,omitempty"`
	CreatedAt       *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Context         *Context               `protobuf:"bytes,8,opt,name=context,proto3" json:"context,omitempty"`
}

func (x *CreateUserResponse) Reset() {
	*x = CreateUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserResponse) ProtoMessage() {}

func (x *CreateUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserResponse.ProtoReflect.Descriptor instead.
func (*CreateUserResponse) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{59}
}

func (x *CreateUserResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CreateUserResponse) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *CreateUserResponse) GetOrganizatioName() string {
	if x != nil {
		return x.OrganizatioName
	}
	return ""
}

func (x *CreateUserResponse) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *CreateUserResponse) GetProjectName() string {
	if x != nil {
		return x.ProjectName
	}
	return ""
}

func (x *CreateUserResponse) GetIdentitySubject() string {
	if x != nil {
		return x.IdentitySubject
	}
	return ""
}

func (x *CreateUserResponse) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *CreateUserResponse) GetContext() *Context {
	if x != nil {
		return x.Context
	}
	return nil
}

type DeleteUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Context *Context `protobuf:"bytes,1,opt,name=context,proto3" json:"context,omitempty"`
}

func (x *DeleteUserRequest) Reset() {
	*x = DeleteUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserRequest) ProtoMessage() {}

func (x *DeleteUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserRequest.ProtoReflect.Descriptor instead.
func (*DeleteUserRequest) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{60}
}

func (x *DeleteUserRequest) GetContext() *Context {
	if x != nil {
		return x.Context
	}
	return nil
}

type DeleteUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteUserResponse) Reset() {
	*x = DeleteUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserResponse) ProtoMessage() {}

func (x *DeleteUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserResponse.ProtoReflect.Descriptor instead.
func (*DeleteUserResponse) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{61}
}

// user record to be returned
type UserRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	OrganizationId  string                 `protobuf:"bytes,2,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	IdentitySubject string                 `protobuf:"bytes,3,opt,name=identity_subject,json=identitySubject,proto3" json:"identity_subject,omitempty"`
	CreatedAt       *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt       *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *UserRecord) Reset() {
	*x = UserRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserRecord) ProtoMessage() {}

func (x *UserRecord) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserRecord.ProtoReflect.Descriptor instead.
func (*UserRecord) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{62}
}

func (x *UserRecord) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UserRecord) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *UserRecord) GetIdentitySubject() string {
	if x != nil {
		return x.IdentitySubject
	}
	return ""
}

func (x *UserRecord) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *UserRecord) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

// list users
// get user
type GetUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Context *Context `protobuf:"bytes,1,opt,name=context,proto3" json:"context,omitempty"`
}

func (x *GetUserRequest) Reset() {
	*x = GetUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserRequest) ProtoMessage() {}

func (x *GetUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserRequest.ProtoReflect.Descriptor instead.
func (*GetUserRequest) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{63}
}

func (x *GetUserRequest) GetContext() *Context {
	if x != nil {
		return x.Context
	}
	return nil
}

type GetUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User     *UserRecord `protobuf:"bytes,1,opt,name=user,proto3,oneof" json:"user,omitempty"`
	Projects []*Project  `protobuf:"bytes,2,rep,name=projects,proto3" json:"projects,omitempty"`
}

func (x *GetUserResponse) Reset() {
	*x = GetUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserResponse) ProtoMessage() {}

func (x *GetUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserResponse.ProtoReflect.Descriptor instead.
func (*GetUserResponse) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{64}
}

func (x *GetUserResponse) GetUser() *UserRecord {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *GetUserResponse) GetProjects() []*Project {
	if x != nil {
		return x.Projects
	}
	return nil
}

// Profile service
type CreateProfileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Profile *Profile `protobuf:"bytes,1,opt,name=profile,proto3" json:"profile,omitempty"`
	Context *Context `protobuf:"bytes,2,opt,name=context,proto3" json:"context,omitempty"`
}

func (x *CreateProfileRequest) Reset() {
	*x = CreateProfileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateProfileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProfileRequest) ProtoMessage() {}

func (x *CreateProfileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProfileRequest.ProtoReflect.Descriptor instead.
func (*CreateProfileRequest) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{65}
}

func (x *CreateProfileRequest) GetProfile() *Profile {
	if x != nil {
		return x.Profile
	}
	return nil
}

func (x *CreateProfileRequest) GetContext() *Context {
	if x != nil {
		return x.Context
	}
	return nil
}

type CreateProfileResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Profile *Profile `protobuf:"bytes,1,opt,name=profile,proto3" json:"profile,omitempty"`
}

func (x *CreateProfileResponse) Reset() {
	*x = CreateProfileResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateProfileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProfileResponse) ProtoMessage() {}

func (x *CreateProfileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProfileResponse.ProtoReflect.Descriptor instead.
func (*CreateProfileResponse) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{66}
}

func (x *CreateProfileResponse) GetProfile() *Profile {
	if x != nil {
		return x.Profile
	}
	return nil
}

type UpdateProfileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Profile *Profile `protobuf:"bytes,1,opt,name=profile,proto3" json:"profile,omitempty"`
	Context *Context `protobuf:"bytes,2,opt,name=context,proto3" json:"context,omitempty"`
}

func (x *UpdateProfileRequest) Reset() {
	*x = UpdateProfileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateProfileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProfileRequest) ProtoMessage() {}

func (x *UpdateProfileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProfileRequest.ProtoReflect.Descriptor instead.
func (*UpdateProfileRequest) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{67}
}

func (x *UpdateProfileRequest) GetProfile() *Profile {
	if x != nil {
		return x.Profile
	}
	return nil
}

func (x *UpdateProfileRequest) GetContext() *Context {
	if x != nil {
		return x.Context
	}
	return nil
}

type UpdateProfileResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Profile *Profile `protobuf:"bytes,1,opt,name=profile,proto3" json:"profile,omitempty"`
}

func (x *UpdateProfileResponse) Reset() {
	*x = UpdateProfileResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateProfileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProfileResponse) ProtoMessage() {}

func (x *UpdateProfileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProfileResponse.ProtoReflect.Descriptor instead.
func (*UpdateProfileResponse) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{68}
}

func (x *UpdateProfileResponse) GetProfile() *Profile {
	if x != nil {
		return x.Profile
	}
	return nil
}

type DeleteProfileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// context is the context in which the rule type is evaluated.
	Context *Context `protobuf:"bytes,1,opt,name=context,proto3" json:"context,omitempty"`
	// id is the id of the profile to delete
	Id string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteProfileRequest) Reset() {
	*x = DeleteProfileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteProfileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProfileRequest) ProtoMessage() {}

func (x *DeleteProfileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProfileRequest.ProtoReflect.Descriptor instead.
func (*DeleteProfileRequest) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{69}
}

func (x *DeleteProfileRequest) GetContext() *Context {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *DeleteProfileRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteProfileResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteProfileResponse) Reset() {
	*x = DeleteProfileResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteProfileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProfileResponse) ProtoMessage() {}

func (x *DeleteProfileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProfileResponse.ProtoReflect.Descriptor instead.
func (*DeleteProfileResponse) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{70}
}

// list profiles
type ListProfilesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// context is the context which contains the profiles
	Context *Context `protobuf:"bytes,1,opt,name=context,proto3" json:"context,omitempty"`
}

func (x *ListProfilesRequest) Reset() {
	*x = ListProfilesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListProfilesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProfilesRequest) ProtoMessage() {}

func (x *ListProfilesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProfilesRequest.ProtoReflect.Descriptor instead.
func (*ListProfilesRequest) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{71}
}

func (x *ListProfilesRequest) GetContext() *Context {
	if x != nil {
		return x.Context
	}
	return nil
}

type ListProfilesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Profiles []*Profile `protobuf:"bytes,1,rep,name=profiles,proto3" json:"profiles,omitempty"`
}

func (x *ListProfilesResponse) Reset() {
	*x = ListProfilesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListProfilesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProfilesResponse) ProtoMessage() {}

func (x *ListProfilesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProfilesResponse.ProtoReflect.Descriptor instead.
func (*ListProfilesResponse) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{72}
}

func (x *ListProfilesResponse) GetProfiles() []*Profile {
	if x != nil {
		return x.Profiles
	}
	return nil
}

// get profile by id
type GetProfileByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// context is the context which contains the profiles
	Context *Context `protobuf:"bytes,1,opt,name=context,proto3" json:"context,omitempty"`
	// id is the id of the profile to get
	Id string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetProfileByIdRequest) Reset() {
	*x = GetProfileByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProfileByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProfileByIdRequest) ProtoMessage() {}

func (x *GetProfileByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProfileByIdRequest.ProtoReflect.Descriptor instead.
func (*GetProfileByIdRequest) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{73}
}

func (x *GetProfileByIdRequest) GetContext() *Context {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *GetProfileByIdRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetProfileByIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Profile *Profile `protobuf:"bytes,1,opt,name=profile,proto3" json:"profile,omitempty"`
}

func (x *GetProfileByIdResponse) Reset() {
	*x = GetProfileByIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProfileByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProfileByIdResponse) ProtoMessage() {}

func (x *GetProfileByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProfileByIdResponse.ProtoReflect.Descriptor instead.
func (*GetProfileByIdResponse) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{74}
}

func (x *GetProfileByIdResponse) GetProfile() *Profile {
	if x != nil {
		return x.Profile
	}
	return nil
}

// get the overall profile status
type ProfileStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// profile_id is the id of the profile
	ProfileId string `protobuf:"bytes,1,opt,name=profile_id,json=profileId,proto3" json:"profile_id,omitempty"`
	// profile_name is the name of the profile
	ProfileName string `protobuf:"bytes,2,opt,name=profile_name,json=profileName,proto3" json:"profile_name,omitempty"`
	// profile_status is the status of the profile
	ProfileStatus string `protobuf:"bytes,3,opt,name=profile_status,json=profileStatus,proto3" json:"profile_status,omitempty"`
	// last_updated is the last time the profile was updated
	LastUpdated *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=last_updated,json=lastUpdated,proto3" json:"last_updated,omitempty"`
}

func (x *ProfileStatus) Reset() {
	*x = ProfileStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProfileStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfileStatus) ProtoMessage() {}

func (x *ProfileStatus) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfileStatus.ProtoReflect.Descriptor instead.
func (*ProfileStatus) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{75}
}

func (x *ProfileStatus) GetProfileId() string {
	if x != nil {
		return x.ProfileId
	}
	return ""
}

func (x *ProfileStatus) GetProfileName() string {
	if x != nil {
		return x.ProfileName
	}
	return ""
}

func (x *ProfileStatus) GetProfileStatus() string {
	if x != nil {
		return x.ProfileStatus
	}
	return ""
}

func (x *ProfileStatus) GetLastUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.LastUpdated
	}
	return nil
}

// get the status of the rules for a given profile
type RuleEvaluationStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// profile_id is the id of the profile
	ProfileId string `protobuf:"bytes,1,opt,name=profile_id,json=profileId,proto3" json:"profile_id,omitempty"`
	// rule_id is the id of the rule
	RuleId string `protobuf:"bytes,2,opt,name=rule_id,json=ruleId,proto3" json:"rule_id,omitempty"`
	// rule_name is the name of the rule
	RuleName string `protobuf:"bytes,3,opt,name=rule_name,json=ruleName,proto3" json:"rule_name,omitempty"`
	// entity is the entity that was evaluated
	Entity string `protobuf:"bytes,4,opt,name=entity,proto3" json:"entity,omitempty"`
	// status is the status of the evaluation
	Status string `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
	// last_updated is the last time the profile was updated
	LastUpdated *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=last_updated,json=lastUpdated,proto3" json:"last_updated,omitempty"`
	// entity_info is the information about the entity
	EntityInfo map[string]string `protobuf:"bytes,7,rep,name=entity_info,json=entityInfo,proto3" json:"entity_info,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// details is the description of the evaluation if any
	Details string `protobuf:"bytes,8,opt,name=details,proto3" json:"details,omitempty"`
	// guidance is the guidance for the evaluation if any
	Guidance string `protobuf:"bytes,9,opt,name=guidance,proto3" json:"guidance,omitempty"`
	// remediation_status is the status of the remediation
	RemediationStatus string `protobuf:"bytes,10,opt,name=remediation_status,json=remediationStatus,proto3" json:"remediation_status,omitempty"`
	// remediation_last_updated is the last time the remediation was performed or attempted
	RemediationLastUpdated *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=remediation_last_updated,json=remediationLastUpdated,proto3,oneof" json:"remediation_last_updated,omitempty"`
	// remediation_details is the description of the remediation attempt if any
	RemediationDetails string `protobuf:"bytes,12,opt,name=remediation_details,json=remediationDetails,proto3" json:"remediation_details,omitempty"`
}

func (x *RuleEvaluationStatus) Reset() {
	*x = RuleEvaluationStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RuleEvaluationStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuleEvaluationStatus) ProtoMessage() {}

func (x *RuleEvaluationStatus) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuleEvaluationStatus.ProtoReflect.Descriptor instead.
func (*RuleEvaluationStatus) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{76}
}

func (x *RuleEvaluationStatus) GetProfileId() string {
	if x != nil {
		return x.ProfileId
	}
	return ""
}

func (x *RuleEvaluationStatus) GetRuleId() string {
	if x != nil {
		return x.RuleId
	}
	return ""
}

func (x *RuleEvaluationStatus) GetRuleName() string {
	if x != nil {
		return x.RuleName
	}
	return ""
}

func (x *RuleEvaluationStatus) GetEntity() string {
	if x != nil {
		return x.Entity
	}
	return ""
}

func (x *RuleEvaluationStatus) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *RuleEvaluationStatus) GetLastUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.LastUpdated
	}
	return nil
}

func (x *RuleEvaluationStatus) GetEntityInfo() map[string]string {
	if x != nil {
		return x.EntityInfo
	}
	return nil
}

func (x *RuleEvaluationStatus) GetDetails() string {
	if x != nil {
		return x.Details
	}
	return ""
}

func (x *RuleEvaluationStatus) GetGuidance() string {
	if x != nil {
		return x.Guidance
	}
	return ""
}

func (x *RuleEvaluationStatus) GetRemediationStatus() string {
	if x != nil {
		return x.RemediationStatus
	}
	return ""
}

func (x *RuleEvaluationStatus) GetRemediationLastUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.RemediationLastUpdated
	}
	return nil
}

func (x *RuleEvaluationStatus) GetRemediationDetails() string {
	if x != nil {
		return x.RemediationDetails
	}
	return ""
}

type GetProfileStatusByNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// context is the context in which the rule type is evaluated.
	Context *Context `protobuf:"bytes,1,opt,name=context,proto3" json:"context,omitempty"`
	// name is the name of the profile to get
	Name   string                                       `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Entity *GetProfileStatusByNameRequest_EntityTypedId `protobuf:"bytes,3,opt,name=entity,proto3" json:"entity,omitempty"`
	All    bool                                         `protobuf:"varint,4,opt,name=all,proto3" json:"all,omitempty"`
	Rule   string                                       `protobuf:"bytes,5,opt,name=rule,proto3" json:"rule,omitempty"`
}

func (x *GetProfileStatusByNameRequest) Reset() {
	*x = GetProfileStatusByNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProfileStatusByNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProfileStatusByNameRequest) ProtoMessage() {}

func (x *GetProfileStatusByNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProfileStatusByNameRequest.ProtoReflect.Descriptor instead.
func (*GetProfileStatusByNameRequest) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{77}
}

func (x *GetProfileStatusByNameRequest) GetContext() *Context {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *GetProfileStatusByNameRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetProfileStatusByNameRequest) GetEntity() *GetProfileStatusByNameRequest_EntityTypedId {
	if x != nil {
		return x.Entity
	}
	return nil
}

func (x *GetProfileStatusByNameRequest) GetAll() bool {
	if x != nil {
		return x.All
	}
	return false
}

func (x *GetProfileStatusByNameRequest) GetRule() string {
	if x != nil {
		return x.Rule
	}
	return ""
}

type GetProfileStatusByNameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// profile_status is the status of the profile
	ProfileStatus *ProfileStatus `protobuf:"bytes,1,opt,name=profile_status,json=profileStatus,proto3" json:"profile_status,omitempty"`
	// rule_evaluation_status is the status of the rules
	RuleEvaluationStatus []*RuleEvaluationStatus `protobuf:"bytes,2,rep,name=rule_evaluation_status,json=ruleEvaluationStatus,proto3" json:"rule_evaluation_status,omitempty"`
}

func (x *GetProfileStatusByNameResponse) Reset() {
	*x = GetProfileStatusByNameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProfileStatusByNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProfileStatusByNameResponse) ProtoMessage() {}

func (x *GetProfileStatusByNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProfileStatusByNameResponse.ProtoReflect.Descriptor instead.
func (*GetProfileStatusByNameResponse) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{78}
}

func (x *GetProfileStatusByNameResponse) GetProfileStatus() *ProfileStatus {
	if x != nil {
		return x.ProfileStatus
	}
	return nil
}

func (x *GetProfileStatusByNameResponse) GetRuleEvaluationStatus() []*RuleEvaluationStatus {
	if x != nil {
		return x.RuleEvaluationStatus
	}
	return nil
}

type GetProfileStatusByProjectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// context is the context in which the rule type is evaluated.
	Context *Context `protobuf:"bytes,1,opt,name=context,proto3" json:"context,omitempty"`
}

func (x *GetProfileStatusByProjectRequest) Reset() {
	*x = GetProfileStatusByProjectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProfileStatusByProjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProfileStatusByProjectRequest) ProtoMessage() {}

func (x *GetProfileStatusByProjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProfileStatusByProjectRequest.ProtoReflect.Descriptor instead.
func (*GetProfileStatusByProjectRequest) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{79}
}

func (x *GetProfileStatusByProjectRequest) GetContext() *Context {
	if x != nil {
		return x.Context
	}
	return nil
}

type GetProfileStatusByProjectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// profile_status is the status of the profile
	ProfileStatus []*ProfileStatus `protobuf:"bytes,1,rep,name=profile_status,json=profileStatus,proto3" json:"profile_status,omitempty"`
}

func (x *GetProfileStatusByProjectResponse) Reset() {
	*x = GetProfileStatusByProjectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProfileStatusByProjectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProfileStatusByProjectResponse) ProtoMessage() {}

func (x *GetProfileStatusByProjectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProfileStatusByProjectResponse.ProtoReflect.Descriptor instead.
func (*GetProfileStatusByProjectResponse) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{80}
}

func (x *GetProfileStatusByProjectResponse) GetProfileStatus() []*ProfileStatus {
	if x != nil {
		return x.ProfileStatus
	}
	return nil
}

type GetPublicKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyIdentifier string `protobuf:"bytes,1,opt,name=key_identifier,json=keyIdentifier,proto3" json:"key_identifier,omitempty"`
}

func (x *GetPublicKeyRequest) Reset() {
	*x = GetPublicKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPublicKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPublicKeyRequest) ProtoMessage() {}

func (x *GetPublicKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPublicKeyRequest.ProtoReflect.Descriptor instead.
func (*GetPublicKeyRequest) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{81}
}

func (x *GetPublicKeyRequest) GetKeyIdentifier() string {
	if x != nil {
		return x.KeyIdentifier
	}
	return ""
}

type GetPublicKeyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublicKey string `protobuf:"bytes,1,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
}

func (x *GetPublicKeyResponse) Reset() {
	*x = GetPublicKeyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPublicKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPublicKeyResponse) ProtoMessage() {}

func (x *GetPublicKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPublicKeyResponse.ProtoReflect.Descriptor instead.
func (*GetPublicKeyResponse) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{82}
}

func (x *GetPublicKeyResponse) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

type CreateKeyPairRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Passphrase string `protobuf:"bytes,1,opt,name=passphrase,proto3" json:"passphrase,omitempty"`
	ProjectId  string `protobuf:"bytes,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
}

func (x *CreateKeyPairRequest) Reset() {
	*x = CreateKeyPairRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateKeyPairRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateKeyPairRequest) ProtoMessage() {}

func (x *CreateKeyPairRequest) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateKeyPairRequest.ProtoReflect.Descriptor instead.
func (*CreateKeyPairRequest) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{83}
}

func (x *CreateKeyPairRequest) GetPassphrase() string {
	if x != nil {
		return x.Passphrase
	}
	return ""
}

func (x *CreateKeyPairRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

type CreateKeyPairResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyIdentifier string `protobuf:"bytes,1,opt,name=key_identifier,json=keyIdentifier,proto3" json:"key_identifier,omitempty"`
	PublicKey     string `protobuf:"bytes,2,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
}

func (x *CreateKeyPairResponse) Reset() {
	*x = CreateKeyPairResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateKeyPairResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateKeyPairResponse) ProtoMessage() {}

func (x *CreateKeyPairResponse) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateKeyPairResponse.ProtoReflect.Descriptor instead.
func (*CreateKeyPairResponse) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{84}
}

func (x *CreateKeyPairResponse) GetKeyIdentifier() string {
	if x != nil {
		return x.KeyIdentifier
	}
	return ""
}

func (x *CreateKeyPairResponse) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

// RESTProviderConfig contains the configuration for the REST provider.
type RESTProviderConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// base_url is the base URL for the REST provider.
	BaseUrl string `protobuf:"bytes,1,opt,name=base_url,json=baseUrl,proto3" json:"base_url,omitempty"`
}

func (x *RESTProviderConfig) Reset() {
	*x = RESTProviderConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RESTProviderConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RESTProviderConfig) ProtoMessage() {}

func (x *RESTProviderConfig) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RESTProviderConfig.ProtoReflect.Descriptor instead.
func (*RESTProviderConfig) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{85}
}

func (x *RESTProviderConfig) GetBaseUrl() string {
	if x != nil {
		return x.BaseUrl
	}
	return ""
}

// GitHubProviderConfig contains the configuration for the GitHub client
//
// Endpoint: is the GitHub API endpoint
//
// If using the public GitHub API, Endpoint can be left blank
// disable revive linting for this struct as there is nothing wrong with the
// naming convention
type GitHubProviderConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Endpoint is the GitHub API endpoint. If using the public GitHub API, Endpoint can be left blank.
	Endpoint string `protobuf:"bytes,1,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
}

func (x *GitHubProviderConfig) Reset() {
	*x = GitHubProviderConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GitHubProviderConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GitHubProviderConfig) ProtoMessage() {}

func (x *GitHubProviderConfig) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GitHubProviderConfig.ProtoReflect.Descriptor instead.
func (*GitHubProviderConfig) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{86}
}

func (x *GitHubProviderConfig) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

// Context defines the context in which a rule is evaluated.
// this normally refers to a combination of the provider, organization and project.
type Context struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// name of the provider
	Provider *string `protobuf:"bytes,1,opt,name=provider,proto3,oneof" json:"provider,omitempty"`
	// name of the project
	Project             *string `protobuf:"bytes,3,opt,name=project,proto3,oneof" json:"project,omitempty"`
	RetiredOrganization *string `protobuf:"bytes,2,opt,name=retired_organization,json=retiredOrganization,proto3,oneof" json:"retired_organization,omitempty"`
}

func (x *Context) Reset() {
	*x = Context{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Context) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Context) ProtoMessage() {}

func (x *Context) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Context.ProtoReflect.Descriptor instead.
func (*Context) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{87}
}

func (x *Context) GetProvider() string {
	if x != nil && x.Provider != nil {
		return *x.Provider
	}
	return ""
}

func (x *Context) GetProject() string {
	if x != nil && x.Project != nil {
		return *x.Project
	}
	return ""
}

func (x *Context) GetRetiredOrganization() string {
	if x != nil && x.RetiredOrganization != nil {
		return *x.RetiredOrganization
	}
	return ""
}

// ListRuleTypesRequest is the request to list rule types.
type ListRuleTypesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// context is the context in which the rule types are evaluated.
	Context *Context `protobuf:"bytes,1,opt,name=context,proto3" json:"context,omitempty"`
}

func (x *ListRuleTypesRequest) Reset() {
	*x = ListRuleTypesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRuleTypesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRuleTypesRequest) ProtoMessage() {}

func (x *ListRuleTypesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRuleTypesRequest.ProtoReflect.Descriptor instead.
func (*ListRuleTypesRequest) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{88}
}

func (x *ListRuleTypesRequest) GetContext() *Context {
	if x != nil {
		return x.Context
	}
	return nil
}

// ListRuleTypesResponse is the response to list rule types.
type ListRuleTypesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// rule_types is the list of rule types.
	RuleTypes []*RuleType `protobuf:"bytes,1,rep,name=rule_types,json=ruleTypes,proto3" json:"rule_types,omitempty"`
}

func (x *ListRuleTypesResponse) Reset() {
	*x = ListRuleTypesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRuleTypesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRuleTypesResponse) ProtoMessage() {}

func (x *ListRuleTypesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRuleTypesResponse.ProtoReflect.Descriptor instead.
func (*ListRuleTypesResponse) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{89}
}

func (x *ListRuleTypesResponse) GetRuleTypes() []*RuleType {
	if x != nil {
		return x.RuleTypes
	}
	return nil
}

// GetRuleTypeByNameRequest is the request to get a rule type by name.
type GetRuleTypeByNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// context is the context in which the rule type is evaluated.
	Context *Context `protobuf:"bytes,1,opt,name=context,proto3" json:"context,omitempty"`
	// name is the name of the rule type.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetRuleTypeByNameRequest) Reset() {
	*x = GetRuleTypeByNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRuleTypeByNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRuleTypeByNameRequest) ProtoMessage() {}

func (x *GetRuleTypeByNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRuleTypeByNameRequest.ProtoReflect.Descriptor instead.
func (*GetRuleTypeByNameRequest) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{90}
}

func (x *GetRuleTypeByNameRequest) GetContext() *Context {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *GetRuleTypeByNameRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// GetRuleTypeByNameResponse is the response to get a rule type by name.
type GetRuleTypeByNameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// rule_type is the rule type.
	RuleType *RuleType `protobuf:"bytes,1,opt,name=rule_type,json=ruleType,proto3" json:"rule_type,omitempty"`
}

func (x *GetRuleTypeByNameResponse) Reset() {
	*x = GetRuleTypeByNameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRuleTypeByNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRuleTypeByNameResponse) ProtoMessage() {}

func (x *GetRuleTypeByNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRuleTypeByNameResponse.ProtoReflect.Descriptor instead.
func (*GetRuleTypeByNameResponse) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{91}
}

func (x *GetRuleTypeByNameResponse) GetRuleType() *RuleType {
	if x != nil {
		return x.RuleType
	}
	return nil
}

// GetRuleTypeByIdRequest is the request to get a rule type by id.
type GetRuleTypeByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// context is the context in which the rule type is evaluated.
	Context *Context `protobuf:"bytes,1,opt,name=context,proto3" json:"context,omitempty"`
	// id is the id of the rule type.
	Id string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetRuleTypeByIdRequest) Reset() {
	*x = GetRuleTypeByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRuleTypeByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRuleTypeByIdRequest) ProtoMessage() {}

func (x *GetRuleTypeByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRuleTypeByIdRequest.ProtoReflect.Descriptor instead.
func (*GetRuleTypeByIdRequest) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{92}
}

func (x *GetRuleTypeByIdRequest) GetContext() *Context {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *GetRuleTypeByIdRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// GetRuleTypeByIdResponse is the response to get a rule type by id.
type GetRuleTypeByIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// rule_type is the rule type.
	RuleType *RuleType `protobuf:"bytes,1,opt,name=rule_type,json=ruleType,proto3" json:"rule_type,omitempty"`
}

func (x *GetRuleTypeByIdResponse) Reset() {
	*x = GetRuleTypeByIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRuleTypeByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRuleTypeByIdResponse) ProtoMessage() {}

func (x *GetRuleTypeByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRuleTypeByIdResponse.ProtoReflect.Descriptor instead.
func (*GetRuleTypeByIdResponse) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{93}
}

func (x *GetRuleTypeByIdResponse) GetRuleType() *RuleType {
	if x != nil {
		return x.RuleType
	}
	return nil
}

// CreateRuleTypeRequest is the request to create a rule type.
type CreateRuleTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// rule_type is the rule type to be created.
	RuleType *RuleType `protobuf:"bytes,1,opt,name=rule_type,json=ruleType,proto3" json:"rule_type,omitempty"`
	Context  *Context  `protobuf:"bytes,2,opt,name=context,proto3" json:"context,omitempty"`
}

func (x *CreateRuleTypeRequest) Reset() {
	*x = CreateRuleTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRuleTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRuleTypeRequest) ProtoMessage() {}

func (x *CreateRuleTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRuleTypeRequest.ProtoReflect.Descriptor instead.
func (*CreateRuleTypeRequest) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{94}
}

func (x *CreateRuleTypeRequest) GetRuleType() *RuleType {
	if x != nil {
		return x.RuleType
	}
	return nil
}

func (x *CreateRuleTypeRequest) GetContext() *Context {
	if x != nil {
		return x.Context
	}
	return nil
}

// CreateRuleTypeResponse is the response to create a rule type.
type CreateRuleTypeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// rule_type is the rule type that was created.
	RuleType *RuleType `protobuf:"bytes,1,opt,name=rule_type,json=ruleType,proto3" json:"rule_type,omitempty"`
}

func (x *CreateRuleTypeResponse) Reset() {
	*x = CreateRuleTypeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRuleTypeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRuleTypeResponse) ProtoMessage() {}

func (x *CreateRuleTypeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRuleTypeResponse.ProtoReflect.Descriptor instead.
func (*CreateRuleTypeResponse) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{95}
}

func (x *CreateRuleTypeResponse) GetRuleType() *RuleType {
	if x != nil {
		return x.RuleType
	}
	return nil
}

// UpdateRuleTypeRequest is the request to update a rule type.
type UpdateRuleTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// rule_type is the rule type to be updated.
	RuleType *RuleType `protobuf:"bytes,2,opt,name=rule_type,json=ruleType,proto3" json:"rule_type,omitempty"`
	Context  *Context  `protobuf:"bytes,3,opt,name=context,proto3" json:"context,omitempty"`
}

func (x *UpdateRuleTypeRequest) Reset() {
	*x = UpdateRuleTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRuleTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRuleTypeRequest) ProtoMessage() {}

func (x *UpdateRuleTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRuleTypeRequest.ProtoReflect.Descriptor instead.
func (*UpdateRuleTypeRequest) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{96}
}

func (x *UpdateRuleTypeRequest) GetRuleType() *RuleType {
	if x != nil {
		return x.RuleType
	}
	return nil
}

func (x *UpdateRuleTypeRequest) GetContext() *Context {
	if x != nil {
		return x.Context
	}
	return nil
}

// UpdateRuleTypeResponse is the response to update a rule type.
type UpdateRuleTypeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// rule_type is the rule type that was updated.
	RuleType *RuleType `protobuf:"bytes,1,opt,name=rule_type,json=ruleType,proto3" json:"rule_type,omitempty"`
}

func (x *UpdateRuleTypeResponse) Reset() {
	*x = UpdateRuleTypeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRuleTypeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRuleTypeResponse) ProtoMessage() {}

func (x *UpdateRuleTypeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRuleTypeResponse.ProtoReflect.Descriptor instead.
func (*UpdateRuleTypeResponse) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{97}
}

func (x *UpdateRuleTypeResponse) GetRuleType() *RuleType {
	if x != nil {
		return x.RuleType
	}
	return nil
}

// DeleteRuleTypeRequest is the request to delete a rule type.
type DeleteRuleTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// context is the context in which the rule type is evaluated.
	Context *Context `protobuf:"bytes,1,opt,name=context,proto3" json:"context,omitempty"`
	// id is the id of the rule type to be deleted.
	Id string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteRuleTypeRequest) Reset() {
	*x = DeleteRuleTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRuleTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRuleTypeRequest) ProtoMessage() {}

func (x *DeleteRuleTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRuleTypeRequest.ProtoReflect.Descriptor instead.
func (*DeleteRuleTypeRequest) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{98}
}

func (x *DeleteRuleTypeRequest) GetContext() *Context {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *DeleteRuleTypeRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// DeleteRuleTypeResponse is the response to delete a rule type.
type DeleteRuleTypeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteRuleTypeResponse) Reset() {
	*x = DeleteRuleTypeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRuleTypeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRuleTypeResponse) ProtoMessage() {}

func (x *DeleteRuleTypeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRuleTypeResponse.ProtoReflect.Descriptor instead.
func (*DeleteRuleTypeResponse) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{99}
}

// RestType defines the rest data evaluation.
// This is used to fetch data from a REST endpoint.
type RestType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// endpoint is the endpoint to fetch data from.
	// This can be a URL or the path on the API.bool
	// This is a required field and must be set.
	// This is also evaluated via a template which allows
	// us dynamically fill in the values.
	Endpoint string `protobuf:"bytes,1,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	// method is the method to use to fetch data.
	Method string `protobuf:"bytes,2,opt,name=method,proto3" json:"method,omitempty"`
	// headers are the headers to be sent to the endpoint.
	Headers []string `protobuf:"bytes,3,rep,name=headers,proto3" json:"headers,omitempty"`
	// body is the body to be sent to the endpoint.
	Body *string `protobuf:"bytes,4,opt,name=body,proto3,oneof" json:"body,omitempty"`
	// parse is the parsing mechanism to be used to parse the data.
	Parse string `protobuf:"bytes,5,opt,name=parse,proto3" json:"parse,omitempty"`
	// fallback provides a body that the ingester would return in case
	// the REST call returns a non-200 status code.
	Fallback []*RestType_Fallback `protobuf:"bytes,6,rep,name=fallback,proto3" json:"fallback,omitempty"`
}

func (x *RestType) Reset() {
	*x = RestType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RestType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestType) ProtoMessage() {}

func (x *RestType) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestType.ProtoReflect.Descriptor instead.
func (*RestType) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{100}
}

func (x *RestType) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *RestType) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *RestType) GetHeaders() []string {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *RestType) GetBody() string {
	if x != nil && x.Body != nil {
		return *x.Body
	}
	return ""
}

func (x *RestType) GetParse() string {
	if x != nil {
		return x.Parse
	}
	return ""
}

func (x *RestType) GetFallback() []*RestType_Fallback {
	if x != nil {
		return x.Fallback
	}
	return nil
}

// BuiltinType defines the builtin data evaluation.
type BuiltinType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Method string `protobuf:"bytes,1,opt,name=method,proto3" json:"method,omitempty"`
}

func (x *BuiltinType) Reset() {
	*x = BuiltinType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuiltinType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuiltinType) ProtoMessage() {}

func (x *BuiltinType) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuiltinType.ProtoReflect.Descriptor instead.
func (*BuiltinType) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{101}
}

func (x *BuiltinType) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

// ArtifactType defines the artifact data evaluation.
type ArtifactType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ArtifactType) Reset() {
	*x = ArtifactType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArtifactType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArtifactType) ProtoMessage() {}

func (x *ArtifactType) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArtifactType.ProtoReflect.Descriptor instead.
func (*ArtifactType) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{102}
}

// GitType defines the git data ingester.
type GitType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// clone_url is the url of the git repository.
	CloneUrl string `protobuf:"bytes,1,opt,name=clone_url,json=cloneUrl,proto3" json:"clone_url,omitempty"`
	// branch is the branch of the git repository.
	Branch string `protobuf:"bytes,2,opt,name=branch,proto3" json:"branch,omitempty"`
}

func (x *GitType) Reset() {
	*x = GitType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GitType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GitType) ProtoMessage() {}

func (x *GitType) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GitType.ProtoReflect.Descriptor instead.
func (*GitType) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{103}
}

func (x *GitType) GetCloneUrl() string {
	if x != nil {
		return x.CloneUrl
	}
	return ""
}

func (x *GitType) GetBranch() string {
	if x != nil {
		return x.Branch
	}
	return ""
}

// DiffType defines the diff data ingester.
type DiffType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ecosystems []*DiffType_Ecosystem `protobuf:"bytes,1,rep,name=ecosystems,proto3" json:"ecosystems,omitempty"`
}

func (x *DiffType) Reset() {
	*x = DiffType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiffType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiffType) ProtoMessage() {}

func (x *DiffType) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiffType.ProtoReflect.Descriptor instead.
func (*DiffType) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{104}
}

func (x *DiffType) GetEcosystems() []*DiffType_Ecosystem {
	if x != nil {
		return x.Ecosystems
	}
	return nil
}

// RuleType defines rules that may or may not be user defined.
// The version is assumed from the folder's version.
type RuleType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// id is the id of the rule type.
	// This is mostly optional and is set by the server.
	Id *string `protobuf:"bytes,1,opt,name=id,proto3,oneof" json:"id,omitempty"`
	// name is the name of the rule type.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// context is the context in which the rule is evaluated.
	Context *Context `protobuf:"bytes,3,opt,name=context,proto3" json:"context,omitempty"`
	// def is the definition of the rule type.
	Def *RuleType_Definition `protobuf:"bytes,4,opt,name=def,proto3" json:"def,omitempty"`
	// description is the description of the rule type.
	Description string `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	// guidance are instructions we give the user in case a rule fails.
	Guidance string `protobuf:"bytes,6,opt,name=guidance,proto3" json:"guidance,omitempty"`
}

func (x *RuleType) Reset() {
	*x = RuleType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[105]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RuleType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuleType) ProtoMessage() {}

func (x *RuleType) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[105]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuleType.ProtoReflect.Descriptor instead.
func (*RuleType) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{105}
}

func (x *RuleType) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *RuleType) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RuleType) GetContext() *Context {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *RuleType) GetDef() *RuleType_Definition {
	if x != nil {
		return x.Def
	}
	return nil
}

func (x *RuleType) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *RuleType) GetGuidance() string {
	if x != nil {
		return x.Guidance
	}
	return ""
}

// Profile defines a profile that is user defined.
type Profile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// context is the context in which the profile is evaluated.
	Context *Context `protobuf:"bytes,1,opt,name=context,proto3" json:"context,omitempty"`
	// id is the id of the profile.
	// This is optional and is set by the system.
	Id *string `protobuf:"bytes,2,opt,name=id,proto3,oneof" json:"id,omitempty"`
	// name is the name of the profile instance.
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// These are the entities that one could set in the profile.
	Repository       []*Profile_Rule `protobuf:"bytes,4,rep,name=repository,proto3" json:"repository,omitempty"`
	BuildEnvironment []*Profile_Rule `protobuf:"bytes,5,rep,name=build_environment,json=buildEnvironment,proto3" json:"build_environment,omitempty"`
	Artifact         []*Profile_Rule `protobuf:"bytes,6,rep,name=artifact,proto3" json:"artifact,omitempty"`
	PullRequest      []*Profile_Rule `protobuf:"bytes,7,rep,name=pull_request,json=pullRequest,proto3" json:"pull_request,omitempty"`
	// whether and how to remediate (on,off,dry_run)
	// this is optional as the default is set by the system
	Remediate *string `protobuf:"bytes,8,opt,name=remediate,proto3,oneof" json:"remediate,omitempty"`
	// whether and how to alert (on,off,dry_run)
	// this is optional as the default is set by the system
	Alert *string `protobuf:"bytes,9,opt,name=alert,proto3,oneof" json:"alert,omitempty"`
	// type is a placeholder for the object type. It should always be set to "profile".
	Type string `protobuf:"bytes,10,opt,name=type,proto3" json:"type,omitempty"`
	// version is the version of the profile type. In this case, it is "v1"
	Version string `protobuf:"bytes,11,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *Profile) Reset() {
	*x = Profile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[106]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Profile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Profile) ProtoMessage() {}

func (x *Profile) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[106]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Profile.ProtoReflect.Descriptor instead.
func (*Profile) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{106}
}

func (x *Profile) GetContext() *Context {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *Profile) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *Profile) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Profile) GetRepository() []*Profile_Rule {
	if x != nil {
		return x.Repository
	}
	return nil
}

func (x *Profile) GetBuildEnvironment() []*Profile_Rule {
	if x != nil {
		return x.BuildEnvironment
	}
	return nil
}

func (x *Profile) GetArtifact() []*Profile_Rule {
	if x != nil {
		return x.Artifact
	}
	return nil
}

func (x *Profile) GetPullRequest() []*Profile_Rule {
	if x != nil {
		return x.PullRequest
	}
	return nil
}

func (x *Profile) GetRemediate() string {
	if x != nil && x.Remediate != nil {
		return *x.Remediate
	}
	return ""
}

func (x *Profile) GetAlert() string {
	if x != nil && x.Alert != nil {
		return *x.Alert
	}
	return ""
}

func (x *Profile) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Profile) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type PrDependencies_ContextualDependency struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dep  *Dependency                                    `protobuf:"bytes,1,opt,name=dep,proto3" json:"dep,omitempty"`
	File *PrDependencies_ContextualDependency_FilePatch `protobuf:"bytes,2,opt,name=file,proto3" json:"file,omitempty"`
}

func (x *PrDependencies_ContextualDependency) Reset() {
	*x = PrDependencies_ContextualDependency{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[107]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrDependencies_ContextualDependency) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrDependencies_ContextualDependency) ProtoMessage() {}

func (x *PrDependencies_ContextualDependency) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[107]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrDependencies_ContextualDependency.ProtoReflect.Descriptor instead.
func (*PrDependencies_ContextualDependency) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{11, 0}
}

func (x *PrDependencies_ContextualDependency) GetDep() *Dependency {
	if x != nil {
		return x.Dep
	}
	return nil
}

func (x *PrDependencies_ContextualDependency) GetFile() *PrDependencies_ContextualDependency_FilePatch {
	if x != nil {
		return x.File
	}
	return nil
}

type PrDependencies_ContextualDependency_FilePatch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                         // file changed, e.g. package-lock.json
	PatchUrl string `protobuf:"bytes,2,opt,name=patch_url,json=patchUrl,proto3" json:"patch_url,omitempty"` // points to the the raw patchfile
}

func (x *PrDependencies_ContextualDependency_FilePatch) Reset() {
	*x = PrDependencies_ContextualDependency_FilePatch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[108]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrDependencies_ContextualDependency_FilePatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrDependencies_ContextualDependency_FilePatch) ProtoMessage() {}

func (x *PrDependencies_ContextualDependency_FilePatch) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[108]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrDependencies_ContextualDependency_FilePatch.ProtoReflect.Descriptor instead.
func (*PrDependencies_ContextualDependency_FilePatch) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{11, 0, 0}
}

func (x *PrDependencies_ContextualDependency_FilePatch) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PrDependencies_ContextualDependency_FilePatch) GetPatchUrl() string {
	if x != nil {
		return x.PatchUrl
	}
	return ""
}

type RegisterRepoResult_Status struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool    `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error   *string `protobuf:"bytes,2,opt,name=error,proto3,oneof" json:"error,omitempty"`
}

func (x *RegisterRepoResult_Status) Reset() {
	*x = RegisterRepoResult_Status{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[109]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterRepoResult_Status) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterRepoResult_Status) ProtoMessage() {}

func (x *RegisterRepoResult_Status) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[109]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterRepoResult_Status.ProtoReflect.Descriptor instead.
func (*RegisterRepoResult_Status) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{33, 0}
}

func (x *RegisterRepoResult_Status) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RegisterRepoResult_Status) GetError() string {
	if x != nil && x.Error != nil {
		return *x.Error
	}
	return ""
}

// EntiryTypeId is a message that carries an ID together with a type to uniquely identify an entity
// such as (repo, 1), (artifact, 2), ...
// if the struct is reused in other messages, it should be moved to a top-level definition
type GetProfileStatusByNameRequest_EntityTypedId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// entity is the entity to get status for. Incompatible with `all`
	Type Entity `protobuf:"varint,1,opt,name=type,proto3,enum=minder.v1.Entity" json:"type,omitempty"`
	// id is the ID of the entity to get status for. Incompatible with `all`
	Id string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetProfileStatusByNameRequest_EntityTypedId) Reset() {
	*x = GetProfileStatusByNameRequest_EntityTypedId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[111]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProfileStatusByNameRequest_EntityTypedId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProfileStatusByNameRequest_EntityTypedId) ProtoMessage() {}

func (x *GetProfileStatusByNameRequest_EntityTypedId) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[111]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProfileStatusByNameRequest_EntityTypedId.ProtoReflect.Descriptor instead.
func (*GetProfileStatusByNameRequest_EntityTypedId) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{77, 0}
}

func (x *GetProfileStatusByNameRequest_EntityTypedId) GetType() Entity {
	if x != nil {
		return x.Type
	}
	return Entity_ENTITY_UNSPECIFIED
}

func (x *GetProfileStatusByNameRequest_EntityTypedId) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type RestType_Fallback struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HttpCode int32  `protobuf:"varint,1,opt,name=http_code,json=httpCode,proto3" json:"http_code,omitempty"`
	Body     string `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
}

func (x *RestType_Fallback) Reset() {
	*x = RestType_Fallback{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[112]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RestType_Fallback) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestType_Fallback) ProtoMessage() {}

func (x *RestType_Fallback) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[112]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestType_Fallback.ProtoReflect.Descriptor instead.
func (*RestType_Fallback) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{100, 0}
}

func (x *RestType_Fallback) GetHttpCode() int32 {
	if x != nil {
		return x.HttpCode
	}
	return 0
}

func (x *RestType_Fallback) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

type DiffType_Ecosystem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// name is the name of the ecosystem.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// depfile is the file that contains the dependencies for this ecosystem
	Depfile string `protobuf:"bytes,2,opt,name=depfile,proto3" json:"depfile,omitempty"`
}

func (x *DiffType_Ecosystem) Reset() {
	*x = DiffType_Ecosystem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[113]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiffType_Ecosystem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiffType_Ecosystem) ProtoMessage() {}

func (x *DiffType_Ecosystem) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[113]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiffType_Ecosystem.ProtoReflect.Descriptor instead.
func (*DiffType_Ecosystem) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{104, 0}
}

func (x *DiffType_Ecosystem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DiffType_Ecosystem) GetDepfile() string {
	if x != nil {
		return x.Depfile
	}
	return ""
}

// Definition defines the rule type. It encompases the schema and the data evaluation.
type RuleType_Definition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// in_entity is the entity in which the rule is evaluated.
	// This can be repository, build_environment or artifact.
	InEntity string `protobuf:"bytes,1,opt,name=in_entity,json=inEntity,proto3" json:"in_entity,omitempty"`
	// rule_schema is the schema of the rule. This is expressed in JSON Schema.
	RuleSchema *structpb.Struct `protobuf:"bytes,2,opt,name=rule_schema,json=ruleSchema,proto3" json:"rule_schema,omitempty"`
	// param_schema is the schema of the parameters that are passed to the rule.
	// This is expressed in JSON Schema.
	ParamSchema *structpb.Struct               `protobuf:"bytes,3,opt,name=param_schema,json=paramSchema,proto3,oneof" json:"param_schema,omitempty"`
	Ingest      *RuleType_Definition_Ingest    `protobuf:"bytes,4,opt,name=ingest,proto3" json:"ingest,omitempty"`
	Eval        *RuleType_Definition_Eval      `protobuf:"bytes,5,opt,name=eval,proto3" json:"eval,omitempty"`
	Remediate   *RuleType_Definition_Remediate `protobuf:"bytes,6,opt,name=remediate,proto3" json:"remediate,omitempty"`
	Alert       *RuleType_Definition_Alert     `protobuf:"bytes,7,opt,name=alert,proto3" json:"alert,omitempty"`
}

func (x *RuleType_Definition) Reset() {
	*x = RuleType_Definition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[114]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RuleType_Definition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuleType_Definition) ProtoMessage() {}

func (x *RuleType_Definition) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[114]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuleType_Definition.ProtoReflect.Descriptor instead.
func (*RuleType_Definition) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{105, 0}
}

func (x *RuleType_Definition) GetInEntity() string {
	if x != nil {
		return x.InEntity
	}
	return ""
}

func (x *RuleType_Definition) GetRuleSchema() *structpb.Struct {
	if x != nil {
		return x.RuleSchema
	}
	return nil
}

func (x *RuleType_Definition) GetParamSchema() *structpb.Struct {
	if x != nil {
		return x.ParamSchema
	}
	return nil
}

func (x *RuleType_Definition) GetIngest() *RuleType_Definition_Ingest {
	if x != nil {
		return x.Ingest
	}
	return nil
}

func (x *RuleType_Definition) GetEval() *RuleType_Definition_Eval {
	if x != nil {
		return x.Eval
	}
	return nil
}

func (x *RuleType_Definition) GetRemediate() *RuleType_Definition_Remediate {
	if x != nil {
		return x.Remediate
	}
	return nil
}

func (x *RuleType_Definition) GetAlert() *RuleType_Definition_Alert {
	if x != nil {
		return x.Alert
	}
	return nil
}

// Ingest defines how the data is ingested.
type RuleType_Definition_Ingest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// type is the type of the data ingestion.
	// we currently support rest, artifact and builtin.
	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	// rest is the rest data ingestion.
	// this is only used if the type is rest.
	Rest *RestType `protobuf:"bytes,3,opt,name=rest,proto3,oneof" json:"rest,omitempty"`
	// builtin is the builtin data ingestion.
	Builtin *BuiltinType `protobuf:"bytes,4,opt,name=builtin,proto3,oneof" json:"builtin,omitempty"`
	// artifact is the artifact data ingestion.
	Artifact *ArtifactType `protobuf:"bytes,5,opt,name=artifact,proto3,oneof" json:"artifact,omitempty"`
	// git is the git data ingestion.
	Git *GitType `protobuf:"bytes,6,opt,name=git,proto3,oneof" json:"git,omitempty"`
	// diff is the diff data ingestion.
	Diff *DiffType `protobuf:"bytes,7,opt,name=diff,proto3,oneof" json:"diff,omitempty"`
}

func (x *RuleType_Definition_Ingest) Reset() {
	*x = RuleType_Definition_Ingest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[115]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RuleType_Definition_Ingest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuleType_Definition_Ingest) ProtoMessage() {}

func (x *RuleType_Definition_Ingest) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[115]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuleType_Definition_Ingest.ProtoReflect.Descriptor instead.
func (*RuleType_Definition_Ingest) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{105, 0, 0}
}

func (x *RuleType_Definition_Ingest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *RuleType_Definition_Ingest) GetRest() *RestType {
	if x != nil {
		return x.Rest
	}
	return nil
}

func (x *RuleType_Definition_Ingest) GetBuiltin() *BuiltinType {
	if x != nil {
		return x.Builtin
	}
	return nil
}

func (x *RuleType_Definition_Ingest) GetArtifact() *ArtifactType {
	if x != nil {
		return x.Artifact
	}
	return nil
}

func (x *RuleType_Definition_Ingest) GetGit() *GitType {
	if x != nil {
		return x.Git
	}
	return nil
}

func (x *RuleType_Definition_Ingest) GetDiff() *DiffType {
	if x != nil {
		return x.Diff
	}
	return nil
}

// Eval defines the data evaluation definition.
// This pertains to the way we traverse data from the upstream
// endpoint and how we compare it to the rule.
type RuleType_Definition_Eval struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// type is the type of the data evaluation.
	// Right now only `jq` is supported as a driver
	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	// jq is only used if the `jq` type is selected.
	// It defines the comparisons that are made between
	// the ingested data and the profile rule.
	Jq []*RuleType_Definition_Eval_JQComparison `protobuf:"bytes,2,rep,name=jq,proto3" json:"jq,omitempty"`
	// rego is only used if the `rego` type is selected.
	Rego *RuleType_Definition_Eval_Rego `protobuf:"bytes,3,opt,name=rego,proto3,oneof" json:"rego,omitempty"`
	// vulncheck is only used if the `vulncheck` type is selected.
	Vulncheck *RuleType_Definition_Eval_Vulncheck `protobuf:"bytes,4,opt,name=vulncheck,proto3,oneof" json:"vulncheck,omitempty"`
	// trusty is only used if the `trusty` type is selected.
	Trusty *RuleType_Definition_Eval_Trusty `protobuf:"bytes,5,opt,name=trusty,proto3,oneof" json:"trusty,omitempty"`
}

func (x *RuleType_Definition_Eval) Reset() {
	*x = RuleType_Definition_Eval{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[116]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RuleType_Definition_Eval) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuleType_Definition_Eval) ProtoMessage() {}

func (x *RuleType_Definition_Eval) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[116]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuleType_Definition_Eval.ProtoReflect.Descriptor instead.
func (*RuleType_Definition_Eval) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{105, 0, 1}
}

func (x *RuleType_Definition_Eval) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *RuleType_Definition_Eval) GetJq() []*RuleType_Definition_Eval_JQComparison {
	if x != nil {
		return x.Jq
	}
	return nil
}

func (x *RuleType_Definition_Eval) GetRego() *RuleType_Definition_Eval_Rego {
	if x != nil {
		return x.Rego
	}
	return nil
}

func (x *RuleType_Definition_Eval) GetVulncheck() *RuleType_Definition_Eval_Vulncheck {
	if x != nil {
		return x.Vulncheck
	}
	return nil
}

func (x *RuleType_Definition_Eval) GetTrusty() *RuleType_Definition_Eval_Trusty {
	if x != nil {
		return x.Trusty
	}
	return nil
}

type RuleType_Definition_Remediate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type               string                                                `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Rest               *RestType                                             `protobuf:"bytes,2,opt,name=rest,proto3,oneof" json:"rest,omitempty"`
	GhBranchProtection *RuleType_Definition_Remediate_GhBranchProtectionType `protobuf:"bytes,3,opt,name=gh_branch_protection,json=ghBranchProtection,proto3,oneof" json:"gh_branch_protection,omitempty"`
	PullRequest        *RuleType_Definition_Remediate_PullRequestRemediation `protobuf:"bytes,4,opt,name=pull_request,json=pullRequest,proto3,oneof" json:"pull_request,omitempty"`
}

func (x *RuleType_Definition_Remediate) Reset() {
	*x = RuleType_Definition_Remediate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[117]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RuleType_Definition_Remediate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuleType_Definition_Remediate) ProtoMessage() {}

func (x *RuleType_Definition_Remediate) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[117]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuleType_Definition_Remediate.ProtoReflect.Descriptor instead.
func (*RuleType_Definition_Remediate) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{105, 0, 2}
}

func (x *RuleType_Definition_Remediate) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *RuleType_Definition_Remediate) GetRest() *RestType {
	if x != nil {
		return x.Rest
	}
	return nil
}

func (x *RuleType_Definition_Remediate) GetGhBranchProtection() *RuleType_Definition_Remediate_GhBranchProtectionType {
	if x != nil {
		return x.GhBranchProtection
	}
	return nil
}

func (x *RuleType_Definition_Remediate) GetPullRequest() *RuleType_Definition_Remediate_PullRequestRemediation {
	if x != nil {
		return x.PullRequest
	}
	return nil
}

type RuleType_Definition_Alert struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type             string                                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	SecurityAdvisory *RuleType_Definition_Alert_AlertTypeSA `protobuf:"bytes,2,opt,name=security_advisory,json=securityAdvisory,proto3,oneof" json:"security_advisory,omitempty"`
}

func (x *RuleType_Definition_Alert) Reset() {
	*x = RuleType_Definition_Alert{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[118]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RuleType_Definition_Alert) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuleType_Definition_Alert) ProtoMessage() {}

func (x *RuleType_Definition_Alert) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[118]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuleType_Definition_Alert.ProtoReflect.Descriptor instead.
func (*RuleType_Definition_Alert) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{105, 0, 3}
}

func (x *RuleType_Definition_Alert) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *RuleType_Definition_Alert) GetSecurityAdvisory() *RuleType_Definition_Alert_AlertTypeSA {
	if x != nil {
		return x.SecurityAdvisory
	}
	return nil
}

type RuleType_Definition_Eval_JQComparison struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Ingested points to the data retrieved in the `ingest` section
	Ingested *RuleType_Definition_Eval_JQComparison_Operator `protobuf:"bytes,1,opt,name=ingested,proto3" json:"ingested,omitempty"`
	// Profile points to the profile itself.
	Profile *RuleType_Definition_Eval_JQComparison_Operator `protobuf:"bytes,2,opt,name=profile,proto3" json:"profile,omitempty"`
}

func (x *RuleType_Definition_Eval_JQComparison) Reset() {
	*x = RuleType_Definition_Eval_JQComparison{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[119]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RuleType_Definition_Eval_JQComparison) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuleType_Definition_Eval_JQComparison) ProtoMessage() {}

func (x *RuleType_Definition_Eval_JQComparison) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[119]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuleType_Definition_Eval_JQComparison.ProtoReflect.Descriptor instead.
func (*RuleType_Definition_Eval_JQComparison) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{105, 0, 1, 0}
}

func (x *RuleType_Definition_Eval_JQComparison) GetIngested() *RuleType_Definition_Eval_JQComparison_Operator {
	if x != nil {
		return x.Ingested
	}
	return nil
}

func (x *RuleType_Definition_Eval_JQComparison) GetProfile() *RuleType_Definition_Eval_JQComparison_Operator {
	if x != nil {
		return x.Profile
	}
	return nil
}

type RuleType_Definition_Eval_Rego struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// type is the type of evaluation engine to use
	// for rego. We currently have two modes of operation:
	//   - deny-by-default: this is the default mode of operation
	//     where we deny access by default and allow access only
	//     if the profile explicitly allows it. It expects the
	//     profile to set an `allow` variable to true or false.
	//   - constraints: this is the mode of operation where we
	//     allow access by default and deny access only if a
	//     violation is found. It expects the profile to set a
	//     `violations` variable with a "msg" field.
	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	// def is the definition of the rego profile.
	Def string `protobuf:"bytes,2,opt,name=def,proto3" json:"def,omitempty"`
	// how are violations reported. This is only used if the
	// `constraints` type is selected. The default is `text`
	// which returns human-readable text. The other option is
	// `json` which returns a JSON array containing the violations.
	ViolationFormat *string `protobuf:"bytes,3,opt,name=violation_format,json=violationFormat,proto3,oneof" json:"violation_format,omitempty"`
}

func (x *RuleType_Definition_Eval_Rego) Reset() {
	*x = RuleType_Definition_Eval_Rego{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[120]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RuleType_Definition_Eval_Rego) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuleType_Definition_Eval_Rego) ProtoMessage() {}

func (x *RuleType_Definition_Eval_Rego) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[120]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuleType_Definition_Eval_Rego.ProtoReflect.Descriptor instead.
func (*RuleType_Definition_Eval_Rego) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{105, 0, 1, 1}
}

func (x *RuleType_Definition_Eval_Rego) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *RuleType_Definition_Eval_Rego) GetDef() string {
	if x != nil {
		return x.Def
	}
	return ""
}

func (x *RuleType_Definition_Eval_Rego) GetViolationFormat() string {
	if x != nil && x.ViolationFormat != nil {
		return *x.ViolationFormat
	}
	return ""
}

type RuleType_Definition_Eval_Vulncheck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RuleType_Definition_Eval_Vulncheck) Reset() {
	*x = RuleType_Definition_Eval_Vulncheck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[121]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RuleType_Definition_Eval_Vulncheck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuleType_Definition_Eval_Vulncheck) ProtoMessage() {}

func (x *RuleType_Definition_Eval_Vulncheck) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[121]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuleType_Definition_Eval_Vulncheck.ProtoReflect.Descriptor instead.
func (*RuleType_Definition_Eval_Vulncheck) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{105, 0, 1, 2}
}

type RuleType_Definition_Eval_Trusty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// e.g. https://staging.stacklok.dev/
	Endpoint string `protobuf:"bytes,1,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
}

func (x *RuleType_Definition_Eval_Trusty) Reset() {
	*x = RuleType_Definition_Eval_Trusty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[122]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RuleType_Definition_Eval_Trusty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuleType_Definition_Eval_Trusty) ProtoMessage() {}

func (x *RuleType_Definition_Eval_Trusty) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[122]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuleType_Definition_Eval_Trusty.ProtoReflect.Descriptor instead.
func (*RuleType_Definition_Eval_Trusty) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{105, 0, 1, 3}
}

func (x *RuleType_Definition_Eval_Trusty) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

type RuleType_Definition_Eval_JQComparison_Operator struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Def string `protobuf:"bytes,1,opt,name=def,proto3" json:"def,omitempty"`
}

func (x *RuleType_Definition_Eval_JQComparison_Operator) Reset() {
	*x = RuleType_Definition_Eval_JQComparison_Operator{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[123]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RuleType_Definition_Eval_JQComparison_Operator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuleType_Definition_Eval_JQComparison_Operator) ProtoMessage() {}

func (x *RuleType_Definition_Eval_JQComparison_Operator) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[123]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuleType_Definition_Eval_JQComparison_Operator.ProtoReflect.Descriptor instead.
func (*RuleType_Definition_Eval_JQComparison_Operator) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{105, 0, 1, 0, 0}
}

func (x *RuleType_Definition_Eval_JQComparison_Operator) GetDef() string {
	if x != nil {
		return x.Def
	}
	return ""
}

type RuleType_Definition_Remediate_GhBranchProtectionType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Patch string `protobuf:"bytes,1,opt,name=patch,proto3" json:"patch,omitempty"`
}

func (x *RuleType_Definition_Remediate_GhBranchProtectionType) Reset() {
	*x = RuleType_Definition_Remediate_GhBranchProtectionType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[124]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RuleType_Definition_Remediate_GhBranchProtectionType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuleType_Definition_Remediate_GhBranchProtectionType) ProtoMessage() {}

func (x *RuleType_Definition_Remediate_GhBranchProtectionType) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[124]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuleType_Definition_Remediate_GhBranchProtectionType.ProtoReflect.Descriptor instead.
func (*RuleType_Definition_Remediate_GhBranchProtectionType) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{105, 0, 2, 0}
}

func (x *RuleType_Definition_Remediate_GhBranchProtectionType) GetPatch() string {
	if x != nil {
		return x.Patch
	}
	return ""
}

// the name stutters a bit but we already use a PullRequest message for handling PR entities
type RuleType_Definition_Remediate_PullRequestRemediation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the title of the PR
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// the body of the PR
	Body     string                                                          `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
	Contents []*RuleType_Definition_Remediate_PullRequestRemediation_Content `protobuf:"bytes,3,rep,name=contents,proto3" json:"contents,omitempty"`
	// the method to use to create the PR. For now, these are supported:
	// -- minder.content - ensures that the content of the file is exactly as specified
	//
	//	refer to the Content message for more details
	//
	// -- minder.actions.replace_tags_with_sha - finds any github actions within a workflow
	//
	//	file and replaces the tag with the SHA
	Method string `protobuf:"bytes,4,opt,name=method,proto3" json:"method,omitempty"`
	// If the method is minder.actions.replace_tags_with_sha, this is the configuration
	// for that method
	ActionsReplaceTagsWithSha *RuleType_Definition_Remediate_PullRequestRemediation_ActionsReplaceTagsWithSha `protobuf:"bytes,5,opt,name=actions_replace_tags_with_sha,json=actionsReplaceTagsWithSha,proto3,oneof" json:"actions_replace_tags_with_sha,omitempty"`
}

func (x *RuleType_Definition_Remediate_PullRequestRemediation) Reset() {
	*x = RuleType_Definition_Remediate_PullRequestRemediation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[125]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RuleType_Definition_Remediate_PullRequestRemediation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuleType_Definition_Remediate_PullRequestRemediation) ProtoMessage() {}

func (x *RuleType_Definition_Remediate_PullRequestRemediation) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[125]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuleType_Definition_Remediate_PullRequestRemediation.ProtoReflect.Descriptor instead.
func (*RuleType_Definition_Remediate_PullRequestRemediation) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{105, 0, 2, 1}
}

func (x *RuleType_Definition_Remediate_PullRequestRemediation) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *RuleType_Definition_Remediate_PullRequestRemediation) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *RuleType_Definition_Remediate_PullRequestRemediation) GetContents() []*RuleType_Definition_Remediate_PullRequestRemediation_Content {
	if x != nil {
		return x.Contents
	}
	return nil
}

func (x *RuleType_Definition_Remediate_PullRequestRemediation) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *RuleType_Definition_Remediate_PullRequestRemediation) GetActionsReplaceTagsWithSha() *RuleType_Definition_Remediate_PullRequestRemediation_ActionsReplaceTagsWithSha {
	if x != nil {
		return x.ActionsReplaceTagsWithSha
	}
	return nil
}

type RuleType_Definition_Remediate_PullRequestRemediation_Content struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the file to patch
	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	// how to patch the file. For now, only replace is supported
	Action string `protobuf:"bytes,2,opt,name=action,proto3" json:"action,omitempty"`
	// the content of the file
	Content string `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	// the GIT mode of the file. Not UNIX mode! String because the GH API also uses strings
	// the usual modes are: 100644 for regular files, 100755 for executable files and
	// 040000 for submodules (which we don't use but now you know the meaning of the 1 in 100644)
	// see e.g. https://github.com/go-git/go-git/blob/32e0172851c35ae2fac495069c923330040903d2/plumbing/filemode/filemode.go#L16
	Mode *string `protobuf:"bytes,3,opt,name=mode,proto3,oneof" json:"mode,omitempty"`
}

func (x *RuleType_Definition_Remediate_PullRequestRemediation_Content) Reset() {
	*x = RuleType_Definition_Remediate_PullRequestRemediation_Content{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[126]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RuleType_Definition_Remediate_PullRequestRemediation_Content) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuleType_Definition_Remediate_PullRequestRemediation_Content) ProtoMessage() {}

func (x *RuleType_Definition_Remediate_PullRequestRemediation_Content) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[126]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuleType_Definition_Remediate_PullRequestRemediation_Content.ProtoReflect.Descriptor instead.
func (*RuleType_Definition_Remediate_PullRequestRemediation_Content) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{105, 0, 2, 1, 0}
}

func (x *RuleType_Definition_Remediate_PullRequestRemediation_Content) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *RuleType_Definition_Remediate_PullRequestRemediation_Content) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *RuleType_Definition_Remediate_PullRequestRemediation_Content) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *RuleType_Definition_Remediate_PullRequestRemediation_Content) GetMode() string {
	if x != nil && x.Mode != nil {
		return *x.Mode
	}
	return ""
}

type RuleType_Definition_Remediate_PullRequestRemediation_ActionsReplaceTagsWithSha struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of actions to exclude from the replacement
	Exclude []string `protobuf:"bytes,1,rep,name=exclude,proto3" json:"exclude,omitempty"`
}

func (x *RuleType_Definition_Remediate_PullRequestRemediation_ActionsReplaceTagsWithSha) Reset() {
	*x = RuleType_Definition_Remediate_PullRequestRemediation_ActionsReplaceTagsWithSha{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[127]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RuleType_Definition_Remediate_PullRequestRemediation_ActionsReplaceTagsWithSha) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuleType_Definition_Remediate_PullRequestRemediation_ActionsReplaceTagsWithSha) ProtoMessage() {
}

func (x *RuleType_Definition_Remediate_PullRequestRemediation_ActionsReplaceTagsWithSha) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[127]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuleType_Definition_Remediate_PullRequestRemediation_ActionsReplaceTagsWithSha.ProtoReflect.Descriptor instead.
func (*RuleType_Definition_Remediate_PullRequestRemediation_ActionsReplaceTagsWithSha) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{105, 0, 2, 1, 1}
}

func (x *RuleType_Definition_Remediate_PullRequestRemediation_ActionsReplaceTagsWithSha) GetExclude() []string {
	if x != nil {
		return x.Exclude
	}
	return nil
}

type RuleType_Definition_Alert_AlertTypeSA struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Severity string `protobuf:"bytes,1,opt,name=severity,proto3" json:"severity,omitempty"`
}

func (x *RuleType_Definition_Alert_AlertTypeSA) Reset() {
	*x = RuleType_Definition_Alert_AlertTypeSA{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[128]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RuleType_Definition_Alert_AlertTypeSA) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuleType_Definition_Alert_AlertTypeSA) ProtoMessage() {}

func (x *RuleType_Definition_Alert_AlertTypeSA) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[128]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuleType_Definition_Alert_AlertTypeSA.ProtoReflect.Descriptor instead.
func (*RuleType_Definition_Alert_AlertTypeSA) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{105, 0, 3, 0}
}

func (x *RuleType_Definition_Alert_AlertTypeSA) GetSeverity() string {
	if x != nil {
		return x.Severity
	}
	return ""
}

// Rule defines the individual call of a certain rule type.
type Profile_Rule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// type is the type of the rule to be instantiated.
	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	// params are the parameters that are passed to the rule.
	// This is optional and depends on the rule type.
	Params *structpb.Struct `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
	// def is the definition of the rule.
	// This depends on the rule type.
	Def *structpb.Struct `protobuf:"bytes,3,opt,name=def,proto3" json:"def,omitempty"`
}

func (x *Profile_Rule) Reset() {
	*x = Profile_Rule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minder_v1_minder_proto_msgTypes[129]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Profile_Rule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Profile_Rule) ProtoMessage() {}

func (x *Profile_Rule) ProtoReflect() protoreflect.Message {
	mi := &file_minder_v1_minder_proto_msgTypes[129]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Profile_Rule.ProtoReflect.Descriptor instead.
func (*Profile_Rule) Descriptor() ([]byte, []int) {
	return file_minder_v1_minder_proto_rawDescGZIP(), []int{106, 0}
}

func (x *Profile_Rule) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Profile_Rule) GetParams() *structpb.Struct {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *Profile_Rule) GetDef() *structpb.Struct {
	if x != nil {
		return x.Def
	}
	return nil
}

var file_minder_v1_minder_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptorpb.MethodOptions)(nil),
		ExtensionType: (*RpcOptions)(nil),
		Field:         51077,
		Name:          "minder.v1.rpc_options",
		Tag:           "bytes,51077,opt,name=rpc_options",
		Filename:      "minder/v1/minder.proto",
	},
}

// Extension fields to descriptorpb.MethodOptions.
var (
	// optional minder.v1.RpcOptions rpc_options = 51077;
	E_RpcOptions = &file_minder_v1_minder_proto_extTypes[0]
)

var File_minder_v1_minder_proto protoreflect.FileDescriptor

var file_minder_v1_minder_proto_rawDesc = []byte{
	0x0a, 0x16, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x69, 0x6e, 0x64,
	0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x68,
	0x74, 0x74, 0x70, 0x62, 0x6f, 0x64, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xbf, 0x01,
	0x0a, 0x0a, 0x52, 0x70, 0x63, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1c, 0x0a, 0x09,
	0x61, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x09, 0x61, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73, 0x12, 0x15, 0x0a, 0x06, 0x6e, 0x6f,
	0x5f, 0x6c, 0x6f, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x6e, 0x6f, 0x4c, 0x6f,
	0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x4f, 0x6e, 0x6c, 0x79,
	0x12, 0x26, 0x0a, 0x0f, 0x72, 0x6f, 0x6f, 0x74, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x6f,
	0x6e, 0x6c, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x72, 0x6f, 0x6f, 0x74, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x4f, 0x6e, 0x6c, 0x79, 0x12, 0x35, 0x0a, 0x0a, 0x61, 0x75, 0x74, 0x68,
	0x5f, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x6d,
	0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4f,
	0x77, 0x6e, 0x65, 0x72, 0x52, 0x09, 0x61, 0x75, 0x74, 0x68, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x22,
	0x93, 0x01, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x66, 0x72, 0x6f, 0x6d, 0x22, 0x46, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x72, 0x74,
	0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d,
	0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x72, 0x74, 0x69,
	0x66, 0x61, 0x63, 0x74, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x22, 0x9c, 0x02,
	0x0a, 0x08, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x72,
	0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x5f, 0x70, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x50, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x6f,
	0x77, 0x6e, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65,
	0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x76, 0x69, 0x73,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x76,
	0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72,
	0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x36, 0x0a, 0x08, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x69,
	0x6e, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x7d, 0x0a, 0x0e,
	0x47, 0x69, 0x74, 0x68, 0x75, 0x62, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f,
	0x72, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x5f, 0x73, 0x68, 0x61,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x53, 0x68,
	0x61, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x22, 0xc9, 0x03, 0x0a, 0x15,
	0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x73, 0x69, 0x67, 0x6e,
	0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x53, 0x69, 0x67, 0x6e,
	0x65, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x56, 0x65, 0x72, 0x69, 0x66,
	0x69, 0x65, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x69, 0x73, 0x5f, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65,
	0x5f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x10, 0x69, 0x73, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65,
	0x64, 0x12, 0x28, 0x0a, 0x0d, 0x63, 0x65, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0c, 0x63, 0x65, 0x72, 0x74,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x63,
	0x65, 0x72, 0x74, 0x5f, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x01, 0x52, 0x0a, 0x63, 0x65, 0x72, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x72, 0x88, 0x01,
	0x01, 0x12, 0x25, 0x0a, 0x0c, 0x72, 0x65, 0x6b, 0x6f, 0x72, 0x5f, 0x6c, 0x6f, 0x67, 0x5f, 0x69,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0a, 0x72, 0x65, 0x6b, 0x6f, 0x72,
	0x4c, 0x6f, 0x67, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x2b, 0x0a, 0x0f, 0x72, 0x65, 0x6b, 0x6f,
	0x72, 0x5f, 0x6c, 0x6f, 0x67, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x03, 0x48, 0x03, 0x52, 0x0d, 0x72, 0x65, 0x6b, 0x6f, 0x72, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x88, 0x01, 0x01, 0x12, 0x46, 0x0a, 0x0e, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x04, 0x52, 0x0d, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x42, 0x10, 0x0a,
	0x0e, 0x5f, 0x63, 0x65, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x42,
	0x0e, 0x0a, 0x0c, 0x5f, 0x63, 0x65, 0x72, 0x74, 0x5f, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x42,
	0x0f, 0x0a, 0x0d, 0x5f, 0x72, 0x65, 0x6b, 0x6f, 0x72, 0x5f, 0x6c, 0x6f, 0x67, 0x5f, 0x69, 0x64,
	0x42, 0x12, 0x0a, 0x10, 0x5f, 0x72, 0x65, 0x6b, 0x6f, 0x72, 0x5f, 0x6c, 0x6f, 0x67, 0x5f, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x22, 0xc7, 0x02, 0x0a, 0x0f, 0x41, 0x72, 0x74, 0x69,
	0x66, 0x61, 0x63, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61,
	0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x10,
	0x0a, 0x03, 0x73, 0x68, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x68, 0x61,
	0x12, 0x57, 0x0a, 0x16, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x76, 0x65,
	0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x15, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x56, 0x65, 0x72,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x47, 0x0a, 0x0f, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x48, 0x00, 0x52,
	0x0e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x88,
	0x01, 0x01, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x42, 0x12, 0x0a,
	0x10, 0x5f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f,
	0x77, 0x22, 0x91, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63,
	0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x27, 0x0a, 0x0f,
	0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x74, 0x61, 0x67, 0x12, 0x2c, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x78, 0x74, 0x22, 0x82, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74,
	0x69, 0x66, 0x61, 0x63, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2f, 0x0a, 0x08, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x52, 0x08, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61,
	0x63, 0x74, 0x12, 0x36, 0x0a, 0x08, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x08, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xc7, 0x01, 0x0a, 0x0b, 0x50,
	0x75, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x5f, 0x73, 0x68, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x53, 0x68, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x70, 0x6f, 0x5f, 0x6f, 0x77, 0x6e, 0x65,
	0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x70, 0x6f, 0x4f, 0x77, 0x6e,
	0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x70, 0x6f, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x70, 0x6f, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x71, 0x0a, 0x0a, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e,
	0x63, 0x79, 0x12, 0x35, 0x0a, 0x09, 0x65, 0x63, 0x6f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x65, 0x70, 0x45, 0x63, 0x6f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x09,
	0x65, 0x63, 0x6f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xca, 0x02, 0x0a, 0x0e, 0x50, 0x72, 0x44, 0x65,
	0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x02, 0x70, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x02,
	0x70, 0x72, 0x12, 0x42, 0x0a, 0x04, 0x64, 0x65, 0x70, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2e, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x44,
	0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x75, 0x61, 0x6c, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79,
	0x52, 0x04, 0x64, 0x65, 0x70, 0x73, 0x1a, 0xcb, 0x01, 0x0a, 0x14, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x75, 0x61, 0x6c, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79, 0x12,
	0x27, 0x0a, 0x03, 0x64, 0x65, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d,
	0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65,
	0x6e, 0x63, 0x79, 0x52, 0x03, 0x64, 0x65, 0x70, 0x12, 0x4c, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x72, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x69, 0x65,
	0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x75, 0x61, 0x6c, 0x44, 0x65, 0x70, 0x65,
	0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x63, 0x68,
	0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x1a, 0x3c, 0x0a, 0x09, 0x46, 0x69, 0x6c, 0x65, 0x50, 0x61,
	0x74, 0x63, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x74, 0x63, 0x68,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x74, 0x63,
	0x68, 0x55, 0x72, 0x6c, 0x22, 0x14, 0x0a, 0x12, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x48, 0x65, 0x61,
	0x6c, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x2d, 0x0a, 0x13, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xd0, 0x01, 0x0a, 0x1a, 0x47, 0x65,
	0x74, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x52,
	0x4c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x6c, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x03, 0x63, 0x6c, 0x69, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x19, 0x0a, 0x05, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65,
	0x72, 0x88, 0x01, 0x01, 0x12, 0x2c, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x22, 0x2f, 0x0a, 0x1b,
	0x47, 0x65, 0x74, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x55, 0x52, 0x4c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0xd6, 0x01,
	0x0a, 0x1e, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x46, 0x6f,
	0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x43, 0x4c, 0x49, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x72, 0x69, 0x12, 0x2c, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x69, 0x6e, 0x64,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x22, 0xcc, 0x01, 0x0a, 0x19, 0x53, 0x74, 0x6f, 0x72, 0x65,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12,
	0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x19, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x2c, 0x0a,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x42, 0x08, 0x0a, 0x06, 0x5f,
	0x6f, 0x77, 0x6e, 0x65, 0x72, 0x22, 0x1c, 0x0a, 0x1a, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0xc0, 0x01, 0x0a, 0x1e, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x43, 0x6f, 0x64, 0x65, 0x46, 0x6f, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x57, 0x45, 0x42, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x72, 0x69, 0x12, 0x2c, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x69, 0x6e, 0x64,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x22, 0x9a, 0x01, 0x0a, 0x1f, 0x45, 0x78, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x46, 0x6f, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x57,
	0x45, 0x42, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1d, 0x0a,
	0x0a, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x5f, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x49, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x22, 0x1a, 0x0a, 0x18, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x4f, 0x61, 0x75,
	0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x42, 0x0a, 0x19, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x0e,
	0x72, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x64, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x72, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x64, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x73, 0x22, 0x5b, 0x0a, 0x1e, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x4f, 0x61, 0x75,
	0x74, 0x68, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64,
	0x22, 0x21, 0x0a, 0x1f, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x15, 0x0a, 0x13, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x70, 0x0a, 0x14, 0x52, 0x65,
	0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x35, 0x0a, 0x17, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x5f, 0x69, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x14, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x49, 0x6e, 0x22, 0xd4, 0x01, 0x0a,
	0x07, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x39, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x22, 0x94, 0x01, 0x0a, 0x29, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x6d, 0x6f,
	0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x46, 0x72,
	0x6f, 0x6d, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x22, 0x68, 0x0a, 0x2a, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f,
	0x72, 0x69, 0x65, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6d, 0x69, 0x6e, 0x64,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x66, 0x52, 0x07, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x73, 0x22, 0x5a, 0x0a, 0x15, 0x55, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x66, 0x12, 0x14, 0x0a,
	0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x77,
	0x6e, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x65, 0x70, 0x6f, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x65, 0x70, 0x6f, 0x49, 0x64,
	0x22, 0xe6, 0x04, 0x0a, 0x0a, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x12,
	0x13, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x02, 0x69,
	0x64, 0x88, 0x01, 0x01, 0x12, 0x31, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x48, 0x01, 0x52, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x88, 0x01, 0x01, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x65, 0x70, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x72, 0x65, 0x70, 0x6f, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x68, 0x6f,
	0x6f, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x68, 0x6f, 0x6f,
	0x6b, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x6f, 0x6f, 0x6b, 0x5f, 0x75, 0x72, 0x6c, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x68, 0x6f, 0x6f, 0x6b, 0x55, 0x72, 0x6c, 0x12, 0x1d,
	0x0a, 0x0a, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x55, 0x72, 0x6c, 0x12, 0x1b, 0x0a,
	0x09, 0x63, 0x6c, 0x6f, 0x6e, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x63, 0x6c, 0x6f, 0x6e, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x68, 0x6f,
	0x6f, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68,
	0x6f, 0x6f, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x68, 0x6f, 0x6f, 0x6b, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x6f, 0x6b,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x68, 0x6f, 0x6f, 0x6b, 0x5f, 0x75, 0x75, 0x69,
	0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x6f, 0x6b, 0x55, 0x75, 0x69,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x66, 0x6f, 0x72, 0x6b, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x69, 0x73, 0x46, 0x6f, 0x72, 0x6b, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x72,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x25, 0x0a, 0x0e, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x62, 0x72, 0x61, 0x6e, 0x63,
	0x68, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x69, 0x64, 0x42, 0x0a, 0x0a,
	0x08, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x22, 0xc6, 0x01, 0x0a, 0x19, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x49, 0x64, 0x12, 0x40, 0x0a, 0x0a, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x66, 0x52, 0x0a, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x6f, 0x72, 0x79, 0x12, 0x2c, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x22, 0xd2, 0x01, 0x0a, 0x12, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52,
	0x65, 0x70, 0x6f, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x35, 0x0a, 0x0a, 0x72, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x6f, 0x72, 0x79, 0x52, 0x0a, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79,
	0x12, 0x3c, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x24, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6f, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x1a, 0x47,
	0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x12, 0x19, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a,
	0x06, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x53, 0x0a, 0x1a, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6f, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x6d, 0x0a, 0x18,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x42, 0x79, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x2c, 0x0a,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x22, 0x52, 0x0a, 0x19, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x42, 0x79, 0x49, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x0a, 0x72, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d,
	0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x6f, 0x72, 0x79, 0x52, 0x0a, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x22,
	0x70, 0x0a, 0x1b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x6f, 0x72, 0x79, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23,
	0x0a, 0x0d, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72,
	0x79, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x22, 0x43, 0x0a, 0x1c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x6f, 0x72, 0x79, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x22, 0x99, 0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x22, 0x54, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x6f, 0x72, 0x79, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x35, 0x0a, 0x0a, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x0a, 0x72, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x22, 0x9c, 0x01, 0x0a, 0x1d, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x42, 0x79, 0x4e,
	0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x69, 0x6e,
	0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x22, 0x34, 0x0a, 0x1e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x42, 0x79, 0x4e, 0x61, 0x6d,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xb0, 0x01,
	0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x69,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x12, 0x2c, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x22, 0x4b, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f,
	0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x07,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x6f, 0x72, 0x79, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x22, 0xc3, 0x01,
	0x0a, 0x1e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x2c, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x22, 0x39, 0x0a, 0x1f, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x1b,
	0x0a, 0x19, 0x47, 0x65, 0x74, 0x56, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x2d, 0x0a, 0x1b, 0x47,
	0x65, 0x74, 0x56, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x42,
	0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xc5, 0x03, 0x0a, 0x1c, 0x47,
	0x65, 0x74, 0x56, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x42,
	0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x65, 0x70, 0x6f,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x65, 0x70, 0x6f, 0x49,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x70, 0x6f, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x70, 0x6f, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21,
	0x0a, 0x0c, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x12, 0x29, 0x0a,
	0x10, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65,
	0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x41, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x75, 0x70, 0x67, 0x72,
	0x61, 0x64, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x68, 0x73, 0x61, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x67, 0x68, 0x73, 0x61, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x64, 0x76,
	0x69, 0x73, 0x72, 0x6f, 0x79, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x61, 0x64, 0x76, 0x69, 0x73, 0x72, 0x6f, 0x79, 0x55, 0x72, 0x6c, 0x12, 0x39, 0x0a, 0x0a,
	0x73, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x63,
	0x61, 0x6e, 0x6e, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x22, 0x5b, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x56, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3d, 0x0a, 0x05, 0x76, 0x75, 0x6c, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x27, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x56,
	0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x42, 0x79, 0x49, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x76, 0x75, 0x6c, 0x6e, 0x73, 0x22,
	0x13, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x50, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x07, 0x73, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6d, 0x69,
	0x6e, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x07, 0x73,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x22, 0x26, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x53, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x5d,
	0x0a, 0x15, 0x47, 0x65, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x1c, 0x0a,
	0x1a, 0x47, 0x65, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x50, 0x72, 0x6f, 0x74, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x4d, 0x0a, 0x10, 0x42,
	0x72, 0x61, 0x6e, 0x63, 0x68, 0x50, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x16, 0x0a, 0x06, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69,
	0x73, 0x50, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x65, 0x64, 0x22, 0x69, 0x0a, 0x1b, 0x47, 0x65,
	0x74, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x50, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x12, 0x62, 0x72, 0x61,
	0x6e, 0x63, 0x68, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x50, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x11, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x50, 0x72, 0x6f, 0x74, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x13, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xce, 0x02, 0x0a, 0x12, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x6f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x5f, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x53, 0x75, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x2c, 0x0a,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x22, 0x41, 0x0a, 0x11, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x2c, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x22, 0x14,
	0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0xe6, 0x01, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x10,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x3e, 0x0a,
	0x0e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x2c, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x22, 0x7a, 0x0a,
	0x0f, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2e, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x48, 0x00, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x88, 0x01, 0x01,
	0x12, 0x2e, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73,
	0x42, 0x07, 0x0a, 0x05, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x22, 0x72, 0x0a, 0x14, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x2c, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12,
	0x2c, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x22, 0x45, 0x0a,
	0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x07, 0x70, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x22, 0x72, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x07,
	0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x2c, 0x0a, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x69,
	0x6e, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x22, 0x45, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2c, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x22,
	0x54, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x17, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x43,
	0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x22, 0x46, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x08, 0x70,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x22, 0x55, 0x0a, 0x15, 0x47,
	0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x46, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x07,
	0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x22, 0xb7, 0x01, 0x0a, 0x0d, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a,
	0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25,
	0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3d, 0x0a, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x22, 0xf9, 0x04, 0x0a, 0x14, 0x52, 0x75, 0x6c, 0x65, 0x45, 0x76, 0x61,
	0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x72, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72,
	0x75, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x75, 0x6c, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x3d, 0x0a, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x12, 0x50, 0x0a, 0x0b, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x75, 0x6c, 0x65, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x6e,
	0x66, 0x6f, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x1a, 0x0a,
	0x08, 0x67, 0x75, 0x69, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x67, 0x75, 0x69, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x2d, 0x0a, 0x12, 0x72, 0x65, 0x6d,
	0x65, 0x64, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x72, 0x65, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x59, 0x0a, 0x18, 0x72, 0x65, 0x6d, 0x65,
	0x64, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x00, 0x52, 0x16, 0x72, 0x65, 0x6d, 0x65, 0x64, 0x69,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x88, 0x01, 0x01, 0x12, 0x2f, 0x0a, 0x13, 0x72, 0x65, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x12, 0x72, 0x65, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x1a, 0x3d, 0x0a, 0x0f, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x6e,
	0x66, 0x6f, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x42, 0x1b, 0x0a, 0x19, 0x5f, 0x72, 0x65, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x22, 0x9f, 0x02, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x2c, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x4e, 0x0a, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x45,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x64, 0x49, 0x64, 0x52, 0x06, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x6c, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x03, 0x61, 0x6c, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x75, 0x6c, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x75, 0x6c, 0x65, 0x1a, 0x46, 0x0a, 0x0d, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x64, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x6d, 0x69, 0x6e, 0x64,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x22, 0xb8, 0x01, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x55, 0x0a, 0x16, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x65,
	0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x75, 0x6c, 0x65, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x14, 0x72, 0x75, 0x6c, 0x65, 0x45, 0x76, 0x61,
	0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x50, 0x0a,
	0x20, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x42, 0x79, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x2c, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x22,
	0x64, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x42, 0x79, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d,
	0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x3c, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e,
	0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6b, 0x65, 0x79, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x22, 0x35, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x22, 0x55, 0x0a, 0x14, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x50, 0x61, 0x69, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x73, 0x73, 0x70, 0x68, 0x72, 0x61, 0x73, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x61, 0x73, 0x73, 0x70, 0x68, 0x72, 0x61,
	0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49,
	0x64, 0x22, 0x5d, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x50, 0x61,
	0x69, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x6b, 0x65,
	0x79, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x6b, 0x65, 0x79, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79,
	0x22, 0x2f, 0x0a, 0x12, 0x52, 0x45, 0x53, 0x54, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x75,
	0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x61, 0x73, 0x65, 0x55, 0x72,
	0x6c, 0x22, 0x32, 0x0a, 0x14, 0x47, 0x69, 0x74, 0x48, 0x75, 0x62, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x64,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x64,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x22, 0xb3, 0x01, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x12, 0x1f, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x88,
	0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x88, 0x01,
	0x01, 0x12, 0x36, 0x0a, 0x14, 0x72, 0x65, 0x74, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x6f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x02, 0x52, 0x13, 0x72, 0x65, 0x74, 0x69, 0x72, 0x65, 0x64, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x42, 0x17, 0x0a, 0x15, 0x5f, 0x72, 0x65, 0x74, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x6f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x44, 0x0a, 0x14, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x22, 0x4b, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x0a, 0x72, 0x75,
	0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x75, 0x6c, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x09, 0x72, 0x75, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x73, 0x22, 0x5c,
	0x0a, 0x18, 0x47, 0x65, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x42, 0x79, 0x4e,
	0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x69,
	0x6e, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x4d, 0x0a, 0x19,
	0x47, 0x65, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x42, 0x79, 0x4e, 0x61, 0x6d,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x09, 0x72, 0x75, 0x6c,
	0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d,
	0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x75, 0x6c, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x08, 0x72, 0x75, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x56, 0x0a, 0x16, 0x47,
	0x65, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x4b, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30,
	0x0a, 0x09, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x75,
	0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x72, 0x75, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x22, 0x77, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x09, 0x72, 0x75, 0x6c,
	0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d,
	0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x75, 0x6c, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x08, 0x72, 0x75, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2c, 0x0a, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d,
	0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x22, 0x4a, 0x0a, 0x16, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x09, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x75, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x72, 0x75, 0x6c,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x77, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x75, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30,
	0x0a, 0x09, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x75,
	0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x72, 0x75, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x2c, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x22, 0x4a,
	0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x09, 0x72, 0x75, 0x6c, 0x65,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x69,
	0x6e, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x75, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x08, 0x72, 0x75, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x55, 0x0a, 0x15, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x18, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x87, 0x02, 0x0a, 0x08,
	0x52, 0x65, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x68,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x17, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x88, 0x01, 0x01, 0x12,
	0x14, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x73, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x70, 0x61, 0x72, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x08, 0x66, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63,
	0x6b, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x46, 0x61, 0x6c,
	0x6c, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x08, 0x66, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x1a,
	0x3b, 0x0a, 0x08, 0x46, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x1b, 0x0a, 0x09, 0x68,
	0x74, 0x74, 0x70, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x68, 0x74, 0x74, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x42, 0x07, 0x0a, 0x05,
	0x5f, 0x62, 0x6f, 0x64, 0x79, 0x22, 0x25, 0x0a, 0x0b, 0x42, 0x75, 0x69, 0x6c, 0x74, 0x69, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x22, 0x0e, 0x0a, 0x0c,
	0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x3e, 0x0a, 0x07,
	0x47, 0x69, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x6f, 0x6e, 0x65,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x6f, 0x6e,
	0x65, 0x55, 0x72, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x22, 0x84, 0x01, 0x0a,
	0x08, 0x44, 0x69, 0x66, 0x66, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3d, 0x0a, 0x0a, 0x65, 0x63, 0x6f,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x66, 0x66, 0x54, 0x79,
	0x70, 0x65, 0x2e, 0x45, 0x63, 0x6f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x0a, 0x65, 0x63,
	0x6f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x1a, 0x39, 0x0a, 0x09, 0x45, 0x63, 0x6f, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x70,
	0x66, 0x69, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x65, 0x70, 0x66,
	0x69, 0x6c, 0x65, 0x22, 0xbe, 0x16, 0x0a, 0x08, 0x52, 0x75, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x13, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x02,
	0x69, 0x64, 0x88, 0x01, 0x01, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x69, 0x6e,
	0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x30, 0x0a, 0x03, 0x64, 0x65, 0x66, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x75, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x03, 0x64, 0x65, 0x66, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x67,
	0x75, 0x69, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67,
	0x75, 0x69, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x1a, 0xe3, 0x14, 0x0a, 0x0a, 0x44, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6e, 0x5f, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6e, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x12, 0x38, 0x0a, 0x0b, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x73, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x52, 0x0a, 0x72, 0x75, 0x6c, 0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x3f, 0x0a,
	0x0c, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x48, 0x00, 0x52, 0x0b,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x88, 0x01, 0x01, 0x12, 0x3d,
	0x0a, 0x06, 0x69, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25,
	0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x75, 0x6c, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x2e, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x49,
	0x6e, 0x67, 0x65, 0x73, 0x74, 0x52, 0x06, 0x69, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x12, 0x37, 0x0a,
	0x04, 0x65, 0x76, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6d, 0x69,
	0x6e, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x75, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x2e, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x45, 0x76, 0x61, 0x6c,
	0x52, 0x04, 0x65, 0x76, 0x61, 0x6c, 0x12, 0x46, 0x0a, 0x09, 0x72, 0x65, 0x6d, 0x65, 0x64, 0x69,
	0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6d, 0x69, 0x6e, 0x64,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x75, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x44,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x6d, 0x65, 0x64, 0x69,
	0x61, 0x74, 0x65, 0x52, 0x09, 0x72, 0x65, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x65, 0x12, 0x3a,
	0x0a, 0x05, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x75, 0x6c, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x2e, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x6c,
	0x65, 0x72, 0x74, 0x52, 0x05, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x1a, 0xc7, 0x02, 0x0a, 0x06, 0x49,
	0x6e, 0x67, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x2c, 0x0a, 0x04, 0x72, 0x65, 0x73,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x04,
	0x72, 0x65, 0x73, 0x74, 0x88, 0x01, 0x01, 0x12, 0x35, 0x0a, 0x07, 0x62, 0x75, 0x69, 0x6c, 0x74,
	0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x74, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x48, 0x01, 0x52, 0x07, 0x62, 0x75, 0x69, 0x6c, 0x74, 0x69, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x38,
	0x0a, 0x08, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x72, 0x74,
	0x69, 0x66, 0x61, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x48, 0x02, 0x52, 0x08, 0x61, 0x72, 0x74,
	0x69, 0x66, 0x61, 0x63, 0x74, 0x88, 0x01, 0x01, 0x12, 0x29, 0x0a, 0x03, 0x67, 0x69, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x69, 0x74, 0x54, 0x79, 0x70, 0x65, 0x48, 0x03, 0x52, 0x03, 0x67, 0x69, 0x74,
	0x88, 0x01, 0x01, 0x12, 0x2c, 0x0a, 0x04, 0x64, 0x69, 0x66, 0x66, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69,
	0x66, 0x66, 0x54, 0x79, 0x70, 0x65, 0x48, 0x04, 0x52, 0x04, 0x64, 0x69, 0x66, 0x66, 0x88, 0x01,
	0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x72, 0x65, 0x73, 0x74, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x62,
	0x75, 0x69, 0x6c, 0x74, 0x69, 0x6e, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x61, 0x72, 0x74, 0x69, 0x66,
	0x61, 0x63, 0x74, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x67, 0x69, 0x74, 0x42, 0x07, 0x0a, 0x05, 0x5f,
	0x64, 0x69, 0x66, 0x66, 0x1a, 0xdd, 0x05, 0x0a, 0x04, 0x45, 0x76, 0x61, 0x6c, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x40, 0x0a, 0x02, 0x6a, 0x71, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e,
	0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x75, 0x6c, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x2e, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x45, 0x76,
	0x61, 0x6c, 0x2e, 0x4a, 0x51, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x69, 0x73, 0x6f, 0x6e, 0x52,
	0x02, 0x6a, 0x71, 0x12, 0x41, 0x0a, 0x04, 0x72, 0x65, 0x67, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x28, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x75,
	0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x45, 0x76, 0x61, 0x6c, 0x2e, 0x52, 0x65, 0x67, 0x6f, 0x48, 0x00, 0x52, 0x04, 0x72,
	0x65, 0x67, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x50, 0x0a, 0x09, 0x76, 0x75, 0x6c, 0x6e, 0x63, 0x68,
	0x65, 0x63, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x6d, 0x69, 0x6e, 0x64,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x75, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x44,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x45, 0x76, 0x61, 0x6c, 0x2e, 0x56,
	0x75, 0x6c, 0x6e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x48, 0x01, 0x52, 0x09, 0x76, 0x75, 0x6c, 0x6e,
	0x63, 0x68, 0x65, 0x63, 0x6b, 0x88, 0x01, 0x01, 0x12, 0x47, 0x0a, 0x06, 0x74, 0x72, 0x75, 0x73,
	0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x75, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x44, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x45, 0x76, 0x61, 0x6c, 0x2e, 0x54, 0x72,
	0x75, 0x73, 0x74, 0x79, 0x48, 0x02, 0x52, 0x06, 0x74, 0x72, 0x75, 0x73, 0x74, 0x79, 0x88, 0x01,
	0x01, 0x1a, 0xd8, 0x01, 0x0a, 0x0c, 0x4a, 0x51, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x69, 0x73,
	0x6f, 0x6e, 0x12, 0x55, 0x0a, 0x08, 0x69, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x65, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x75, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x45, 0x76, 0x61, 0x6c, 0x2e, 0x4a, 0x51, 0x43, 0x6f, 0x6d, 0x70,
	0x61, 0x72, 0x69, 0x73, 0x6f, 0x6e, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52,
	0x08, 0x69, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x65, 0x64, 0x12, 0x53, 0x0a, 0x07, 0x70, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x6d, 0x69, 0x6e,
	0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x75, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x2e,
	0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x45, 0x76, 0x61, 0x6c, 0x2e,
	0x4a, 0x51, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x69, 0x73, 0x6f, 0x6e, 0x2e, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x1a, 0x1c,
	0x0a, 0x08, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x65,
	0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x65, 0x66, 0x1a, 0x71, 0x0a, 0x04,
	0x52, 0x65, 0x67, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x65, 0x66, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x65, 0x66, 0x12, 0x2e, 0x0a, 0x10, 0x76, 0x69,
	0x6f, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0f, 0x76, 0x69, 0x6f, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x88, 0x01, 0x01, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x76,
	0x69, 0x6f, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x1a,
	0x0b, 0x0a, 0x09, 0x56, 0x75, 0x6c, 0x6e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x1a, 0x24, 0x0a, 0x06,
	0x54, 0x72, 0x75, 0x73, 0x74, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x72, 0x65, 0x67, 0x6f, 0x42, 0x0c, 0x0a, 0x0a, 0x5f,
	0x76, 0x75, 0x6c, 0x6e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x74, 0x72,
	0x75, 0x73, 0x74, 0x79, 0x1a, 0xc2, 0x07, 0x0a, 0x09, 0x52, 0x65, 0x6d, 0x65, 0x64, 0x69, 0x61,
	0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x2c, 0x0a, 0x04, 0x72, 0x65, 0x73, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x04, 0x72, 0x65, 0x73,
	0x74, 0x88, 0x01, 0x01, 0x12, 0x76, 0x0a, 0x14, 0x67, 0x68, 0x5f, 0x62, 0x72, 0x61, 0x6e, 0x63,
	0x68, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x75, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x65, 0x2e, 0x47, 0x68, 0x42,
	0x72, 0x61, 0x6e, 0x63, 0x68, 0x50, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x48, 0x01, 0x52, 0x12, 0x67, 0x68, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x50,
	0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x67, 0x0a, 0x0c,
	0x70, 0x75, 0x6c, 0x6c, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x75, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x65, 0x2e, 0x50, 0x75, 0x6c,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x48, 0x02, 0x52, 0x0b, 0x70, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x88, 0x01, 0x01, 0x1a, 0x2e, 0x0a, 0x16, 0x47, 0x68, 0x42, 0x72, 0x61, 0x6e, 0x63,
	0x68, 0x50, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x70, 0x61, 0x74, 0x63, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x70, 0x61, 0x74, 0x63, 0x68, 0x1a, 0xae, 0x04, 0x0a, 0x16, 0x50, 0x75, 0x6c, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x63, 0x0a, 0x08, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x47, 0x2e, 0x6d,
	0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x75, 0x6c, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x2e, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x6d,
	0x65, 0x64, 0x69, 0x61, 0x74, 0x65, 0x2e, 0x50, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x52, 0x65, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0xa0, 0x01, 0x0a, 0x1d, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x5f, 0x74, 0x61, 0x67, 0x73,
	0x5f, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x73, 0x68, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x59, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x75, 0x6c, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x2e, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x52, 0x65, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x65, 0x2e, 0x50, 0x75, 0x6c, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x54,
	0x61, 0x67, 0x73, 0x57, 0x69, 0x74, 0x68, 0x53, 0x68, 0x61, 0x48, 0x00, 0x52, 0x19, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x54, 0x61, 0x67, 0x73,
	0x57, 0x69, 0x74, 0x68, 0x53, 0x68, 0x61, 0x88, 0x01, 0x01, 0x1a, 0x71, 0x0a, 0x07, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x17, 0x0a, 0x04, 0x6d,
	0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x6d, 0x6f, 0x64,
	0x65, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x1a, 0x35, 0x0a,
	0x19, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x54,
	0x61, 0x67, 0x73, 0x57, 0x69, 0x74, 0x68, 0x53, 0x68, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x78,
	0x63, 0x6c, 0x75, 0x64, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x65, 0x78, 0x63,
	0x6c, 0x75, 0x64, 0x65, 0x42, 0x20, 0x0a, 0x1e, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x5f, 0x72, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x5f, 0x74, 0x61, 0x67, 0x73, 0x5f, 0x77, 0x69,
	0x74, 0x68, 0x5f, 0x73, 0x68, 0x61, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x72, 0x65, 0x73, 0x74, 0x42,
	0x17, 0x0a, 0x15, 0x5f, 0x67, 0x68, 0x5f, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x70, 0x75, 0x6c,
	0x6c, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0xc0, 0x01, 0x0a, 0x05, 0x41, 0x6c,
	0x65, 0x72, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x62, 0x0a, 0x11, 0x73, 0x65, 0x63, 0x75, 0x72,
	0x69, 0x74, 0x79, 0x5f, 0x61, 0x64, 0x76, 0x69, 0x73, 0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x30, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x75, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x53, 0x41, 0x48, 0x00, 0x52, 0x10, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79,
	0x41, 0x64, 0x76, 0x69, 0x73, 0x6f, 0x72, 0x79, 0x88, 0x01, 0x01, 0x1a, 0x29, 0x0a, 0x0b, 0x41,
	0x6c, 0x65, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x53, 0x41, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65,
	0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65,
	0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x73, 0x65, 0x63, 0x75, 0x72,
	0x69, 0x74, 0x79, 0x5f, 0x61, 0x64, 0x76, 0x69, 0x73, 0x6f, 0x72, 0x79, 0x42, 0x0f, 0x0a, 0x0d,
	0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x42, 0x05, 0x0a,
	0x03, 0x5f, 0x69, 0x64, 0x22, 0xd3, 0x04, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x12, 0x2c, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x13,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x02, 0x69, 0x64,
	0x88, 0x01, 0x01, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x37, 0x0a, 0x0a, 0x72, 0x65, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x69,
	0x6e, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e,
	0x52, 0x75, 0x6c, 0x65, 0x52, 0x0a, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79,
	0x12, 0x44, 0x0a, 0x11, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x69,
	0x6e, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e,
	0x52, 0x75, 0x6c, 0x65, 0x52, 0x10, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x45, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x33, 0x0a, 0x08, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61,
	0x63, 0x74, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x52, 0x75, 0x6c,
	0x65, 0x52, 0x08, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x12, 0x3a, 0x0a, 0x0c, 0x70,
	0x75, 0x6c, 0x6c, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x07, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x0b, 0x70, 0x75, 0x6c, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x09, 0x72, 0x65, 0x6d, 0x65, 0x64,
	0x69, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x09, 0x72, 0x65,
	0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x61, 0x6c,
	0x65, 0x72, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x05, 0x61, 0x6c, 0x65,
	0x72, 0x74, 0x88, 0x01, 0x01, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x1a, 0x76, 0x0a, 0x04, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x2f, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x12, 0x29, 0x0a, 0x03, 0x64, 0x65, 0x66, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x03, 0x64, 0x65, 0x66, 0x42, 0x05, 0x0a, 0x03, 0x5f,
	0x69, 0x64, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x72, 0x65, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x65,
	0x42, 0x08, 0x0a, 0x06, 0x5f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2a, 0x7b, 0x0a, 0x0b, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x18, 0x4f, 0x42, 0x4a,
	0x45, 0x43, 0x54, 0x5f, 0x4f, 0x57, 0x4e, 0x45, 0x52, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43,
	0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1d, 0x0a, 0x19, 0x4f, 0x42, 0x4a, 0x45, 0x43,
	0x54, 0x5f, 0x4f, 0x57, 0x4e, 0x45, 0x52, 0x5f, 0x4f, 0x52, 0x47, 0x41, 0x4e, 0x49, 0x5a, 0x41,
	0x54, 0x49, 0x4f, 0x4e, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x4f, 0x42, 0x4a, 0x45, 0x43, 0x54,
	0x5f, 0x4f, 0x57, 0x4e, 0x45, 0x52, 0x5f, 0x50, 0x52, 0x4f, 0x4a, 0x45, 0x43, 0x54, 0x10, 0x02,
	0x12, 0x15, 0x0a, 0x11, 0x4f, 0x42, 0x4a, 0x45, 0x43, 0x54, 0x5f, 0x4f, 0x57, 0x4e, 0x45, 0x52,
	0x5f, 0x55, 0x53, 0x45, 0x52, 0x10, 0x03, 0x2a, 0x72, 0x0a, 0x0c, 0x44, 0x65, 0x70, 0x45, 0x63,
	0x6f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x1d, 0x0a, 0x19, 0x44, 0x45, 0x50, 0x5f, 0x45,
	0x43, 0x4f, 0x53, 0x59, 0x53, 0x54, 0x45, 0x4d, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x44, 0x45, 0x50, 0x5f, 0x45, 0x43,
	0x4f, 0x53, 0x59, 0x53, 0x54, 0x45, 0x4d, 0x5f, 0x4e, 0x50, 0x4d, 0x10, 0x01, 0x12, 0x14, 0x0a,
	0x10, 0x44, 0x45, 0x50, 0x5f, 0x45, 0x43, 0x4f, 0x53, 0x59, 0x53, 0x54, 0x45, 0x4d, 0x5f, 0x47,
	0x4f, 0x10, 0x02, 0x12, 0x16, 0x0a, 0x12, 0x44, 0x45, 0x50, 0x5f, 0x45, 0x43, 0x4f, 0x53, 0x59,
	0x53, 0x54, 0x45, 0x4d, 0x5f, 0x50, 0x59, 0x50, 0x49, 0x10, 0x03, 0x2a, 0x88, 0x01, 0x0a, 0x06,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x16, 0x0a, 0x12, 0x45, 0x4e, 0x54, 0x49, 0x54, 0x59,
	0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x17,
	0x0a, 0x13, 0x45, 0x4e, 0x54, 0x49, 0x54, 0x59, 0x5f, 0x52, 0x45, 0x50, 0x4f, 0x53, 0x49, 0x54,
	0x4f, 0x52, 0x49, 0x45, 0x53, 0x10, 0x01, 0x12, 0x1d, 0x0a, 0x19, 0x45, 0x4e, 0x54, 0x49, 0x54,
	0x59, 0x5f, 0x42, 0x55, 0x49, 0x4c, 0x44, 0x5f, 0x45, 0x4e, 0x56, 0x49, 0x52, 0x4f, 0x4e, 0x4d,
	0x45, 0x4e, 0x54, 0x53, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x54, 0x49, 0x54, 0x59,
	0x5f, 0x41, 0x52, 0x54, 0x49, 0x46, 0x41, 0x43, 0x54, 0x53, 0x10, 0x03, 0x12, 0x18, 0x0a, 0x14,
	0x45, 0x4e, 0x54, 0x49, 0x54, 0x59, 0x5f, 0x50, 0x55, 0x4c, 0x4c, 0x5f, 0x52, 0x45, 0x51, 0x55,
	0x45, 0x53, 0x54, 0x53, 0x10, 0x04, 0x32, 0x7d, 0x0a, 0x0d, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x6c, 0x0a, 0x0b, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x12, 0x1d, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1e, 0xaa, 0xf8, 0x18, 0x04, 0x08, 0x01, 0x10, 0x01, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x10, 0x12, 0x0e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x68,
	0x65, 0x61, 0x6c, 0x74, 0x68, 0x32, 0x90, 0x02, 0x0a, 0x0f, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61,
	0x63, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x7e, 0x0a, 0x0d, 0x4c, 0x69, 0x73,
	0x74, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x12, 0x1f, 0x2e, 0x6d, 0x69, 0x6e,
	0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x72, 0x74, 0x69, 0x66,
	0x61, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x6d, 0x69,
	0x6e, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x72, 0x74, 0x69,
	0x66, 0x61, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2a, 0xaa,
	0xf8, 0x18, 0x02, 0x28, 0x02, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x12, 0x1c, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x2f, 0x7b,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x7d, 0x12, 0x7d, 0x0a, 0x0f, 0x47, 0x65, 0x74,
	0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x42, 0x79, 0x49, 0x64, 0x12, 0x21, 0x2e, 0x6d,
	0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69,
	0x66, 0x61, 0x63, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x22, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41,
	0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x23, 0xaa, 0xf8, 0x18, 0x02, 0x28, 0x02, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x17, 0x12, 0x15, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x72, 0x74, 0x69, 0x66,
	0x61, 0x63, 0x74, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x32, 0x90, 0x06, 0x0a, 0x0c, 0x4f, 0x41, 0x75,
	0x74, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x86, 0x01, 0x0a, 0x13, 0x47, 0x65,
	0x74, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x52,
	0x4c, 0x12, 0x25, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x52,
	0x4c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x20, 0xaa, 0xf8, 0x18, 0x04, 0x18, 0x01, 0x28, 0x02, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x12,
	0x12, 0x10, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x2f, 0x75,
	0x72, 0x6c, 0x12, 0x8e, 0x01, 0x0a, 0x17, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43,
	0x6f, 0x64, 0x65, 0x46, 0x6f, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x43, 0x4c, 0x49, 0x12, 0x29,
	0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x46, 0x6f, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x43,
	0x4c, 0x49, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x48, 0x74, 0x74, 0x70, 0x42, 0x6f, 0x64, 0x79, 0x22,
	0x32, 0xaa, 0xf8, 0x18, 0x02, 0x08, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x26, 0x12, 0x24, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x2f, 0x63, 0x61, 0x6c, 0x6c,
	0x62, 0x61, 0x63, 0x6b, 0x2f, 0x7b, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x7d, 0x2f,
	0x63, 0x6c, 0x69, 0x12, 0xa4, 0x01, 0x0a, 0x17, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x43, 0x6f, 0x64, 0x65, 0x46, 0x6f, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x57, 0x45, 0x42, 0x12,
	0x29, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x46, 0x6f, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x57, 0x45, 0x42, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x6d, 0x69, 0x6e,
	0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43,
	0x6f, 0x64, 0x65, 0x46, 0x6f, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x57, 0x45, 0x42, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x32, 0xaa, 0xf8, 0x18, 0x02, 0x08, 0x01, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x26, 0x12, 0x24, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x75,
	0x74, 0x68, 0x2f, 0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x2f, 0x7b, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x7d, 0x2f, 0x77, 0x65, 0x62, 0x12, 0x91, 0x01, 0x0a, 0x12, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x24, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74,
	0x6f, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2e,
	0xaa, 0xf8, 0x18, 0x02, 0x28, 0x02, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x3a, 0x01, 0x2a, 0x22,
	0x1d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x2f, 0x7b, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x7d, 0x2f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0xaa,
	0x01, 0x0a, 0x17, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x29, 0x2e, 0x6d, 0x69, 0x6e,
	0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x38, 0xaa, 0xf8, 0x18, 0x02, 0x28, 0x02, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2c, 0x12,
	0x2a, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x2f, 0x76, 0x65,
	0x72, 0x69, 0x66, 0x79, 0x2f, 0x7b, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x7d, 0x2f,
	0x7b, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x7d, 0x32, 0xba, 0x09, 0x0a, 0x11,
	0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0xa5, 0x01, 0x0a, 0x12, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x24, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25,
	0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x42, 0xaa, 0xf8, 0x18, 0x04, 0x18, 0x01, 0x28, 0x02, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x34, 0x3a, 0x01, 0x2a, 0x22, 0x2f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76,
	0x31, 0x2f, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x2f, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x2f, 0x7b, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x7d,
	0x2f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x12, 0xd2, 0x01, 0x0a, 0x22, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f,
	0x72, 0x69, 0x65, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x12, 0x34, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72,
	0x69, 0x65, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3f, 0xaa,
	0xf8, 0x18, 0x04, 0x18, 0x01, 0x28, 0x02, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x31, 0x12, 0x2f, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72,
	0x69, 0x65, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2f, 0x7b, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x7d, 0x2f, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x12, 0x93,
	0x01, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72,
	0x69, 0x65, 0x73, 0x12, 0x22, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f,
	0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x36, 0xaa, 0xf8,
	0x18, 0x02, 0x28, 0x02, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2a, 0x12, 0x28, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73,
	0x2f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2f, 0x7b, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x7d, 0x12, 0x93, 0x01, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x42, 0x79, 0x49, 0x64, 0x12, 0x23, 0x2e, 0x6d, 0x69, 0x6e,
	0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x6f, 0x72, 0x79, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x24, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x33, 0xaa, 0xf8, 0x18, 0x02, 0x28, 0x02, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x27, 0x12, 0x25, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x2f, 0x69, 0x64, 0x2f, 0x7b, 0x72, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0xa6, 0x01, 0x0a, 0x13, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x42, 0x79, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x25, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x42, 0x79, 0x4e, 0x61,
	0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x6d, 0x69, 0x6e, 0x64,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x6f, 0x72, 0x79, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x40, 0xaa, 0xf8, 0x18, 0x02, 0x28, 0x02, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x34, 0x12,
	0x32, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x6f, 0x72, 0x79, 0x2f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2f, 0x7b, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x7d, 0x2f, 0x6e, 0x61, 0x6d, 0x65, 0x2f, 0x7b, 0x6e, 0x61,
	0x6d, 0x65, 0x7d, 0x12, 0x9e, 0x01, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x42, 0x79, 0x49, 0x64, 0x12, 0x26, 0x2e, 0x6d,
	0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72,
	0x79, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x35, 0xaa,
	0xf8, 0x18, 0x04, 0x18, 0x01, 0x28, 0x02, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x27, 0x2a, 0x25, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72,
	0x79, 0x2f, 0x69, 0x64, 0x2f, 0x7b, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79,
	0x5f, 0x69, 0x64, 0x7d, 0x12, 0xb1, 0x01, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x28, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x42, 0x79, 0x4e, 0x61,
	0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x6d, 0x69, 0x6e, 0x64,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x42, 0xaa, 0xf8, 0x18, 0x04, 0x18, 0x01, 0x28, 0x02, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x34, 0x2a, 0x32, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x2f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x2f, 0x7b, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x7d, 0x2f, 0x6e, 0x61, 0x6d,
	0x65, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x32, 0xc0, 0x02, 0x0a, 0x0b, 0x55, 0x73, 0x65,
	0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x6a, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1c, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x1f, 0xaa, 0xf8, 0x18, 0x04, 0x18, 0x01, 0x28, 0x01, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x11, 0x3a, 0x01, 0x2a, 0x22, 0x0c, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f,
	0x75, 0x73, 0x65, 0x72, 0x12, 0x67, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x12, 0x1c, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1d, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x1c, 0xaa, 0xf8, 0x18, 0x04, 0x18, 0x01, 0x28, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0e, 0x2a,
	0x0c, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x12, 0x5c, 0x0a,
	0x07, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x12, 0x19, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x1a, 0xaa, 0xf8, 0x18, 0x02, 0x28, 0x03, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0e, 0x12, 0x0c, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x32, 0xa4, 0x0d, 0x0a, 0x0e,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x76,
	0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12,
	0x1f, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x20, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x22, 0xaa, 0xf8, 0x18, 0x04, 0x18, 0x01, 0x28, 0x02, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x14, 0x3a, 0x01, 0x2a, 0x22, 0x0f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x70,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x76, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x1f, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x22, 0xaa, 0xf8, 0x18, 0x04,
	0x18, 0x01, 0x28, 0x02, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x3a, 0x01, 0x2a, 0x1a, 0x0f, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x78,
	0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12,
	0x1f, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x20, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x24, 0xaa, 0xf8, 0x18, 0x04, 0x18, 0x01, 0x28, 0x02, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x16, 0x2a, 0x14, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x6f, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x1e, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1e, 0xaa, 0xf8, 0x18, 0x02, 0x28,
	0x02, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x12, 0x12, 0x10, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31,
	0x2f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x79, 0x0a, 0x0e, 0x47, 0x65, 0x74,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x42, 0x79, 0x49, 0x64, 0x12, 0x20, 0x2e, 0x6d, 0x69,
	0x6e, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e,
	0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x22, 0xaa, 0xf8, 0x18, 0x02, 0x28, 0x02, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x12, 0x14,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2f,
	0x7b, 0x69, 0x64, 0x7d, 0x12, 0x9f, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x28, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x79, 0x4e, 0x61,
	0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x6d, 0x69, 0x6e, 0x64,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x30, 0xaa, 0xf8, 0x18, 0x02, 0x28, 0x02, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x24, 0x12, 0x22, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x2f, 0x6e, 0x61, 0x6d, 0x65, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x2f,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x9c, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x79, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x12, 0x2b, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x42, 0x79, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2c, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x79,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x24, 0xaa, 0xf8, 0x18, 0x02, 0x28, 0x02, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x12, 0x16, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x74, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x75, 0x6c,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x1f, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x20, 0xaa, 0xf8, 0x18, 0x02, 0x28,
	0x02, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x12, 0x12, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31,
	0x2f, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x8b, 0x01, 0x0a, 0x11,
	0x47, 0x65, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x42, 0x79, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x23, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x52, 0x75, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x42, 0x79,
	0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2b, 0xaa, 0xf8,
	0x18, 0x02, 0x28, 0x02, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x12, 0x1d, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x76, 0x31, 0x2f, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2f, 0x6e, 0x61,
	0x6d, 0x65, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x12, 0x7e, 0x0a, 0x0f, 0x47, 0x65, 0x74,
	0x52, 0x75, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x42, 0x79, 0x49, 0x64, 0x12, 0x21, 0x2e, 0x6d,
	0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x75, 0x6c, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x22, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52,
	0x75, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x24, 0xaa, 0xf8, 0x18, 0x02, 0x28, 0x02, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x18, 0x12, 0x16, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x75, 0x6c, 0x65, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x7b, 0x0a, 0x0e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x2e, 0x6d, 0x69,
	0x6e, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x75,
	0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e,
	0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x75, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x24, 0xaa, 0xf8, 0x18, 0x04, 0x18, 0x01, 0x28, 0x02, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16,
	0x3a, 0x01, 0x2a, 0x22, 0x11, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x75, 0x6c,
	0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x7b, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x75, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x6d, 0x69, 0x6e,
	0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x75, 0x6c,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x24, 0xaa,
	0xf8, 0x18, 0x04, 0x18, 0x01, 0x28, 0x02, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x3a, 0x01, 0x2a,
	0x1a, 0x11, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x7d, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x75, 0x6c,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x26, 0xaa, 0xf8, 0x18, 0x04,
	0x18, 0x01, 0x28, 0x02, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x2a, 0x16, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x76, 0x31, 0x2f, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2f, 0x7b, 0x69,
	0x64, 0x7d, 0x3a, 0x58, 0x0a, 0x0b, 0x72, 0x70, 0x63, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x85, 0x8f, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x69, 0x6e, 0x64,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x70, 0x63, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x0a, 0x72, 0x70, 0x63, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x3a, 0x5a, 0x38,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x74, 0x61, 0x63, 0x6b,
	0x6c, 0x6f, 0x6b, 0x2f, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x67, 0x6f, 0x2f, 0x6d,
	0x69, 0x6e, 0x64, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_minder_v1_minder_proto_rawDescOnce sync.Once
	file_minder_v1_minder_proto_rawDescData = file_minder_v1_minder_proto_rawDesc
)

func file_minder_v1_minder_proto_rawDescGZIP() []byte {
	file_minder_v1_minder_proto_rawDescOnce.Do(func() {
		file_minder_v1_minder_proto_rawDescData = protoimpl.X.CompressGZIP(file_minder_v1_minder_proto_rawDescData)
	})
	return file_minder_v1_minder_proto_rawDescData
}

var file_minder_v1_minder_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_minder_v1_minder_proto_msgTypes = make([]protoimpl.MessageInfo, 130)
var file_minder_v1_minder_proto_goTypes = []interface{}{
	(ObjectOwner)(0),                                                     // 0: minder.v1.ObjectOwner
	(DepEcosystem)(0),                                                    // 1: minder.v1.DepEcosystem
	(Entity)(0),                                                          // 2: minder.v1.Entity
	(*RpcOptions)(nil),                                                   // 3: minder.v1.RpcOptions
	(*ListArtifactsRequest)(nil),                                         // 4: minder.v1.ListArtifactsRequest
	(*ListArtifactsResponse)(nil),                                        // 5: minder.v1.ListArtifactsResponse
	(*Artifact)(nil),                                                     // 6: minder.v1.Artifact
	(*GithubWorkflow)(nil),                                               // 7: minder.v1.GithubWorkflow
	(*SignatureVerification)(nil),                                        // 8: minder.v1.SignatureVerification
	(*ArtifactVersion)(nil),                                              // 9: minder.v1.ArtifactVersion
	(*GetArtifactByIdRequest)(nil),                                       // 10: minder.v1.GetArtifactByIdRequest
	(*GetArtifactByIdResponse)(nil),                                      // 11: minder.v1.GetArtifactByIdResponse
	(*PullRequest)(nil),                                                  // 12: minder.v1.PullRequest
	(*Dependency)(nil),                                                   // 13: minder.v1.Dependency
	(*PrDependencies)(nil),                                               // 14: minder.v1.PrDependencies
	(*CheckHealthRequest)(nil),                                           // 15: minder.v1.CheckHealthRequest
	(*CheckHealthResponse)(nil),                                          // 16: minder.v1.CheckHealthResponse
	(*GetAuthorizationURLRequest)(nil),                                   // 17: minder.v1.GetAuthorizationURLRequest
	(*GetAuthorizationURLResponse)(nil),                                  // 18: minder.v1.GetAuthorizationURLResponse
	(*ExchangeCodeForTokenCLIRequest)(nil),                               // 19: minder.v1.ExchangeCodeForTokenCLIRequest
	(*StoreProviderTokenRequest)(nil),                                    // 20: minder.v1.StoreProviderTokenRequest
	(*StoreProviderTokenResponse)(nil),                                   // 21: minder.v1.StoreProviderTokenResponse
	(*ExchangeCodeForTokenWEBRequest)(nil),                               // 22: minder.v1.ExchangeCodeForTokenWEBRequest
	(*ExchangeCodeForTokenWEBResponse)(nil),                              // 23: minder.v1.ExchangeCodeForTokenWEBResponse
	(*RevokeOauthTokensRequest)(nil),                                     // 24: minder.v1.RevokeOauthTokensRequest
	(*RevokeOauthTokensResponse)(nil),                                    // 25: minder.v1.RevokeOauthTokensResponse
	(*RevokeOauthProjectTokenRequest)(nil),                               // 26: minder.v1.RevokeOauthProjectTokenRequest
	(*RevokeOauthProjectTokenResponse)(nil),                              // 27: minder.v1.RevokeOauthProjectTokenResponse
	(*RefreshTokenRequest)(nil),                                          // 28: minder.v1.RefreshTokenRequest
	(*RefreshTokenResponse)(nil),                                         // 29: minder.v1.RefreshTokenResponse
	(*Project)(nil),                                                      // 30: minder.v1.Project
	(*ListRemoteRepositoriesFromProviderRequest)(nil),                    // 31: minder.v1.ListRemoteRepositoriesFromProviderRequest
	(*ListRemoteRepositoriesFromProviderResponse)(nil),                   // 32: minder.v1.ListRemoteRepositoriesFromProviderResponse
	(*UpstreamRepositoryRef)(nil),                                        // 33: minder.v1.UpstreamRepositoryRef
	(*Repository)(nil),                                                   // 34: minder.v1.Repository
	(*RegisterRepositoryRequest)(nil),                                    // 35: minder.v1.RegisterRepositoryRequest
	(*RegisterRepoResult)(nil),                                           // 36: minder.v1.RegisterRepoResult
	(*RegisterRepositoryResponse)(nil),                                   // 37: minder.v1.RegisterRepositoryResponse
	(*GetRepositoryByIdRequest)(nil),                                     // 38: minder.v1.GetRepositoryByIdRequest
	(*GetRepositoryByIdResponse)(nil),                                    // 39: minder.v1.GetRepositoryByIdResponse
	(*DeleteRepositoryByIdRequest)(nil),                                  // 40: minder.v1.DeleteRepositoryByIdRequest
	(*DeleteRepositoryByIdResponse)(nil),                                 // 41: minder.v1.DeleteRepositoryByIdResponse
	(*GetRepositoryByNameRequest)(nil),                                   // 42: minder.v1.GetRepositoryByNameRequest
	(*GetRepositoryByNameResponse)(nil),                                  // 43: minder.v1.GetRepositoryByNameResponse
	(*DeleteRepositoryByNameRequest)(nil),                                // 44: minder.v1.DeleteRepositoryByNameRequest
	(*DeleteRepositoryByNameResponse)(nil),                               // 45: minder.v1.DeleteRepositoryByNameResponse
	(*ListRepositoriesRequest)(nil),                                      // 46: minder.v1.ListRepositoriesRequest
	(*ListRepositoriesResponse)(nil),                                     // 47: minder.v1.ListRepositoriesResponse
	(*VerifyProviderTokenFromRequest)(nil),                               // 48: minder.v1.VerifyProviderTokenFromRequest
	(*VerifyProviderTokenFromResponse)(nil),                              // 49: minder.v1.VerifyProviderTokenFromResponse
	(*GetVulnerabilitiesRequest)(nil),                                    // 50: minder.v1.GetVulnerabilitiesRequest
	(*GetVulnerabilityByIdRequest)(nil),                                  // 51: minder.v1.GetVulnerabilityByIdRequest
	(*GetVulnerabilityByIdResponse)(nil),                                 // 52: minder.v1.GetVulnerabilityByIdResponse
	(*GetVulnerabilitiesResponse)(nil),                                   // 53: minder.v1.GetVulnerabilitiesResponse
	(*GetSecretsRequest)(nil),                                            // 54: minder.v1.GetSecretsRequest
	(*GetSecretsResponse)(nil),                                           // 55: minder.v1.GetSecretsResponse
	(*GetSecretByIdRequest)(nil),                                         // 56: minder.v1.GetSecretByIdRequest
	(*GetSecretByIdResponse)(nil),                                        // 57: minder.v1.GetSecretByIdResponse
	(*GetBranchProtectionRequest)(nil),                                   // 58: minder.v1.GetBranchProtectionRequest
	(*BranchProtection)(nil),                                             // 59: minder.v1.BranchProtection
	(*GetBranchProtectionResponse)(nil),                                  // 60: minder.v1.GetBranchProtectionResponse
	(*CreateUserRequest)(nil),                                            // 61: minder.v1.CreateUserRequest
	(*CreateUserResponse)(nil),                                           // 62: minder.v1.CreateUserResponse
	(*DeleteUserRequest)(nil),                                            // 63: minder.v1.DeleteUserRequest
	(*DeleteUserResponse)(nil),                                           // 64: minder.v1.DeleteUserResponse
	(*UserRecord)(nil),                                                   // 65: minder.v1.UserRecord
	(*GetUserRequest)(nil),                                               // 66: minder.v1.GetUserRequest
	(*GetUserResponse)(nil),                                              // 67: minder.v1.GetUserResponse
	(*CreateProfileRequest)(nil),                                         // 68: minder.v1.CreateProfileRequest
	(*CreateProfileResponse)(nil),                                        // 69: minder.v1.CreateProfileResponse
	(*UpdateProfileRequest)(nil),                                         // 70: minder.v1.UpdateProfileRequest
	(*UpdateProfileResponse)(nil),                                        // 71: minder.v1.UpdateProfileResponse
	(*DeleteProfileRequest)(nil),                                         // 72: minder.v1.DeleteProfileRequest
	(*DeleteProfileResponse)(nil),                                        // 73: minder.v1.DeleteProfileResponse
	(*ListProfilesRequest)(nil),                                          // 74: minder.v1.ListProfilesRequest
	(*ListProfilesResponse)(nil),                                         // 75: minder.v1.ListProfilesResponse
	(*GetProfileByIdRequest)(nil),                                        // 76: minder.v1.GetProfileByIdRequest
	(*GetProfileByIdResponse)(nil),                                       // 77: minder.v1.GetProfileByIdResponse
	(*ProfileStatus)(nil),                                                // 78: minder.v1.ProfileStatus
	(*RuleEvaluationStatus)(nil),                                         // 79: minder.v1.RuleEvaluationStatus
	(*GetProfileStatusByNameRequest)(nil),                                // 80: minder.v1.GetProfileStatusByNameRequest
	(*GetProfileStatusByNameResponse)(nil),                               // 81: minder.v1.GetProfileStatusByNameResponse
	(*GetProfileStatusByProjectRequest)(nil),                             // 82: minder.v1.GetProfileStatusByProjectRequest
	(*GetProfileStatusByProjectResponse)(nil),                            // 83: minder.v1.GetProfileStatusByProjectResponse
	(*GetPublicKeyRequest)(nil),                                          // 84: minder.v1.GetPublicKeyRequest
	(*GetPublicKeyResponse)(nil),                                         // 85: minder.v1.GetPublicKeyResponse
	(*CreateKeyPairRequest)(nil),                                         // 86: minder.v1.CreateKeyPairRequest
	(*CreateKeyPairResponse)(nil),                                        // 87: minder.v1.CreateKeyPairResponse
	(*RESTProviderConfig)(nil),                                           // 88: minder.v1.RESTProviderConfig
	(*GitHubProviderConfig)(nil),                                         // 89: minder.v1.GitHubProviderConfig
	(*Context)(nil),                                                      // 90: minder.v1.Context
	(*ListRuleTypesRequest)(nil),                                         // 91: minder.v1.ListRuleTypesRequest
	(*ListRuleTypesResponse)(nil),                                        // 92: minder.v1.ListRuleTypesResponse
	(*GetRuleTypeByNameRequest)(nil),                                     // 93: minder.v1.GetRuleTypeByNameRequest
	(*GetRuleTypeByNameResponse)(nil),                                    // 94: minder.v1.GetRuleTypeByNameResponse
	(*GetRuleTypeByIdRequest)(nil),                                       // 95: minder.v1.GetRuleTypeByIdRequest
	(*GetRuleTypeByIdResponse)(nil),                                      // 96: minder.v1.GetRuleTypeByIdResponse
	(*CreateRuleTypeRequest)(nil),                                        // 97: minder.v1.CreateRuleTypeRequest
	(*CreateRuleTypeResponse)(nil),                                       // 98: minder.v1.CreateRuleTypeResponse
	(*UpdateRuleTypeRequest)(nil),                                        // 99: minder.v1.UpdateRuleTypeRequest
	(*UpdateRuleTypeResponse)(nil),                                       // 100: minder.v1.UpdateRuleTypeResponse
	(*DeleteRuleTypeRequest)(nil),                                        // 101: minder.v1.DeleteRuleTypeRequest
	(*DeleteRuleTypeResponse)(nil),                                       // 102: minder.v1.DeleteRuleTypeResponse
	(*RestType)(nil),                                                     // 103: minder.v1.RestType
	(*BuiltinType)(nil),                                                  // 104: minder.v1.BuiltinType
	(*ArtifactType)(nil),                                                 // 105: minder.v1.ArtifactType
	(*GitType)(nil),                                                      // 106: minder.v1.GitType
	(*DiffType)(nil),                                                     // 107: minder.v1.DiffType
	(*RuleType)(nil),                                                     // 108: minder.v1.RuleType
	(*Profile)(nil),                                                      // 109: minder.v1.Profile
	(*PrDependencies_ContextualDependency)(nil),                          // 110: minder.v1.PrDependencies.ContextualDependency
	(*PrDependencies_ContextualDependency_FilePatch)(nil),                // 111: minder.v1.PrDependencies.ContextualDependency.FilePatch
	(*RegisterRepoResult_Status)(nil),                                    // 112: minder.v1.RegisterRepoResult.Status
	nil,                                                                  // 113: minder.v1.RuleEvaluationStatus.EntityInfoEntry
	(*GetProfileStatusByNameRequest_EntityTypedId)(nil),                  // 114: minder.v1.GetProfileStatusByNameRequest.EntityTypedId
	(*RestType_Fallback)(nil),                                            // 115: minder.v1.RestType.Fallback
	(*DiffType_Ecosystem)(nil),                                           // 116: minder.v1.DiffType.Ecosystem
	(*RuleType_Definition)(nil),                                          // 117: minder.v1.RuleType.Definition
	(*RuleType_Definition_Ingest)(nil),                                   // 118: minder.v1.RuleType.Definition.Ingest
	(*RuleType_Definition_Eval)(nil),                                     // 119: minder.v1.RuleType.Definition.Eval
	(*RuleType_Definition_Remediate)(nil),                                // 120: minder.v1.RuleType.Definition.Remediate
	(*RuleType_Definition_Alert)(nil),                                    // 121: minder.v1.RuleType.Definition.Alert
	(*RuleType_Definition_Eval_JQComparison)(nil),                        // 122: minder.v1.RuleType.Definition.Eval.JQComparison
	(*RuleType_Definition_Eval_Rego)(nil),                                // 123: minder.v1.RuleType.Definition.Eval.Rego
	(*RuleType_Definition_Eval_Vulncheck)(nil),                           // 124: minder.v1.RuleType.Definition.Eval.Vulncheck
	(*RuleType_Definition_Eval_Trusty)(nil),                              // 125: minder.v1.RuleType.Definition.Eval.Trusty
	(*RuleType_Definition_Eval_JQComparison_Operator)(nil),               // 126: minder.v1.RuleType.Definition.Eval.JQComparison.Operator
	(*RuleType_Definition_Remediate_GhBranchProtectionType)(nil),         // 127: minder.v1.RuleType.Definition.Remediate.GhBranchProtectionType
	(*RuleType_Definition_Remediate_PullRequestRemediation)(nil),         // 128: minder.v1.RuleType.Definition.Remediate.PullRequestRemediation
	(*RuleType_Definition_Remediate_PullRequestRemediation_Content)(nil), // 129: minder.v1.RuleType.Definition.Remediate.PullRequestRemediation.Content
	(*RuleType_Definition_Remediate_PullRequestRemediation_ActionsReplaceTagsWithSha)(nil), // 130: minder.v1.RuleType.Definition.Remediate.PullRequestRemediation.ActionsReplaceTagsWithSha
	(*RuleType_Definition_Alert_AlertTypeSA)(nil),                                          // 131: minder.v1.RuleType.Definition.Alert.AlertTypeSA
	(*Profile_Rule)(nil),               // 132: minder.v1.Profile.Rule
	(*timestamppb.Timestamp)(nil),      // 133: google.protobuf.Timestamp
	(*structpb.Struct)(nil),            // 134: google.protobuf.Struct
	(*descriptorpb.MethodOptions)(nil), // 135: google.protobuf.MethodOptions
	(*httpbody.HttpBody)(nil),          // 136: google.api.HttpBody
}
var file_minder_v1_minder_proto_depIdxs = []int32{
	0,   // 0: minder.v1.RpcOptions.auth_scope:type_name -> minder.v1.ObjectOwner
	90,  // 1: minder.v1.ListArtifactsRequest.context:type_name -> minder.v1.Context
	6,   // 2: minder.v1.ListArtifactsResponse.results:type_name -> minder.v1.Artifact
	9,   // 3: minder.v1.Artifact.versions:type_name -> minder.v1.ArtifactVersion
	133, // 4: minder.v1.Artifact.created_at:type_name -> google.protobuf.Timestamp
	133, // 5: minder.v1.SignatureVerification.signature_time:type_name -> google.protobuf.Timestamp
	8,   // 6: minder.v1.ArtifactVersion.signature_verification:type_name -> minder.v1.SignatureVerification
	7,   // 7: minder.v1.ArtifactVersion.github_workflow:type_name -> minder.v1.GithubWorkflow
	133, // 8: minder.v1.ArtifactVersion.created_at:type_name -> google.protobuf.Timestamp
	90,  // 9: minder.v1.GetArtifactByIdRequest.context:type_name -> minder.v1.Context
	6,   // 10: minder.v1.GetArtifactByIdResponse.artifact:type_name -> minder.v1.Artifact
	9,   // 11: minder.v1.GetArtifactByIdResponse.versions:type_name -> minder.v1.ArtifactVersion
	1,   // 12: minder.v1.Dependency.ecosystem:type_name -> minder.v1.DepEcosystem
	12,  // 13: minder.v1.PrDependencies.pr:type_name -> minder.v1.PullRequest
	110, // 14: minder.v1.PrDependencies.deps:type_name -> minder.v1.PrDependencies.ContextualDependency
	90,  // 15: minder.v1.GetAuthorizationURLRequest.context:type_name -> minder.v1.Context
	90,  // 16: minder.v1.ExchangeCodeForTokenCLIRequest.context:type_name -> minder.v1.Context
	90,  // 17: minder.v1.StoreProviderTokenRequest.context:type_name -> minder.v1.Context
	90,  // 18: minder.v1.ExchangeCodeForTokenWEBRequest.context:type_name -> minder.v1.Context
	133, // 19: minder.v1.Project.created_at:type_name -> google.protobuf.Timestamp
	133, // 20: minder.v1.Project.updated_at:type_name -> google.protobuf.Timestamp
	90,  // 21: minder.v1.ListRemoteRepositoriesFromProviderRequest.context:type_name -> minder.v1.Context
	33,  // 22: minder.v1.ListRemoteRepositoriesFromProviderResponse.results:type_name -> minder.v1.UpstreamRepositoryRef
	90,  // 23: minder.v1.Repository.context:type_name -> minder.v1.Context
	133, // 24: minder.v1.Repository.created_at:type_name -> google.protobuf.Timestamp
	133, // 25: minder.v1.Repository.updated_at:type_name -> google.protobuf.Timestamp
	33,  // 26: minder.v1.RegisterRepositoryRequest.repository:type_name -> minder.v1.UpstreamRepositoryRef
	90,  // 27: minder.v1.RegisterRepositoryRequest.context:type_name -> minder.v1.Context
	34,  // 28: minder.v1.RegisterRepoResult.repository:type_name -> minder.v1.Repository
	112, // 29: minder.v1.RegisterRepoResult.status:type_name -> minder.v1.RegisterRepoResult.Status
	36,  // 30: minder.v1.RegisterRepositoryResponse.result:type_name -> minder.v1.RegisterRepoResult
	90,  // 31: minder.v1.GetRepositoryByIdRequest.context:type_name -> minder.v1.Context
	34,  // 32: minder.v1.GetRepositoryByIdResponse.repository:type_name -> minder.v1.Repository
	90,  // 33: minder.v1.DeleteRepositoryByIdRequest.context:type_name -> minder.v1.Context
	90,  // 34: minder.v1.GetRepositoryByNameRequest.context:type_name -> minder.v1.Context
	34,  // 35: minder.v1.GetRepositoryByNameResponse.repository:type_name -> minder.v1.Repository
	90,  // 36: minder.v1.DeleteRepositoryByNameRequest.context:type_name -> minder.v1.Context
	90,  // 37: minder.v1.ListRepositoriesRequest.context:type_name -> minder.v1.Context
	34,  // 38: minder.v1.ListRepositoriesResponse.results:type_name -> minder.v1.Repository
	133, // 39: minder.v1.VerifyProviderTokenFromRequest.timestamp:type_name -> google.protobuf.Timestamp
	90,  // 40: minder.v1.VerifyProviderTokenFromRequest.context:type_name -> minder.v1.Context
	133, // 41: minder.v1.GetVulnerabilityByIdResponse.scanned_at:type_name -> google.protobuf.Timestamp
	133, // 42: minder.v1.GetVulnerabilityByIdResponse.created_at:type_name -> google.protobuf.Timestamp
	52,  // 43: minder.v1.GetVulnerabilitiesResponse.vulns:type_name -> minder.v1.GetVulnerabilityByIdResponse
	57,  // 44: minder.v1.GetSecretsResponse.secrets:type_name -> minder.v1.GetSecretByIdResponse
	59,  // 45: minder.v1.GetBranchProtectionResponse.branch_protections:type_name -> minder.v1.BranchProtection
	133, // 46: minder.v1.CreateUserResponse.created_at:type_name -> google.protobuf.Timestamp
	90,  // 47: minder.v1.CreateUserResponse.context:type_name -> minder.v1.Context
	90,  // 48: minder.v1.DeleteUserRequest.context:type_name -> minder.v1.Context
	133, // 49: minder.v1.UserRecord.created_at:type_name -> google.protobuf.Timestamp
	133, // 50: minder.v1.UserRecord.updated_at:type_name -> google.protobuf.Timestamp
	90,  // 51: minder.v1.GetUserRequest.context:type_name -> minder.v1.Context
	65,  // 52: minder.v1.GetUserResponse.user:type_name -> minder.v1.UserRecord
	30,  // 53: minder.v1.GetUserResponse.projects:type_name -> minder.v1.Project
	109, // 54: minder.v1.CreateProfileRequest.profile:type_name -> minder.v1.Profile
	90,  // 55: minder.v1.CreateProfileRequest.context:type_name -> minder.v1.Context
	109, // 56: minder.v1.CreateProfileResponse.profile:type_name -> minder.v1.Profile
	109, // 57: minder.v1.UpdateProfileRequest.profile:type_name -> minder.v1.Profile
	90,  // 58: minder.v1.UpdateProfileRequest.context:type_name -> minder.v1.Context
	109, // 59: minder.v1.UpdateProfileResponse.profile:type_name -> minder.v1.Profile
	90,  // 60: minder.v1.DeleteProfileRequest.context:type_name -> minder.v1.Context
	90,  // 61: minder.v1.ListProfilesRequest.context:type_name -> minder.v1.Context
	109, // 62: minder.v1.ListProfilesResponse.profiles:type_name -> minder.v1.Profile
	90,  // 63: minder.v1.GetProfileByIdRequest.context:type_name -> minder.v1.Context
	109, // 64: minder.v1.GetProfileByIdResponse.profile:type_name -> minder.v1.Profile
	133, // 65: minder.v1.ProfileStatus.last_updated:type_name -> google.protobuf.Timestamp
	133, // 66: minder.v1.RuleEvaluationStatus.last_updated:type_name -> google.protobuf.Timestamp
	113, // 67: minder.v1.RuleEvaluationStatus.entity_info:type_name -> minder.v1.RuleEvaluationStatus.EntityInfoEntry
	133, // 68: minder.v1.RuleEvaluationStatus.remediation_last_updated:type_name -> google.protobuf.Timestamp
	90,  // 69: minder.v1.GetProfileStatusByNameRequest.context:type_name -> minder.v1.Context
	114, // 70: minder.v1.GetProfileStatusByNameRequest.entity:type_name -> minder.v1.GetProfileStatusByNameRequest.EntityTypedId
	78,  // 71: minder.v1.GetProfileStatusByNameResponse.profile_status:type_name -> minder.v1.ProfileStatus
	79,  // 72: minder.v1.GetProfileStatusByNameResponse.rule_evaluation_status:type_name -> minder.v1.RuleEvaluationStatus
	90,  // 73: minder.v1.GetProfileStatusByProjectRequest.context:type_name -> minder.v1.Context
	78,  // 74: minder.v1.GetProfileStatusByProjectResponse.profile_status:type_name -> minder.v1.ProfileStatus
	90,  // 75: minder.v1.ListRuleTypesRequest.context:type_name -> minder.v1.Context
	108, // 76: minder.v1.ListRuleTypesResponse.rule_types:type_name -> minder.v1.RuleType
	90,  // 77: minder.v1.GetRuleTypeByNameRequest.context:type_name -> minder.v1.Context
	108, // 78: minder.v1.GetRuleTypeByNameResponse.rule_type:type_name -> minder.v1.RuleType
	90,  // 79: minder.v1.GetRuleTypeByIdRequest.context:type_name -> minder.v1.Context
	108, // 80: minder.v1.GetRuleTypeByIdResponse.rule_type:type_name -> minder.v1.RuleType
	108, // 81: minder.v1.CreateRuleTypeRequest.rule_type:type_name -> minder.v1.RuleType
	90,  // 82: minder.v1.CreateRuleTypeRequest.context:type_name -> minder.v1.Context
	108, // 83: minder.v1.CreateRuleTypeResponse.rule_type:type_name -> minder.v1.RuleType
	108, // 84: minder.v1.UpdateRuleTypeRequest.rule_type:type_name -> minder.v1.RuleType
	90,  // 85: minder.v1.UpdateRuleTypeRequest.context:type_name -> minder.v1.Context
	108, // 86: minder.v1.UpdateRuleTypeResponse.rule_type:type_name -> minder.v1.RuleType
	90,  // 87: minder.v1.DeleteRuleTypeRequest.context:type_name -> minder.v1.Context
	115, // 88: minder.v1.RestType.fallback:type_name -> minder.v1.RestType.Fallback
	116, // 89: minder.v1.DiffType.ecosystems:type_name -> minder.v1.DiffType.Ecosystem
	90,  // 90: minder.v1.RuleType.context:type_name -> minder.v1.Context
	117, // 91: minder.v1.RuleType.def:type_name -> minder.v1.RuleType.Definition
	90,  // 92: minder.v1.Profile.context:type_name -> minder.v1.Context
	132, // 93: minder.v1.Profile.repository:type_name -> minder.v1.Profile.Rule
	132, // 94: minder.v1.Profile.build_environment:type_name -> minder.v1.Profile.Rule
	132, // 95: minder.v1.Profile.artifact:type_name -> minder.v1.Profile.Rule
	132, // 96: minder.v1.Profile.pull_request:type_name -> minder.v1.Profile.Rule
	13,  // 97: minder.v1.PrDependencies.ContextualDependency.dep:type_name -> minder.v1.Dependency
	111, // 98: minder.v1.PrDependencies.ContextualDependency.file:type_name -> minder.v1.PrDependencies.ContextualDependency.FilePatch
	2,   // 99: minder.v1.GetProfileStatusByNameRequest.EntityTypedId.type:type_name -> minder.v1.Entity
	134, // 100: minder.v1.RuleType.Definition.rule_schema:type_name -> google.protobuf.Struct
	134, // 101: minder.v1.RuleType.Definition.param_schema:type_name -> google.protobuf.Struct
	118, // 102: minder.v1.RuleType.Definition.ingest:type_name -> minder.v1.RuleType.Definition.Ingest
	119, // 103: minder.v1.RuleType.Definition.eval:type_name -> minder.v1.RuleType.Definition.Eval
	120, // 104: minder.v1.RuleType.Definition.remediate:type_name -> minder.v1.RuleType.Definition.Remediate
	121, // 105: minder.v1.RuleType.Definition.alert:type_name -> minder.v1.RuleType.Definition.Alert
	103, // 106: minder.v1.RuleType.Definition.Ingest.rest:type_name -> minder.v1.RestType
	104, // 107: minder.v1.RuleType.Definition.Ingest.builtin:type_name -> minder.v1.BuiltinType
	105, // 108: minder.v1.RuleType.Definition.Ingest.artifact:type_name -> minder.v1.ArtifactType
	106, // 109: minder.v1.RuleType.Definition.Ingest.git:type_name -> minder.v1.GitType
	107, // 110: minder.v1.RuleType.Definition.Ingest.diff:type_name -> minder.v1.DiffType
	122, // 111: minder.v1.RuleType.Definition.Eval.jq:type_name -> minder.v1.RuleType.Definition.Eval.JQComparison
	123, // 112: minder.v1.RuleType.Definition.Eval.rego:type_name -> minder.v1.RuleType.Definition.Eval.Rego
	124, // 113: minder.v1.RuleType.Definition.Eval.vulncheck:type_name -> minder.v1.RuleType.Definition.Eval.Vulncheck
	125, // 114: minder.v1.RuleType.Definition.Eval.trusty:type_name -> minder.v1.RuleType.Definition.Eval.Trusty
	103, // 115: minder.v1.RuleType.Definition.Remediate.rest:type_name -> minder.v1.RestType
	127, // 116: minder.v1.RuleType.Definition.Remediate.gh_branch_protection:type_name -> minder.v1.RuleType.Definition.Remediate.GhBranchProtectionType
	128, // 117: minder.v1.RuleType.Definition.Remediate.pull_request:type_name -> minder.v1.RuleType.Definition.Remediate.PullRequestRemediation
	131, // 118: minder.v1.RuleType.Definition.Alert.security_advisory:type_name -> minder.v1.RuleType.Definition.Alert.AlertTypeSA
	126, // 119: minder.v1.RuleType.Definition.Eval.JQComparison.ingested:type_name -> minder.v1.RuleType.Definition.Eval.JQComparison.Operator
	126, // 120: minder.v1.RuleType.Definition.Eval.JQComparison.profile:type_name -> minder.v1.RuleType.Definition.Eval.JQComparison.Operator
	129, // 121: minder.v1.RuleType.Definition.Remediate.PullRequestRemediation.contents:type_name -> minder.v1.RuleType.Definition.Remediate.PullRequestRemediation.Content
	130, // 122: minder.v1.RuleType.Definition.Remediate.PullRequestRemediation.actions_replace_tags_with_sha:type_name -> minder.v1.RuleType.Definition.Remediate.PullRequestRemediation.ActionsReplaceTagsWithSha
	134, // 123: minder.v1.Profile.Rule.params:type_name -> google.protobuf.Struct
	134, // 124: minder.v1.Profile.Rule.def:type_name -> google.protobuf.Struct
	135, // 125: minder.v1.rpc_options:extendee -> google.protobuf.MethodOptions
	3,   // 126: minder.v1.rpc_options:type_name -> minder.v1.RpcOptions
	15,  // 127: minder.v1.HealthService.CheckHealth:input_type -> minder.v1.CheckHealthRequest
	4,   // 128: minder.v1.ArtifactService.ListArtifacts:input_type -> minder.v1.ListArtifactsRequest
	10,  // 129: minder.v1.ArtifactService.GetArtifactById:input_type -> minder.v1.GetArtifactByIdRequest
	17,  // 130: minder.v1.OAuthService.GetAuthorizationURL:input_type -> minder.v1.GetAuthorizationURLRequest
	19,  // 131: minder.v1.OAuthService.ExchangeCodeForTokenCLI:input_type -> minder.v1.ExchangeCodeForTokenCLIRequest
	22,  // 132: minder.v1.OAuthService.ExchangeCodeForTokenWEB:input_type -> minder.v1.ExchangeCodeForTokenWEBRequest
	20,  // 133: minder.v1.OAuthService.StoreProviderToken:input_type -> minder.v1.StoreProviderTokenRequest
	48,  // 134: minder.v1.OAuthService.VerifyProviderTokenFrom:input_type -> minder.v1.VerifyProviderTokenFromRequest
	35,  // 135: minder.v1.RepositoryService.RegisterRepository:input_type -> minder.v1.RegisterRepositoryRequest
	31,  // 136: minder.v1.RepositoryService.ListRemoteRepositoriesFromProvider:input_type -> minder.v1.ListRemoteRepositoriesFromProviderRequest
	46,  // 137: minder.v1.RepositoryService.ListRepositories:input_type -> minder.v1.ListRepositoriesRequest
	38,  // 138: minder.v1.RepositoryService.GetRepositoryById:input_type -> minder.v1.GetRepositoryByIdRequest
	42,  // 139: minder.v1.RepositoryService.GetRepositoryByName:input_type -> minder.v1.GetRepositoryByNameRequest
	40,  // 140: minder.v1.RepositoryService.DeleteRepositoryById:input_type -> minder.v1.DeleteRepositoryByIdRequest
	44,  // 141: minder.v1.RepositoryService.DeleteRepositoryByName:input_type -> minder.v1.DeleteRepositoryByNameRequest
	61,  // 142: minder.v1.UserService.CreateUser:input_type -> minder.v1.CreateUserRequest
	63,  // 143: minder.v1.UserService.DeleteUser:input_type -> minder.v1.DeleteUserRequest
	66,  // 144: minder.v1.UserService.GetUser:input_type -> minder.v1.GetUserRequest
	68,  // 145: minder.v1.ProfileService.CreateProfile:input_type -> minder.v1.CreateProfileRequest
	70,  // 146: minder.v1.ProfileService.UpdateProfile:input_type -> minder.v1.UpdateProfileRequest
	72,  // 147: minder.v1.ProfileService.DeleteProfile:input_type -> minder.v1.DeleteProfileRequest
	74,  // 148: minder.v1.ProfileService.ListProfiles:input_type -> minder.v1.ListProfilesRequest
	76,  // 149: minder.v1.ProfileService.GetProfileById:input_type -> minder.v1.GetProfileByIdRequest
	80,  // 150: minder.v1.ProfileService.GetProfileStatusByName:input_type -> minder.v1.GetProfileStatusByNameRequest
	82,  // 151: minder.v1.ProfileService.GetProfileStatusByProject:input_type -> minder.v1.GetProfileStatusByProjectRequest
	91,  // 152: minder.v1.ProfileService.ListRuleTypes:input_type -> minder.v1.ListRuleTypesRequest
	93,  // 153: minder.v1.ProfileService.GetRuleTypeByName:input_type -> minder.v1.GetRuleTypeByNameRequest
	95,  // 154: minder.v1.ProfileService.GetRuleTypeById:input_type -> minder.v1.GetRuleTypeByIdRequest
	97,  // 155: minder.v1.ProfileService.CreateRuleType:input_type -> minder.v1.CreateRuleTypeRequest
	99,  // 156: minder.v1.ProfileService.UpdateRuleType:input_type -> minder.v1.UpdateRuleTypeRequest
	101, // 157: minder.v1.ProfileService.DeleteRuleType:input_type -> minder.v1.DeleteRuleTypeRequest
	16,  // 158: minder.v1.HealthService.CheckHealth:output_type -> minder.v1.CheckHealthResponse
	5,   // 159: minder.v1.ArtifactService.ListArtifacts:output_type -> minder.v1.ListArtifactsResponse
	11,  // 160: minder.v1.ArtifactService.GetArtifactById:output_type -> minder.v1.GetArtifactByIdResponse
	18,  // 161: minder.v1.OAuthService.GetAuthorizationURL:output_type -> minder.v1.GetAuthorizationURLResponse
	136, // 162: minder.v1.OAuthService.ExchangeCodeForTokenCLI:output_type -> google.api.HttpBody
	23,  // 163: minder.v1.OAuthService.ExchangeCodeForTokenWEB:output_type -> minder.v1.ExchangeCodeForTokenWEBResponse
	21,  // 164: minder.v1.OAuthService.StoreProviderToken:output_type -> minder.v1.StoreProviderTokenResponse
	49,  // 165: minder.v1.OAuthService.VerifyProviderTokenFrom:output_type -> minder.v1.VerifyProviderTokenFromResponse
	37,  // 166: minder.v1.RepositoryService.RegisterRepository:output_type -> minder.v1.RegisterRepositoryResponse
	32,  // 167: minder.v1.RepositoryService.ListRemoteRepositoriesFromProvider:output_type -> minder.v1.ListRemoteRepositoriesFromProviderResponse
	47,  // 168: minder.v1.RepositoryService.ListRepositories:output_type -> minder.v1.ListRepositoriesResponse
	39,  // 169: minder.v1.RepositoryService.GetRepositoryById:output_type -> minder.v1.GetRepositoryByIdResponse
	43,  // 170: minder.v1.RepositoryService.GetRepositoryByName:output_type -> minder.v1.GetRepositoryByNameResponse
	41,  // 171: minder.v1.RepositoryService.DeleteRepositoryById:output_type -> minder.v1.DeleteRepositoryByIdResponse
	45,  // 172: minder.v1.RepositoryService.DeleteRepositoryByName:output_type -> minder.v1.DeleteRepositoryByNameResponse
	62,  // 173: minder.v1.UserService.CreateUser:output_type -> minder.v1.CreateUserResponse
	64,  // 174: minder.v1.UserService.DeleteUser:output_type -> minder.v1.DeleteUserResponse
	67,  // 175: minder.v1.UserService.GetUser:output_type -> minder.v1.GetUserResponse
	69,  // 176: minder.v1.ProfileService.CreateProfile:output_type -> minder.v1.CreateProfileResponse
	71,  // 177: minder.v1.ProfileService.UpdateProfile:output_type -> minder.v1.UpdateProfileResponse
	73,  // 178: minder.v1.ProfileService.DeleteProfile:output_type -> minder.v1.DeleteProfileResponse
	75,  // 179: minder.v1.ProfileService.ListProfiles:output_type -> minder.v1.ListProfilesResponse
	77,  // 180: minder.v1.ProfileService.GetProfileById:output_type -> minder.v1.GetProfileByIdResponse
	81,  // 181: minder.v1.ProfileService.GetProfileStatusByName:output_type -> minder.v1.GetProfileStatusByNameResponse
	83,  // 182: minder.v1.ProfileService.GetProfileStatusByProject:output_type -> minder.v1.GetProfileStatusByProjectResponse
	92,  // 183: minder.v1.ProfileService.ListRuleTypes:output_type -> minder.v1.ListRuleTypesResponse
	94,  // 184: minder.v1.ProfileService.GetRuleTypeByName:output_type -> minder.v1.GetRuleTypeByNameResponse
	96,  // 185: minder.v1.ProfileService.GetRuleTypeById:output_type -> minder.v1.GetRuleTypeByIdResponse
	98,  // 186: minder.v1.ProfileService.CreateRuleType:output_type -> minder.v1.CreateRuleTypeResponse
	100, // 187: minder.v1.ProfileService.UpdateRuleType:output_type -> minder.v1.UpdateRuleTypeResponse
	102, // 188: minder.v1.ProfileService.DeleteRuleType:output_type -> minder.v1.DeleteRuleTypeResponse
	158, // [158:189] is the sub-list for method output_type
	127, // [127:158] is the sub-list for method input_type
	126, // [126:127] is the sub-list for extension type_name
	125, // [125:126] is the sub-list for extension extendee
	0,   // [0:125] is the sub-list for field type_name
}

func init() { file_minder_v1_minder_proto_init() }
func file_minder_v1_minder_proto_init() {
	if File_minder_v1_minder_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_minder_v1_minder_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RpcOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListArtifactsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListArtifactsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Artifact); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GithubWorkflow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignatureVerification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArtifactVersion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetArtifactByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetArtifactByIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PullRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Dependency); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrDependencies); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckHealthRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckHealthResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAuthorizationURLRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAuthorizationURLResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExchangeCodeForTokenCLIRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoreProviderTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoreProviderTokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExchangeCodeForTokenWEBRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExchangeCodeForTokenWEBResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RevokeOauthTokensRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RevokeOauthTokensResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RevokeOauthProjectTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RevokeOauthProjectTokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefreshTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefreshTokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Project); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRemoteRepositoriesFromProviderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRemoteRepositoriesFromProviderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpstreamRepositoryRef); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Repository); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterRepositoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterRepoResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterRepositoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRepositoryByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRepositoryByIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRepositoryByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRepositoryByIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRepositoryByNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRepositoryByNameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRepositoryByNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRepositoryByNameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRepositoriesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRepositoriesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifyProviderTokenFromRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifyProviderTokenFromResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVulnerabilitiesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVulnerabilityByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVulnerabilityByIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVulnerabilitiesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSecretsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSecretsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSecretByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSecretByIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBranchProtectionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BranchProtection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBranchProtectionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateProfileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateProfileResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateProfileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateProfileResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteProfileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteProfileResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListProfilesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListProfilesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProfileByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProfileByIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProfileStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RuleEvaluationStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProfileStatusByNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProfileStatusByNameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProfileStatusByProjectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProfileStatusByProjectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPublicKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPublicKeyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateKeyPairRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateKeyPairResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RESTProviderConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GitHubProviderConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Context); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRuleTypesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRuleTypesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRuleTypeByNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRuleTypeByNameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRuleTypeByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRuleTypeByIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRuleTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRuleTypeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRuleTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRuleTypeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRuleTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRuleTypeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[100].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RestType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[101].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuiltinType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[102].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArtifactType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[103].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GitType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[104].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiffType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[105].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RuleType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[106].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Profile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[107].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrDependencies_ContextualDependency); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[108].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrDependencies_ContextualDependency_FilePatch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[109].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterRepoResult_Status); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[111].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProfileStatusByNameRequest_EntityTypedId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[112].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RestType_Fallback); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[113].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiffType_Ecosystem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[114].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RuleType_Definition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[115].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RuleType_Definition_Ingest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[116].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RuleType_Definition_Eval); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[117].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RuleType_Definition_Remediate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[118].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RuleType_Definition_Alert); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[119].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RuleType_Definition_Eval_JQComparison); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[120].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RuleType_Definition_Eval_Rego); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[121].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RuleType_Definition_Eval_Vulncheck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[122].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RuleType_Definition_Eval_Trusty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[123].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RuleType_Definition_Eval_JQComparison_Operator); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[124].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RuleType_Definition_Remediate_GhBranchProtectionType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[125].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RuleType_Definition_Remediate_PullRequestRemediation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[126].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RuleType_Definition_Remediate_PullRequestRemediation_Content); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[127].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RuleType_Definition_Remediate_PullRequestRemediation_ActionsReplaceTagsWithSha); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[128].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RuleType_Definition_Alert_AlertTypeSA); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minder_v1_minder_proto_msgTypes[129].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Profile_Rule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_minder_v1_minder_proto_msgTypes[5].OneofWrappers = []interface{}{}
	file_minder_v1_minder_proto_msgTypes[6].OneofWrappers = []interface{}{}
	file_minder_v1_minder_proto_msgTypes[14].OneofWrappers = []interface{}{}
	file_minder_v1_minder_proto_msgTypes[17].OneofWrappers = []interface{}{}
	file_minder_v1_minder_proto_msgTypes[31].OneofWrappers = []interface{}{}
	file_minder_v1_minder_proto_msgTypes[64].OneofWrappers = []interface{}{}
	file_minder_v1_minder_proto_msgTypes[76].OneofWrappers = []interface{}{}
	file_minder_v1_minder_proto_msgTypes[87].OneofWrappers = []interface{}{}
	file_minder_v1_minder_proto_msgTypes[100].OneofWrappers = []interface{}{}
	file_minder_v1_minder_proto_msgTypes[105].OneofWrappers = []interface{}{}
	file_minder_v1_minder_proto_msgTypes[106].OneofWrappers = []interface{}{}
	file_minder_v1_minder_proto_msgTypes[109].OneofWrappers = []interface{}{}
	file_minder_v1_minder_proto_msgTypes[114].OneofWrappers = []interface{}{}
	file_minder_v1_minder_proto_msgTypes[115].OneofWrappers = []interface{}{}
	file_minder_v1_minder_proto_msgTypes[116].OneofWrappers = []interface{}{}
	file_minder_v1_minder_proto_msgTypes[117].OneofWrappers = []interface{}{}
	file_minder_v1_minder_proto_msgTypes[118].OneofWrappers = []interface{}{}
	file_minder_v1_minder_proto_msgTypes[120].OneofWrappers = []interface{}{}
	file_minder_v1_minder_proto_msgTypes[125].OneofWrappers = []interface{}{}
	file_minder_v1_minder_proto_msgTypes[126].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_minder_v1_minder_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   130,
			NumExtensions: 1,
			NumServices:   6,
		},
		GoTypes:           file_minder_v1_minder_proto_goTypes,
		DependencyIndexes: file_minder_v1_minder_proto_depIdxs,
		EnumInfos:         file_minder_v1_minder_proto_enumTypes,
		MessageInfos:      file_minder_v1_minder_proto_msgTypes,
		ExtensionInfos:    file_minder_v1_minder_proto_extTypes,
	}.Build()
	File_minder_v1_minder_proto = out.File
	file_minder_v1_minder_proto_rawDesc = nil
	file_minder_v1_minder_proto_goTypes = nil
	file_minder_v1_minder_proto_depIdxs = nil
}
