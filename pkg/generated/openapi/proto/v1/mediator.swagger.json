{
  "swagger": "2.0",
  "info": {
    "title": "proto/v1/mediator.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "HealthService"
    },
    {
      "name": "GitHubWebhookService"
    },
    {
      "name": "OAuthService"
    },
    {
      "name": "LogOutService"
    },
    {
      "name": "AuthVerifyService"
    },
    {
      "name": "VulnerabilitiesService"
    },
    {
      "name": "SecretsService"
    },
    {
      "name": "BranchProtectionService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/v1/auth/callback/{provider}/cli": {
      "get": {
        "operationId": "OAuthService_ExchangeCodeForTokenCLI",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CodeExchangeResponseCLI"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "provider",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "code",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "redirectUri",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "OAuthService"
        ]
      }
    },
    "/api/v1/auth/callback/{provider}/web": {
      "get": {
        "operationId": "OAuthService_ExchangeCodeForTokenWEB",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CodeExchangeResponseWEB"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "provider",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "code",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "redirectUri",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "OAuthService"
        ]
      }
    },
    "/api/v1/auth/url": {
      "get": {
        "operationId": "OAuthService_GetAuthorizationURL",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1AuthorizationURLResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "provider",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cli",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "OAuthService"
        ]
      }
    },
    "/api/v1/auth/verify": {
      "post": {
        "operationId": "AuthVerifyService_Verify",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1AuthVerifyResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1AuthVerifyRequest"
            }
          }
        ],
        "tags": [
          "AuthVerifyService"
        ]
      }
    },
    "/api/v1/branchprotection": {
      "get": {
        "operationId": "BranchProtectionService_GetBranchProtection",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetBranchProtectionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "BranchProtectionService"
        ]
      }
    },
    "/api/v1/github/hook": {
      "post": {
        "operationId": "GitHubWebhookService_HandleGitHubWebhook",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GitHubWebhookResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GitHubWebhookRequest"
            }
          }
        ],
        "tags": [
          "GitHubWebhookService"
        ]
      }
    },
    "/api/v1/health": {
      "get": {
        "operationId": "HealthService_CheckHealth",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1HealthResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "HealthService"
        ]
      }
    },
    "/api/v1/logout": {
      "post": {
        "operationId": "LogOutService_LogOut",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1LogOutResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1LogOutRequest"
            }
          }
        ],
        "tags": [
          "LogOutService"
        ]
      }
    },
    "/api/v1/secrets": {
      "get": {
        "operationId": "SecretsService_GetSecrets",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetSecretsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "SecretsService"
        ]
      }
    },
    "/api/v1/secrets/{id}": {
      "get": {
        "operationId": "SecretsService_GetSecretById",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Secret"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "SecretsService"
        ]
      }
    },
    "/api/v1/vulns": {
      "get": {
        "operationId": "VulnerabilitiesService_GetVulnerabilities",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetVulnerabilitiesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "VulnerabilitiesService"
        ]
      }
    },
    "/api/v1/vulns/{id}": {
      "get": {
        "operationId": "VulnerabilitiesService_GetVulnerabilityById",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Vulnerability"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "VulnerabilitiesService"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1AuthVerifyRequest": {
      "type": "object"
    },
    "v1AuthVerifyResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        }
      }
    },
    "v1AuthorizationURLResponse": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        }
      }
    },
    "v1BranchProtection": {
      "type": "object",
      "properties": {
        "branch": {
          "type": "string"
        },
        "isProtected": {
          "type": "boolean",
          "title": "Add other relevant fields"
        }
      }
    },
    "v1CodeExchangeResponseCLI": {
      "type": "object",
      "properties": {
        "html": {
          "type": "string"
        }
      }
    },
    "v1CodeExchangeResponseWEB": {
      "type": "object",
      "properties": {
        "accessToken": {
          "type": "string"
        },
        "tokenType": {
          "type": "string"
        },
        "expiresIn": {
          "type": "string",
          "format": "int64"
        },
        "status": {
          "type": "string"
        }
      }
    },
    "v1GetBranchProtectionResponse": {
      "type": "object",
      "properties": {
        "branchProtections": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1BranchProtection"
          }
        }
      }
    },
    "v1GetSecretsResponse": {
      "type": "object",
      "properties": {
        "secrets": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Secret"
          }
        }
      }
    },
    "v1GetVulnerabilitiesResponse": {
      "type": "object",
      "properties": {
        "vulns": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Vulnerability"
          }
        }
      }
    },
    "v1GitHubWebhookRequest": {
      "type": "object"
    },
    "v1GitHubWebhookResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        }
      }
    },
    "v1HealthResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        }
      }
    },
    "v1LogOutRequest": {
      "type": "object"
    },
    "v1LogOutResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        }
      }
    },
    "v1Secret": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string",
          "title": "Add other relevant fields"
        }
      }
    },
    "v1Vulnerability": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uint64",
          "title": "May require adjustment, currently set up for GitHub Security Advisories only"
        },
        "githubId": {
          "type": "string",
          "format": "int64"
        },
        "repoId": {
          "type": "string",
          "format": "int64"
        },
        "repoName": {
          "type": "string"
        },
        "packageName": {
          "type": "string"
        },
        "severity": {
          "type": "string"
        },
        "versionAffected": {
          "type": "string"
        },
        "upgradeVersion": {
          "type": "string"
        },
        "ghsaid": {
          "type": "string"
        },
        "advisroyUrl": {
          "type": "string"
        },
        "scannedAt": {
          "type": "string",
          "format": "date-time"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    }
  }
}
