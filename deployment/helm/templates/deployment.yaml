# Copyright 2023 Stacklok, Inc
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apps/v1
kind: Deployment
metadata:
  name: minder
  labels:
    {{ include "common.labels.standard" (dict "customLabels" .Values.commonLabels "context" $ ) | nindent 4 }}
spec:
  # We'll use autoscaling, sometimes clamped to one instance
  selector:
    matchLabels:
      app: '{{ include "common.names.name" . }}'
  strategy:
    {{- if .Values.deploymentSettings.strategy }}
    {{- toYaml .Values.deploymentSettings.strategy | nindent 4 }}
    {{- end }}
  template:
    metadata:
      labels:
        app: '{{ include "common.names.name" . }}'
      annotations:
        {{ include "common.annotations.pods" (dict "customAnnotationsPods" .Values.commonAnnotationsPods "context" $ ) | nindent 8 }}
    spec:
      serviceAccountName: {{ .Values.serviceAccounts.server | default "minder" }}
      terminationGracePeriodSeconds: {{ .Values.deploymentSettings.terminationGracePeriodSeconds }}
      initContainers:
        {{- if .Values.deploymentSettings.initContainers }}
        {{- toYaml .Values.deploymentSettings.initContainers | nindent 8 }}
        {{- end }}
      containers:
        - name: minder
          # restricted security context:
          # https://kubernetes.io/docs/concepts/security/pod-security-standards/
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            readOnlyRootFilesystem: true
            seccompProfile:
              type: RuntimeDefault
            capabilities:
              drop:
                - ALL
          image: {{ .Values.deploymentSettings.image }}
          args:
          - "serve"
          - "--db-host={{ .Values.db.host }}"
          - "--config=/config/server-config.yaml"
          # We use two config files, one with all the defaults, and one with
          # additional override values from helm.  (This is a viper feature.)
          - "--config=/config/overrides.yaml"
          - "--grpc-host=0.0.0.0"
          - "--http-host=0.0.0.0"
          - "--metric-host=0.0.0.0"
          - "--github-client-id-file=/secrets/app/client_id"
          - "--github-client-secret-file=/secrets/app/client_secret"
          - "--github-app-client-id-file=/secrets/github-app/github_app_client_id"
          - "--github-app-client-secret-file=/secrets/github-app/github_app_client_secret"
          env:
          - name: "MINDER_AUTH_TOKEN_KEY"
            value: "/secrets/auth/token_key_passphrase"
          - name: "MINDER_IDENTITY_SERVER_CLIENT_SECRET_FILE"
            value: "/secrets/identity/identity_client_secret"
          - name: "MINDER_UNSTABLE_TRUSTY_ENDPOINT"
            value: "{{ .Values.trusty.endpoint }}"
          - name: "MINDER_PROVIDER_GITHUB_APP_PRIVATE_KEY"
            value: "/secrets/github-app/github_app_private_key"
          - name: "MINDER_PROVIDER_GITHUB_APP_WEBHOOK_SECRET_FILE"
            value: "/secrets/github-app/github_app_webhook_secret"
          - name: "MINDER_PROVIDER_GITHUB_APP_FALLBACK_TOKEN_FILE"
            value: "/secrets/github-app/github_app_fallback_token"
          - name: "MINDER_FLAGS_GO_FEATURE_FILE_PATH"
            value: "/flags/flags-config.yaml"
          - name: "MINDER_WEBHOOK_CONFIG_WEBHOOK_SECRET_FILE"
            value: "/secrets/app/github_repo_webhook_secret"
          - name: "MINDER_WEBHOOK_CONFIG_PREVIOUS_WEBHOOK_SECRET_FILE"
            value: "/secrets/app/github_repo_fallback_webhook_secret"
          {{- if .Values.deploymentSettings.extraEnv }}
          {{- toYaml .Values.deploymentSettings.extraEnv | nindent 10 }}
          {{- end }}
          
          # ko will always specify a digest, so we don't need to worry about
          # CRI image caching
          imagePullPolicy: "{{ .Values.deploymentSettings.imagePullPolicy }}"
          ports:
            - name: http
              containerPort: !!int "{{ .Values.service.httpPort }}"
              protocol: TCP
            - name: grpc
              containerPort: !!int "{{ .Values.service.grpcPort }}"
              protocol: TCP
            - name: metric
              containerPort: !!int "{{ .Values.service.metricPort }}"
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /api/v1/health
              port: http
          readinessProbe:
            httpGet:
              path: /api/v1/health
              port: http
          resources:
            {{- toYaml .Values.deploymentSettings.resources | nindent 12 }}
          volumeMounts:
          - name: config
            mountPath: /config
          - name: flags
            mountPath: /flags
          - name: auth-secrets
            mountPath: /secrets/auth
          - name: app-secrets
            mountPath: /secrets/app
          - name: identity-secrets
            mountPath: /secrets/identity
          - name: github-app-secrets
            mountPath: /secrets/github-app
          - name: sigstore-tuf-cache
            mountPath: /tmp/minder-cache
          {{- if .Values.deploymentSettings.extraVolumeMounts }}
          {{- toYaml .Values.deploymentSettings.extraVolumeMounts | nindent 10 }}
          {{- end }}
        {{- if .Values.deploymentSettings.sidecarContainers }}
        {{- toYaml .Values.deploymentSettings.sidecarContainers | nindent 8 }}
        {{- end }}
      volumes:
      - name: config
        configMap:
          name: minder-config
          items:
          - key: server-config.yaml
            path: server-config.yaml
          - key: overrides.yaml
            path: overrides.yaml
      - name: flags
        configMap:
          name: minder-flags
          optional: true  # We expect the outside environment to create this ConfigMap
          items:
          - key: flags-config.yaml
            path: flags-config.yaml
      - name: auth-secrets
        secret:
          secretName: {{ .Values.deploymentSettings.secrets.authSecretName }}
      - name: app-secrets
        secret:
          secretName: {{ .Values.deploymentSettings.secrets.appSecretName }}
      - name: identity-secrets
        secret:
          secretName: {{ .Values.deploymentSettings.secrets.identitySecretName }}
      - name: github-app-secrets
        secret:
          secretName: {{ .Values.deploymentSettings.secrets.githubAppSecretName }}
      - name: sigstore-tuf-cache
        emptyDir:
          sizeLimit: 500Mi
      {{- if .Values.deploymentSettings.extraVolumes }}
      {{- toYaml .Values.deploymentSettings.extraVolumes | nindent 6 }}
      {{- end }}
