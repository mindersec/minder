swagger: '2.0'
info:
  title: minder/v1/minder.proto
  version: version not set
tags:
  - name: HealthService
  - name: ArtifactService
  - name: OAuthService
  - name: RepositoryService
  - name: UserService
  - name: ProfileService
  - name: PermissionsService
  - name: ProvidersService
consumes:
  - application/json
produces:
  - application/json
paths:
  /api/v1/artifact/name/{name}:
    get:
      operationId: ArtifactService_GetArtifactByName
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetArtifactByNameResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: name
          in: path
          required: true
          type: string
        - name: context.provider
          description: name of the provider
          in: query
          required: false
          type: string
        - name: context.project
          description: ID of the project
          in: query
          required: false
          type: string
        - name: context.retiredOrganization
          in: query
          required: false
          type: string
      tags:
        - ArtifactService
  /api/v1/artifact/{id}:
    get:
      operationId: ArtifactService_GetArtifactById
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetArtifactByIdResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          type: string
        - name: context.provider
          description: name of the provider
          in: query
          required: false
          type: string
        - name: context.project
          description: ID of the project
          in: query
          required: false
          type: string
        - name: context.retiredOrganization
          in: query
          required: false
          type: string
      tags:
        - ArtifactService
  /api/v1/artifacts:
    get:
      operationId: ArtifactService_ListArtifacts2
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListArtifactsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: provider
          in: query
          required: false
          type: string
        - name: context.provider
          description: name of the provider
          in: query
          required: false
          type: string
        - name: context.project
          description: ID of the project
          in: query
          required: false
          type: string
        - name: context.retiredOrganization
          in: query
          required: false
          type: string
        - name: from
          in: query
          required: false
          type: string
      tags:
        - ArtifactService
  /api/v1/artifacts/{provider}:
    get:
      operationId: ArtifactService_ListArtifacts
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListArtifactsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: provider
          in: path
          required: true
          type: string
        - name: context.provider
          description: name of the provider
          in: query
          required: false
          type: string
        - name: context.project
          description: ID of the project
          in: query
          required: false
          type: string
        - name: context.retiredOrganization
          in: query
          required: false
          type: string
        - name: from
          in: query
          required: false
          type: string
      tags:
        - ArtifactService
  /api/v1/auth/callback/cli:
    get:
      summary: buf:lint:ignore RPC_RESPONSE_STANDARD_NAME
      description: protolint:disable:this
      operationId: OAuthService_ExchangeCodeForTokenCLI2
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/apiHttpBody'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: provider
          in: query
          required: false
          type: string
        - name: code
          in: query
          required: false
          type: string
        - name: state
          in: query
          required: false
          type: string
        - name: redirectUri
          in: query
          required: false
          type: string
        - name: context.provider
          description: name of the provider
          in: query
          required: false
          type: string
        - name: context.project
          description: ID of the project
          in: query
          required: false
          type: string
        - name: context.retiredOrganization
          in: query
          required: false
          type: string
      tags:
        - OAuthService
  /api/v1/auth/callback/{provider}/cli:
    get:
      summary: buf:lint:ignore RPC_RESPONSE_STANDARD_NAME
      description: protolint:disable:this
      operationId: OAuthService_ExchangeCodeForTokenCLI
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/apiHttpBody'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: provider
          in: path
          required: true
          type: string
        - name: code
          in: query
          required: false
          type: string
        - name: state
          in: query
          required: false
          type: string
        - name: redirectUri
          in: query
          required: false
          type: string
        - name: context.provider
          description: name of the provider
          in: query
          required: false
          type: string
        - name: context.project
          description: ID of the project
          in: query
          required: false
          type: string
        - name: context.retiredOrganization
          in: query
          required: false
          type: string
      tags:
        - OAuthService
  /api/v1/auth/token:
    post:
      operationId: OAuthService_StoreProviderToken2
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/v1StoreProviderTokenResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: provider
          in: query
          required: false
          type: string
        - name: accessToken
          in: query
          required: false
          type: string
        - name: owner
          in: query
          required: false
          type: string
        - name: context.provider
          description: name of the provider
          in: query
          required: false
          type: string
        - name: context.project
          description: ID of the project
          in: query
          required: false
          type: string
        - name: context.retiredOrganization
          in: query
          required: false
          type: string
      tags:
        - OAuthService
  /api/v1/auth/url:
    get:
      operationId: OAuthService_GetAuthorizationURL
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetAuthorizationURLResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: cli
          in: query
          required: false
          type: boolean
        - name: port
          in: query
          required: false
          type: integer
          format: int32
        - name: owner
          in: query
          required: false
          type: string
        - name: context.provider
          description: name of the provider
          in: query
          required: false
          type: string
        - name: context.project
          description: ID of the project
          in: query
          required: false
          type: string
        - name: context.retiredOrganization
          in: query
          required: false
          type: string
      tags:
        - OAuthService
  /api/v1/auth/verify/{provider}/{timestamp}:
    get:
      summary: >-
        VerifyProviderTokenFrom verifies that a token has been created for a
        provider since given timestamp
      operationId: OAuthService_VerifyProviderTokenFrom
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/v1VerifyProviderTokenFromResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: provider
          in: path
          required: true
          type: string
        - name: timestamp
          in: path
          required: true
          type: string
          format: date-time
        - name: context.provider
          description: name of the provider
          in: query
          required: false
          type: string
        - name: context.project
          description: ID of the project
          in: query
          required: false
          type: string
        - name: context.retiredOrganization
          in: query
          required: false
          type: string
      tags:
        - OAuthService
  /api/v1/auth/verify/{timestamp}:
    get:
      summary: >-
        VerifyProviderTokenFrom verifies that a token has been created for a
        provider since given timestamp
      operationId: OAuthService_VerifyProviderTokenFrom2
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/v1VerifyProviderTokenFromResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: timestamp
          in: path
          required: true
          type: string
          format: date-time
        - name: provider
          in: query
          required: false
          type: string
        - name: context.provider
          description: name of the provider
          in: query
          required: false
          type: string
        - name: context.project
          description: ID of the project
          in: query
          required: false
          type: string
        - name: context.retiredOrganization
          in: query
          required: false
          type: string
      tags:
        - OAuthService
  /api/v1/auth/{provider}/token:
    post:
      operationId: OAuthService_StoreProviderToken
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/v1StoreProviderTokenResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: provider
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/OAuthServiceStoreProviderTokenBody'
      tags:
        - OAuthService
  /api/v1/health:
    get:
      operationId: HealthService_CheckHealth
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/v1CheckHealthResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      tags:
        - HealthService
  /api/v1/permissions/assign:
    post:
      operationId: PermissionsService_AssignRole
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/v1AssignRoleResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1AssignRoleRequest'
      tags:
        - PermissionsService
  /api/v1/permissions/assignments:
    get:
      operationId: PermissionsService_ListRoleAssignments
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListRoleAssignmentsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: context.provider
          description: name of the provider
          in: query
          required: false
          type: string
        - name: context.project
          description: ID of the project
          in: query
          required: false
          type: string
        - name: context.retiredOrganization
          in: query
          required: false
          type: string
      tags:
        - PermissionsService
  /api/v1/permissions/remove/{roleAssignment.role}/subject/{roleAssignment.subject}:
    delete:
      operationId: PermissionsService_RemoveRole
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/v1RemoveRoleResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: roleAssignment.role
          description: role is the role that is assigned.
          in: path
          required: true
          type: string
        - name: roleAssignment.subject
          description: subject is the subject to which the role is assigned.
          in: path
          required: true
          type: string
        - name: context.provider
          description: name of the provider
          in: query
          required: false
          type: string
        - name: context.project
          description: ID of the project
          in: query
          required: false
          type: string
        - name: context.retiredOrganization
          in: query
          required: false
          type: string
        - name: roleAssignment.project
          description: projectt is the projectt in which the role is assigned.
          in: query
          required: false
          type: string
      tags:
        - PermissionsService
  /api/v1/permissions/roles:
    get:
      operationId: PermissionsService_ListRoles
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListRolesResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: context.provider
          description: name of the provider
          in: query
          required: false
          type: string
        - name: context.project
          description: ID of the project
          in: query
          required: false
          type: string
        - name: context.retiredOrganization
          in: query
          required: false
          type: string
      tags:
        - PermissionsService
  /api/v1/profile:
    post:
      operationId: ProfileService_CreateProfile
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/v1CreateProfileResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1CreateProfileRequest'
      tags:
        - ProfileService
    put:
      operationId: ProfileService_UpdateProfile
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/v1UpdateProfileResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1UpdateProfileRequest'
      tags:
        - ProfileService
  /api/v1/profile/name/{name}/status:
    get:
      operationId: ProfileService_GetProfileStatusByName
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetProfileStatusByNameResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: name
          description: name is the name of the profile to get
          in: path
          required: true
          type: string
        - name: context.provider
          description: name of the provider
          in: query
          required: false
          type: string
        - name: context.project
          description: ID of the project
          in: query
          required: false
          type: string
        - name: context.retiredOrganization
          in: query
          required: false
          type: string
        - name: entity.type
          description: entity is the entity to get status for. Incompatible with `all`
          in: query
          required: false
          type: string
          enum:
            - ENTITY_UNSPECIFIED
            - ENTITY_REPOSITORIES
            - ENTITY_BUILD_ENVIRONMENTS
            - ENTITY_ARTIFACTS
            - ENTITY_PULL_REQUESTS
          default: ENTITY_UNSPECIFIED
        - name: entity.id
          description: >-
            id is the ID of the entity to get status for. Incompatible with
            `all`
          in: query
          required: false
          type: string
        - name: all
          in: query
          required: false
          type: boolean
        - name: rule
          description: rule is the type of the rule. Deprecated in favor of rule_type
          in: query
          required: false
          type: string
        - name: ruleType
          in: query
          required: false
          type: string
        - name: ruleName
          in: query
          required: false
          type: string
      tags:
        - ProfileService
  /api/v1/profile/{id}:
    get:
      operationId: ProfileService_GetProfileById
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetProfileByIdResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: id
          description: id is the id of the profile to get
          in: path
          required: true
          type: string
        - name: context.provider
          description: name of the provider
          in: query
          required: false
          type: string
        - name: context.project
          description: ID of the project
          in: query
          required: false
          type: string
        - name: context.retiredOrganization
          in: query
          required: false
          type: string
      tags:
        - ProfileService
    delete:
      operationId: ProfileService_DeleteProfile
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/v1DeleteProfileResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: id
          description: id is the id of the profile to delete
          in: path
          required: true
          type: string
        - name: context.provider
          description: name of the provider
          in: query
          required: false
          type: string
        - name: context.project
          description: ID of the project
          in: query
          required: false
          type: string
        - name: context.retiredOrganization
          in: query
          required: false
          type: string
      tags:
        - ProfileService
  /api/v1/profile_status:
    get:
      operationId: ProfileService_GetProfileStatusByProject
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetProfileStatusByProjectResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: context.provider
          description: name of the provider
          in: query
          required: false
          type: string
        - name: context.project
          description: ID of the project
          in: query
          required: false
          type: string
        - name: context.retiredOrganization
          in: query
          required: false
          type: string
      tags:
        - ProfileService
  /api/v1/profiles:
    get:
      operationId: ProfileService_ListProfiles
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListProfilesResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: context.provider
          description: name of the provider
          in: query
          required: false
          type: string
        - name: context.project
          description: ID of the project
          in: query
          required: false
          type: string
        - name: context.retiredOrganization
          in: query
          required: false
          type: string
      tags:
        - ProfileService
  /api/v1/providers:
    get:
      operationId: ProvidersService_ListProviders
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListProvidersResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: context.provider
          description: name of the provider
          in: query
          required: false
          type: string
        - name: context.project
          description: ID of the project
          in: query
          required: false
          type: string
        - name: context.retiredOrganization
          in: query
          required: false
          type: string
        - name: limit
          description: limit is the maximum number of providers to return.
          in: query
          required: false
          type: integer
          format: int32
        - name: cursor
          description: >-
            cursor is the cursor to use for the page of results, empty if at the
            beginning
          in: query
          required: false
          type: string
      tags:
        - ProvidersService
  /api/v1/repositories:
    get:
      operationId: RepositoryService_ListRepositories2
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListRepositoriesResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: provider
          in: query
          required: false
          type: string
        - name: limit
          in: query
          required: false
          type: integer
          format: int32
        - name: context.provider
          description: name of the provider
          in: query
          required: false
          type: string
        - name: context.project
          description: ID of the project
          in: query
          required: false
          type: string
        - name: context.retiredOrganization
          in: query
          required: false
          type: string
        - name: cursor
          in: query
          required: false
          type: string
      tags:
        - RepositoryService
  /api/v1/repositories/provider/{provider}:
    get:
      operationId: RepositoryService_ListRepositories
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListRepositoriesResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: provider
          in: path
          required: true
          type: string
        - name: limit
          in: query
          required: false
          type: integer
          format: int32
        - name: context.provider
          description: name of the provider
          in: query
          required: false
          type: string
        - name: context.project
          description: ID of the project
          in: query
          required: false
          type: string
        - name: context.retiredOrganization
          in: query
          required: false
          type: string
        - name: cursor
          in: query
          required: false
          type: string
      tags:
        - RepositoryService
  /api/v1/repositories/provider/{provider}/remote:
    get:
      operationId: RepositoryService_ListRemoteRepositoriesFromProvider
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListRemoteRepositoriesFromProviderResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: provider
          in: path
          required: true
          type: string
        - name: context.provider
          description: name of the provider
          in: query
          required: false
          type: string
        - name: context.project
          description: ID of the project
          in: query
          required: false
          type: string
        - name: context.retiredOrganization
          in: query
          required: false
          type: string
      tags:
        - RepositoryService
  /api/v1/repositories/remote:
    get:
      operationId: RepositoryService_ListRemoteRepositoriesFromProvider2
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListRemoteRepositoriesFromProviderResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: provider
          in: query
          required: false
          type: string
        - name: context.provider
          description: name of the provider
          in: query
          required: false
          type: string
        - name: context.project
          description: ID of the project
          in: query
          required: false
          type: string
        - name: context.retiredOrganization
          in: query
          required: false
          type: string
      tags:
        - RepositoryService
  /api/v1/repository/id/{repositoryId}:
    get:
      operationId: RepositoryService_GetRepositoryById
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetRepositoryByIdResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: repositoryId
          in: path
          required: true
          type: string
        - name: context.provider
          description: name of the provider
          in: query
          required: false
          type: string
        - name: context.project
          description: ID of the project
          in: query
          required: false
          type: string
        - name: context.retiredOrganization
          in: query
          required: false
          type: string
      tags:
        - RepositoryService
    delete:
      operationId: RepositoryService_DeleteRepositoryById
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/v1DeleteRepositoryByIdResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: repositoryId
          in: path
          required: true
          type: string
        - name: context.provider
          description: name of the provider
          in: query
          required: false
          type: string
        - name: context.project
          description: ID of the project
          in: query
          required: false
          type: string
        - name: context.retiredOrganization
          in: query
          required: false
          type: string
      tags:
        - RepositoryService
  /api/v1/repository/name/{name}:
    get:
      operationId: RepositoryService_GetRepositoryByName2
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetRepositoryByNameResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: name
          in: path
          required: true
          type: string
        - name: provider
          in: query
          required: false
          type: string
        - name: context.provider
          description: name of the provider
          in: query
          required: false
          type: string
        - name: context.project
          description: ID of the project
          in: query
          required: false
          type: string
        - name: context.retiredOrganization
          in: query
          required: false
          type: string
      tags:
        - RepositoryService
    delete:
      operationId: RepositoryService_DeleteRepositoryByName2
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/v1DeleteRepositoryByNameResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: name
          in: path
          required: true
          type: string
        - name: provider
          in: query
          required: false
          type: string
        - name: context.provider
          description: name of the provider
          in: query
          required: false
          type: string
        - name: context.project
          description: ID of the project
          in: query
          required: false
          type: string
        - name: context.retiredOrganization
          in: query
          required: false
          type: string
      tags:
        - RepositoryService
  /api/v1/repository/provider/{provider}/name/{name}:
    get:
      operationId: RepositoryService_GetRepositoryByName
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetRepositoryByNameResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: provider
          in: path
          required: true
          type: string
        - name: name
          in: path
          required: true
          type: string
        - name: context.provider
          description: name of the provider
          in: query
          required: false
          type: string
        - name: context.project
          description: ID of the project
          in: query
          required: false
          type: string
        - name: context.retiredOrganization
          in: query
          required: false
          type: string
      tags:
        - RepositoryService
    delete:
      operationId: RepositoryService_DeleteRepositoryByName
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/v1DeleteRepositoryByNameResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: provider
          in: path
          required: true
          type: string
        - name: name
          in: path
          required: true
          type: string
        - name: context.provider
          description: name of the provider
          in: query
          required: false
          type: string
        - name: context.project
          description: ID of the project
          in: query
          required: false
          type: string
        - name: context.retiredOrganization
          in: query
          required: false
          type: string
      tags:
        - RepositoryService
  /api/v1/repository/provider/{provider}/register:
    post:
      operationId: RepositoryService_RegisterRepository
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/v1RegisterRepositoryResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: provider
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/RepositoryServiceRegisterRepositoryBody'
      tags:
        - RepositoryService
  /api/v1/repository/register:
    post:
      operationId: RepositoryService_RegisterRepository2
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/v1RegisterRepositoryResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: provider
          in: query
          required: false
          type: string
        - name: repository.owner
          in: query
          required: false
          type: string
        - name: repository.name
          in: query
          required: false
          type: string
        - name: repository.repoId
          in: query
          required: false
          type: integer
          format: int32
        - name: context.provider
          description: name of the provider
          in: query
          required: false
          type: string
        - name: context.project
          description: ID of the project
          in: query
          required: false
          type: string
        - name: context.retiredOrganization
          in: query
          required: false
          type: string
      tags:
        - RepositoryService
  /api/v1/rule_type:
    post:
      operationId: ProfileService_CreateRuleType
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/v1CreateRuleTypeResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          description: CreateRuleTypeRequest is the request to create a rule type.
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1CreateRuleTypeRequest'
      tags:
        - ProfileService
    put:
      operationId: ProfileService_UpdateRuleType
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/v1UpdateRuleTypeResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          description: UpdateRuleTypeRequest is the request to update a rule type.
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1UpdateRuleTypeRequest'
      tags:
        - ProfileService
  /api/v1/rule_type/name/{name}:
    get:
      operationId: ProfileService_GetRuleTypeByName
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetRuleTypeByNameResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: name
          description: name is the name of the rule type.
          in: path
          required: true
          type: string
        - name: context.provider
          description: name of the provider
          in: query
          required: false
          type: string
        - name: context.project
          description: ID of the project
          in: query
          required: false
          type: string
        - name: context.retiredOrganization
          in: query
          required: false
          type: string
      tags:
        - ProfileService
  /api/v1/rule_type/{id}:
    get:
      operationId: ProfileService_GetRuleTypeById
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetRuleTypeByIdResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: id
          description: id is the id of the rule type.
          in: path
          required: true
          type: string
        - name: context.provider
          description: name of the provider
          in: query
          required: false
          type: string
        - name: context.project
          description: ID of the project
          in: query
          required: false
          type: string
        - name: context.retiredOrganization
          in: query
          required: false
          type: string
      tags:
        - ProfileService
    delete:
      operationId: ProfileService_DeleteRuleType
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/v1DeleteRuleTypeResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: id
          description: id is the id of the rule type to be deleted.
          in: path
          required: true
          type: string
        - name: context.provider
          description: name of the provider
          in: query
          required: false
          type: string
        - name: context.project
          description: ID of the project
          in: query
          required: false
          type: string
        - name: context.retiredOrganization
          in: query
          required: false
          type: string
      tags:
        - ProfileService
  /api/v1/rule_types:
    get:
      operationId: ProfileService_ListRuleTypes
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListRuleTypesResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: context.provider
          description: name of the provider
          in: query
          required: false
          type: string
        - name: context.project
          description: ID of the project
          in: query
          required: false
          type: string
        - name: context.retiredOrganization
          in: query
          required: false
          type: string
      tags:
        - ProfileService
  /api/v1/user:
    get:
      operationId: UserService_GetUser
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetUserResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      tags:
        - UserService
    delete:
      operationId: UserService_DeleteUser
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/v1DeleteUserResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      tags:
        - UserService
    post:
      operationId: UserService_CreateUser
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/v1CreateUserResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1CreateUserRequest'
      tags:
        - UserService
definitions:
  AlertAlertTypeSA:
    type: object
    properties:
      severity:
        type: string
  DefinitionAlert:
    type: object
    properties:
      type:
        type: string
      securityAdvisory:
        $ref: '#/definitions/AlertAlertTypeSA'
  DefinitionEval:
    type: object
    properties:
      type:
        type: string
        title: |-
          type is the type of the data evaluation.
          Right now only `jq` is supported as a driver
      jq:
        type: array
        items:
          type: object
          $ref: '#/definitions/EvalJQComparison'
        description: |-
          jq is only used if the `jq` type is selected.
          It defines the comparisons that are made between
          the ingested data and the profile rule.
      rego:
        $ref: '#/definitions/EvalRego'
        description: rego is only used if the `rego` type is selected.
      vulncheck:
        $ref: '#/definitions/EvalVulncheck'
        description: vulncheck is only used if the `vulncheck` type is selected.
      trusty:
        $ref: '#/definitions/EvalTrusty'
        description: trusty is only used if the `trusty` type is selected.
      homoglyphs:
        $ref: '#/definitions/EvalHomoglyphs'
        description: homoglyphs is only used if the `homoglyphs` type is selected.
    description: |-
      Eval defines the data evaluation definition.
      This pertains to the way we traverse data from the upstream
      endpoint and how we compare it to the rule.
  DefinitionIngest:
    type: object
    properties:
      type:
        type: string
        description: |-
          type is the type of the data ingestion.
          we currently support rest, artifact and builtin.
      rest:
        $ref: '#/definitions/v1RestType'
        description: |-
          rest is the rest data ingestion.
          this is only used if the type is rest.
      builtin:
        $ref: '#/definitions/v1BuiltinType'
        description: builtin is the builtin data ingestion.
      artifact:
        $ref: '#/definitions/v1ArtifactType'
        description: artifact is the artifact data ingestion.
      git:
        $ref: '#/definitions/v1GitType'
        description: git is the git data ingestion.
      diff:
        $ref: '#/definitions/v1DiffType'
        description: diff is the diff data ingestion.
    description: Ingest defines how the data is ingested.
  DefinitionRemediate:
    type: object
    properties:
      type:
        type: string
      rest:
        $ref: '#/definitions/v1RestType'
      ghBranchProtection:
        $ref: '#/definitions/RemediateGhBranchProtectionType'
      pullRequest:
        $ref: '#/definitions/RemediatePullRequestRemediation'
  DiffTypeEcosystem:
    type: object
    properties:
      name:
        type: string
        description: name is the name of the ecosystem.
      depfile:
        type: string
        title: depfile is the file that contains the dependencies for this ecosystem
  EvalHomoglyphs:
    type: object
    properties:
      type:
        type: string
  EvalJQComparison:
    type: object
    properties:
      ingested:
        $ref: '#/definitions/JQComparisonOperator'
        title: Ingested points to the data retrieved in the `ingest` section
      profile:
        $ref: '#/definitions/JQComparisonOperator'
        description: Profile points to the profile itself.
  EvalRego:
    type: object
    properties:
      type:
        type: string
        description: |-
          type is the type of evaluation engine to use
          for rego. We currently have two modes of operation:
          - deny-by-default: this is the default mode of operation
            where we deny access by default and allow access only
            if the profile explicitly allows it. It expects the
            profile to set an `allow` variable to true or false.
          - constraints: this is the mode of operation where we
            allow access by default and deny access only if a
            violation is found. It expects the profile to set a
            `violations` variable with a "msg" field.
      def:
        type: string
        description: def is the definition of the rego profile.
      violationFormat:
        type: string
        description: |-
          how are violations reported. This is only used if the
          `constraints` type is selected. The default is `text`
          which returns human-readable text. The other option is
          `json` which returns a JSON array containing the violations.
  EvalTrusty:
    type: object
    properties:
      endpoint:
        type: string
        title: e.g. https://api.trustypkg.dev/
  EvalVulncheck:
    type: object
    title: no configuration for now
  GetProfileStatusByNameRequestEntityTypedId:
    type: object
    properties:
      type:
        $ref: '#/definitions/v1Entity'
        title: entity is the entity to get status for. Incompatible with `all`
      id:
        type: string
        title: id is the ID of the entity to get status for. Incompatible with `all`
    title: >-
      EntiryTypeId is a message that carries an ID together with a type to
      uniquely identify an entity

      such as (repo, 1), (artifact, 2), ...

      if the struct is reused in other messages, it should be moved to a
      top-level definition
  JQComparisonOperator:
    type: object
    properties:
      def:
        type: string
  OAuthServiceStoreProviderTokenBody:
    type: object
    properties:
      accessToken:
        type: string
      owner:
        type: string
      context:
        $ref: '#/definitions/v1Context'
  ProfileRule:
    type: object
    properties:
      type:
        type: string
        description: type is the type of the rule to be instantiated.
      params:
        type: object
        description: |-
          params are the parameters that are passed to the rule.
          This is optional and depends on the rule type.
      def:
        type: object
        description: |-
          def is the definition of the rule.
          This depends on the rule type.
      name:
        type: string
        title: name is the descriptive name of the rule, not to be confused with type
    description: Rule defines the individual call of a certain rule type.
  PullRequestRemediationActionsReplaceTagsWithSha:
    type: object
    properties:
      exclude:
        type: array
        items:
          type: string
        title: List of actions to exclude from the replacement
  PullRequestRemediationContent:
    type: object
    properties:
      path:
        type: string
        title: the file to patch
      action:
        type: string
        title: how to patch the file. For now, only replace is supported
      content:
        type: string
        title: the content of the file
      mode:
        type: string
        title: >-
          the GIT mode of the file. Not UNIX mode! String because the GH API
          also uses strings

          the usual modes are: 100644 for regular files, 100755 for executable
          files and

          040000 for submodules (which we don't use but now you know the meaning
          of the 1 in 100644)

          see e.g.
          https://github.com/go-git/go-git/blob/32e0172851c35ae2fac495069c923330040903d2/plumbing/filemode/filemode.go#L16
  RemediateGhBranchProtectionType:
    type: object
    properties:
      patch:
        type: string
  RemediatePullRequestRemediation:
    type: object
    properties:
      title:
        type: string
        title: the title of the PR
      body:
        type: string
        title: the body of the PR
      contents:
        type: array
        items:
          type: object
          $ref: '#/definitions/PullRequestRemediationContent'
      method:
        type: string
        title: >-
          the method to use to create the PR. For now, these are supported:

          -- minder.content - ensures that the content of the file is exactly as
          specified
                              refer to the Content message for more details
          -- minder.actions.replace_tags_with_sha - finds any github actions
          within a workflow
                                                    file and replaces the tag with the SHA
      actionsReplaceTagsWithSha:
        $ref: '#/definitions/PullRequestRemediationActionsReplaceTagsWithSha'
        title: >-
          If the method is minder.actions.replace_tags_with_sha, this is the
          configuration

          for that method
    title: >-
      the name stutters a bit but we already use a PullRequest message for
      handling PR entities
  RepositoryServiceRegisterRepositoryBody:
    type: object
    properties:
      repository:
        $ref: '#/definitions/v1UpstreamRepositoryRef'
      context:
        $ref: '#/definitions/v1Context'
  RestTypeFallback:
    type: object
    properties:
      httpCode:
        type: integer
        format: int32
      body:
        type: string
  RuleTypeDefinition:
    type: object
    properties:
      inEntity:
        type: string
        description: |-
          in_entity is the entity in which the rule is evaluated.
          This can be repository, build_environment or artifact.
      ruleSchema:
        type: object
        description: >-
          rule_schema is the schema of the rule. This is expressed in JSON
          Schema.
      paramSchema:
        type: object
        description: >-
          param_schema is the schema of the parameters that are passed to the
          rule.

          This is expressed in JSON Schema.
      ingest:
        $ref: '#/definitions/DefinitionIngest'
      eval:
        $ref: '#/definitions/DefinitionEval'
      remediate:
        $ref: '#/definitions/DefinitionRemediate'
      alert:
        $ref: '#/definitions/DefinitionAlert'
    description: >-
      Definition defines the rule type. It encompases the schema and the data
      evaluation.
  apiHttpBody:
    type: object
    properties:
      contentType:
        type: string
        description: >-
          The HTTP Content-Type header value specifying the content type of the
          body.
      data:
        type: string
        format: byte
        description: The HTTP request/response body as raw binary.
      extensions:
        type: array
        items:
          type: object
          $ref: '#/definitions/protobufAny'
        description: >-
          Application specific response metadata. Must be set in the first
          response

          for streaming APIs.
    description: >-
      Message that represents an arbitrary HTTP body. It should only be used for

      payload formats that can't be represented as JSON, such as raw binary or

      an HTML page.



      This message can be used both in streaming and non-streaming API methods
      in

      the request as well as the response.


      It can be used as a top-level request field, which is convenient if one

      wants to extract parameters from either the URL or HTTP template into the

      request fields and also want access to the raw HTTP body.


      Example:

          message GetResourceRequest {
            // A unique request id.
            string request_id = 1;

            // The raw HTTP body is bound to this field.
            google.api.HttpBody http_body = 2;

          }

          service ResourceService {
            rpc GetResource(GetResourceRequest)
              returns (google.api.HttpBody);
            rpc UpdateResource(google.api.HttpBody)
              returns (google.protobuf.Empty);

          }

      Example with streaming methods:

          service CaldavService {
            rpc GetCalendar(stream google.api.HttpBody)
              returns (stream google.api.HttpBody);
            rpc UpdateCalendar(stream google.api.HttpBody)
              returns (stream google.api.HttpBody);

          }

      Use of this type only changes how the request and response bodies are

      handled, all other features will continue to work unchanged.
  googlerpcStatus:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      details:
        type: array
        items:
          type: object
          $ref: '#/definitions/protobufAny'
  protobufAny:
    type: object
    properties:
      '@type':
        type: string
        description: >-
          A URL/resource name that uniquely identifies the type of the
          serialized

          protocol buffer message. This string must contain at least

          one "/" character. The last segment of the URL's path must represent

          the fully qualified name of the type (as in

          `path/google.protobuf.Duration`). The name should be in a canonical
          form

          (e.g., leading "." is not accepted).


          In practice, teams usually precompile into the binary all types that
          they

          expect it to use in the context of Any. However, for URLs which use
          the

          scheme `http`, `https`, or no scheme, one can optionally set up a type

          server that maps type URLs to message definitions as follows:


          * If no scheme is provided, `https` is assumed.

          * An HTTP GET on the URL must yield a [google.protobuf.Type][]
            value in binary format, or produce an error.
          * Applications are allowed to cache lookup results based on the
            URL, or have them precompiled into a binary to avoid any
            lookup. Therefore, binary compatibility needs to be preserved
            on changes to types. (Use versioned type names to manage
            breaking changes.)

          Note: this functionality is not currently available in the official

          protobuf release, and it is not used for type URLs beginning with

          type.googleapis.com. As of May 2023, there are no widely used type
          server

          implementations and no plans to implement one.


          Schemes other than `http`, `https` (or the empty scheme) might be

          used with implementation specific semantics.
    additionalProperties: {}
    description: >-
      `Any` contains an arbitrary serialized protocol buffer message along with
      a

      URL that describes the type of the serialized message.


      Protobuf library provides support to pack/unpack Any values in the form

      of utility functions or additional generated methods of the Any type.


      Example 1: Pack and unpack a message in C++.

          Foo foo = ...;
          Any any;
          any.PackFrom(foo);
          ...
          if (any.UnpackTo(&foo)) {
            ...
          }

      Example 2: Pack and unpack a message in Java.

          Foo foo = ...;
          Any any = Any.pack(foo);
          ...
          if (any.is(Foo.class)) {
            foo = any.unpack(Foo.class);
          }
          // or ...
          if (any.isSameTypeAs(Foo.getDefaultInstance())) {
            foo = any.unpack(Foo.getDefaultInstance());
          }

       Example 3: Pack and unpack a message in Python.

          foo = Foo(...)
          any = Any()
          any.Pack(foo)
          ...
          if any.Is(Foo.DESCRIPTOR):
            any.Unpack(foo)
            ...

       Example 4: Pack and unpack a message in Go

           foo := &pb.Foo{...}
           any, err := anypb.New(foo)
           if err != nil {
             ...
           }
           ...
           foo := &pb.Foo{}
           if err := any.UnmarshalTo(foo); err != nil {
             ...
           }

      The pack methods provided by protobuf library will by default use

      'type.googleapis.com/full.type.name' as the type URL and the unpack

      methods only use the fully qualified type name after the last '/'

      in the type URL, for example "foo.bar.com/x/y.z" will yield type

      name "y.z".


      JSON

      ====

      The JSON representation of an `Any` value uses the regular

      representation of the deserialized, embedded message, with an

      additional field `@type` which contains the type URL. Example:

          package google.profile;
          message Person {
            string first_name = 1;
            string last_name = 2;
          }

          {
            "@type": "type.googleapis.com/google.profile.Person",
            "firstName": <string>,
            "lastName": <string>
          }

      If the embedded message type is well-known and has a custom JSON

      representation, that representation will be embedded adding a field

      `value` which holds the custom JSON in addition to the `@type`

      field. Example (for message [google.protobuf.Duration][]):

          {
            "@type": "type.googleapis.com/google.protobuf.Duration",
            "value": "1.212s"
          }
  protobufNullValue:
    type: string
    enum:
      - NULL_VALUE
    default: NULL_VALUE
    description: |-
      `NullValue` is a singleton enumeration to represent the null value for the
      `Value` type union.

      The JSON representation for `NullValue` is JSON `null`.

       - NULL_VALUE: Null value.
  v1Artifact:
    type: object
    properties:
      artifactPk:
        type: string
      owner:
        type: string
      name:
        type: string
      type:
        type: string
      visibility:
        type: string
      repository:
        type: string
      versions:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1ArtifactVersion'
      createdAt:
        type: string
        format: date-time
  v1ArtifactType:
    type: object
    description: ArtifactType defines the artifact data evaluation.
  v1ArtifactVersion:
    type: object
    properties:
      versionId:
        type: string
        format: int64
      tags:
        type: array
        items:
          type: string
      sha:
        type: string
      createdAt:
        type: string
        format: date-time
  v1AssignRoleRequest:
    type: object
    properties:
      context:
        $ref: '#/definitions/v1Context'
        description: context is the context in which the role assignment is evaluated.
      roleAssignment:
        $ref: '#/definitions/v1RoleAssignment'
        description: role_assignment is the role assignment to be created.
  v1AssignRoleResponse:
    type: object
    properties:
      roleAssignment:
        $ref: '#/definitions/v1RoleAssignment'
        description: role_assignment is the role assignment that was created.
  v1BuiltinType:
    type: object
    properties:
      method:
        type: string
    description: BuiltinType defines the builtin data evaluation.
  v1CheckHealthResponse:
    type: object
    properties:
      status:
        type: string
  v1Context:
    type: object
    properties:
      provider:
        type: string
        title: name of the provider
      project:
        type: string
        title: ID of the project
      retiredOrganization:
        type: string
    description: >-
      Context defines the context in which a rule is evaluated.

      this normally refers to a combination of the provider, organization and
      project.


      Removing the 'optional' keyword from the following two fields below will
      break
       buf compatibility checks.
  v1CreateProfileRequest:
    type: object
    properties:
      profile:
        $ref: '#/definitions/v1Profile'
    title: Profile service
  v1CreateProfileResponse:
    type: object
    properties:
      profile:
        $ref: '#/definitions/v1Profile'
  v1CreateRuleTypeRequest:
    type: object
    properties:
      ruleType:
        $ref: '#/definitions/v1RuleType'
        description: rule_type is the rule type to be created.
    description: CreateRuleTypeRequest is the request to create a rule type.
  v1CreateRuleTypeResponse:
    type: object
    properties:
      ruleType:
        $ref: '#/definitions/v1RuleType'
        description: rule_type is the rule type that was created.
    description: CreateRuleTypeResponse is the response to create a rule type.
  v1CreateUserRequest:
    type: object
    title: User service
  v1CreateUserResponse:
    type: object
    properties:
      id:
        type: integer
        format: int32
      organizationId:
        type: string
      organizatioName:
        type: string
      projectId:
        type: string
      projectName:
        type: string
      identitySubject:
        type: string
      createdAt:
        type: string
        format: date-time
      context:
        $ref: '#/definitions/v1Context'
  v1DeleteProfileResponse:
    type: object
  v1DeleteRepositoryByIdResponse:
    type: object
    properties:
      repositoryId:
        type: string
  v1DeleteRepositoryByNameResponse:
    type: object
    properties:
      name:
        type: string
  v1DeleteRuleTypeResponse:
    type: object
    description: DeleteRuleTypeResponse is the response to delete a rule type.
  v1DeleteUserResponse:
    type: object
  v1DiffType:
    type: object
    properties:
      ecosystems:
        type: array
        items:
          type: object
          $ref: '#/definitions/DiffTypeEcosystem'
        description: |-
          ecosystems is the list of ecosystems to be used
          for the "dep" diff type.
      type:
        type: string
        description: |-
          type is the type of diff ingestor to use.
          The default is "dep" which will leverage
          the ecosystems array.
    description: DiffType defines the diff data ingester.
  v1Entity:
    type: string
    enum:
      - ENTITY_UNSPECIFIED
      - ENTITY_REPOSITORIES
      - ENTITY_BUILD_ENVIRONMENTS
      - ENTITY_ARTIFACTS
      - ENTITY_PULL_REQUESTS
    default: ENTITY_UNSPECIFIED
    description: Entity defines the entity that is supported by the provider.
  v1GetArtifactByIdResponse:
    type: object
    properties:
      artifact:
        $ref: '#/definitions/v1Artifact'
      versions:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1ArtifactVersion'
  v1GetArtifactByNameResponse:
    type: object
    properties:
      artifact:
        $ref: '#/definitions/v1Artifact'
      versions:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1ArtifactVersion'
  v1GetAuthorizationURLResponse:
    type: object
    properties:
      url:
        type: string
  v1GetProfileByIdResponse:
    type: object
    properties:
      profile:
        $ref: '#/definitions/v1Profile'
  v1GetProfileStatusByNameResponse:
    type: object
    properties:
      profileStatus:
        $ref: '#/definitions/v1ProfileStatus'
        title: profile_status is the status of the profile
      ruleEvaluationStatus:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1RuleEvaluationStatus'
        title: rule_evaluation_status is the status of the rules
  v1GetProfileStatusByProjectResponse:
    type: object
    properties:
      profileStatus:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1ProfileStatus'
        title: profile_status is the status of the profile
  v1GetRepositoryByIdResponse:
    type: object
    properties:
      repository:
        $ref: '#/definitions/v1Repository'
  v1GetRepositoryByNameResponse:
    type: object
    properties:
      repository:
        $ref: '#/definitions/v1Repository'
  v1GetRuleTypeByIdResponse:
    type: object
    properties:
      ruleType:
        $ref: '#/definitions/v1RuleType'
        description: rule_type is the rule type.
    description: GetRuleTypeByIdResponse is the response to get a rule type by id.
  v1GetRuleTypeByNameResponse:
    type: object
    properties:
      ruleType:
        $ref: '#/definitions/v1RuleType'
        description: rule_type is the rule type.
    description: GetRuleTypeByNameResponse is the response to get a rule type by name.
  v1GetUserResponse:
    type: object
    properties:
      user:
        $ref: '#/definitions/v1UserRecord'
      projects:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Project'
  v1GitType:
    type: object
    properties:
      cloneUrl:
        type: string
        description: clone_url is the url of the git repository.
      branch:
        type: string
        description: branch is the branch of the git repository.
    description: GitType defines the git data ingester.
  v1ListArtifactsResponse:
    type: object
    properties:
      results:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Artifact'
  v1ListProfilesResponse:
    type: object
    properties:
      profiles:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Profile'
  v1ListProvidersResponse:
    type: object
    properties:
      providers:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Provider'
      cursor:
        type: string
        title: >-
          cursor is the cursor to use for the next page of results, empty if at
          the end
  v1ListRemoteRepositoriesFromProviderResponse:
    type: object
    properties:
      results:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1UpstreamRepositoryRef'
  v1ListRepositoriesResponse:
    type: object
    properties:
      results:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Repository'
      cursor:
        type: string
        title: >-
          cursor is the cursor to use for the next page of results, empty if at
          the end
  v1ListRoleAssignmentsResponse:
    type: object
    properties:
      roleAssignments:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1RoleAssignment'
  v1ListRolesResponse:
    type: object
    properties:
      roles:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Role'
  v1ListRuleTypesResponse:
    type: object
    properties:
      ruleTypes:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1RuleType'
        description: rule_types is the list of rule types.
    description: ListRuleTypesResponse is the response to list rule types.
  v1Profile:
    type: object
    properties:
      context:
        $ref: '#/definitions/v1Context'
        description: context is the context in which the profile is evaluated.
      id:
        type: string
        description: |-
          id is the id of the profile.
          This is optional and is set by the system.
      name:
        type: string
        description: name is the name of the profile instance.
      repository:
        type: array
        items:
          type: object
          $ref: '#/definitions/ProfileRule'
        description: These are the entities that one could set in the profile.
      buildEnvironment:
        type: array
        items:
          type: object
          $ref: '#/definitions/ProfileRule'
      artifact:
        type: array
        items:
          type: object
          $ref: '#/definitions/ProfileRule'
      pullRequest:
        type: array
        items:
          type: object
          $ref: '#/definitions/ProfileRule'
      remediate:
        type: string
        title: |-
          whether and how to remediate (on,off,dry_run)
          this is optional as the default is set by the system
      alert:
        type: string
        title: |-
          whether and how to alert (on,off,dry_run)
          this is optional as the default is set by the system
      type:
        type: string
        description: >-
          type is a placeholder for the object type. It should always be set to
          "profile".
      version:
        type: string
        title: version is the version of the profile type. In this case, it is "v1"
    description: Profile defines a profile that is user defined.
  v1ProfileStatus:
    type: object
    properties:
      profileId:
        type: string
        title: profile_id is the id of the profile
      profileName:
        type: string
        title: profile_name is the name of the profile
      profileStatus:
        type: string
        title: profile_status is the status of the profile
      lastUpdated:
        type: string
        format: date-time
        title: last_updated is the last time the profile was updated
    title: get the overall profile status
  v1Project:
    type: object
    properties:
      projectId:
        type: string
      name:
        type: string
      description:
        type: string
      createdAt:
        type: string
        format: date-time
      updatedAt:
        type: string
        format: date-time
    title: Project API Objects
  v1Provider:
    type: object
    properties:
      name:
        type: string
        description: name is the name of the provider.
      project:
        type: string
        description: project is the project where the provider is.
      version:
        type: string
        description: version is the version of the provider.
      implements:
        type: array
        items:
          $ref: '#/definitions/v1ProviderType'
        description: implements is the list of interfaces that the provider implements.
      config:
        type: object
        description: config is the configuration of the provider.
  v1ProviderType:
    type: string
    enum:
      - PROVIDER_TYPE_UNSPECIFIED
      - PROVIDER_TYPE_GITHUB
      - PROVIDER_TYPE_REST
      - PROVIDER_TYPE_GIT
      - PROVIDER_TYPE_OCI
      - PROVIDER_TYPE_REPO_LISTER
    default: PROVIDER_TYPE_UNSPECIFIED
    description: ProviderType is the type of the provider.
  v1RegisterRepoResult:
    type: object
    properties:
      repository:
        $ref: '#/definitions/v1Repository'
      status:
        $ref: '#/definitions/v1RegisterRepoResultStatus'
  v1RegisterRepoResultStatus:
    type: object
    properties:
      success:
        type: boolean
      error:
        type: string
  v1RegisterRepositoryResponse:
    type: object
    properties:
      result:
        $ref: '#/definitions/v1RegisterRepoResult'
  v1RemoveRoleResponse:
    type: object
    properties:
      roleAssignment:
        $ref: '#/definitions/v1RoleAssignment'
        description: role_assignment is the role assignment that was removed.
  v1Repository:
    type: object
    properties:
      id:
        type: string
        title: This is optional when returning remote repositories
      context:
        $ref: '#/definitions/v1Context'
      owner:
        type: string
      name:
        type: string
      repoId:
        type: integer
        format: int32
      hookId:
        type: string
        format: int64
      hookUrl:
        type: string
      deployUrl:
        type: string
      cloneUrl:
        type: string
      hookName:
        type: string
      hookType:
        type: string
      hookUuid:
        type: string
      isPrivate:
        type: boolean
      isFork:
        type: boolean
      registered:
        type: boolean
      createdAt:
        type: string
        format: date-time
      updatedAt:
        type: string
        format: date-time
      defaultBranch:
        type: string
  v1RestType:
    type: object
    properties:
      endpoint:
        type: string
        description: |-
          endpoint is the endpoint to fetch data from.
          This can be a URL or the path on the API.bool
          This is a required field and must be set.
          This is also evaluated via a template which allows
          us dynamically fill in the values.
      method:
        type: string
        description: method is the method to use to fetch data.
      headers:
        type: array
        items:
          type: string
        description: headers are the headers to be sent to the endpoint.
      body:
        type: string
        description: body is the body to be sent to the endpoint.
      parse:
        type: string
        description: parse is the parsing mechanism to be used to parse the data.
      fallback:
        type: array
        items:
          type: object
          $ref: '#/definitions/RestTypeFallback'
        description: |-
          fallback provides a body that the ingester would return in case
          the REST call returns a non-200 status code.
    description: |-
      RestType defines the rest data evaluation.
      This is used to fetch data from a REST endpoint.
  v1Role:
    type: object
    properties:
      name:
        type: string
        description: name is the name of the role.
      description:
        type: string
        description: description is the description of the role.
  v1RoleAssignment:
    type: object
    properties:
      role:
        type: string
        description: role is the role that is assigned.
      subject:
        type: string
        description: subject is the subject to which the role is assigned.
      project:
        type: string
        description: projectt is the projectt in which the role is assigned.
  v1RuleEvaluationStatus:
    type: object
    properties:
      profileId:
        type: string
        title: profile_id is the id of the profile
      ruleId:
        type: string
        title: rule_id is the id of the rule
      ruleName:
        type: string
        title: >-
          rule_name is the type of the rule. Deprecated in favor of
          rule_type_name
      entity:
        type: string
        title: entity is the entity that was evaluated
      status:
        type: string
        title: status is the status of the evaluation
      lastUpdated:
        type: string
        format: date-time
        title: last_updated is the last time the profile was updated
      entityInfo:
        type: object
        additionalProperties:
          type: string
        title: entity_info is the information about the entity
      details:
        type: string
        title: details is the description of the evaluation if any
      guidance:
        type: string
        title: guidance is the guidance for the evaluation if any
      remediationStatus:
        type: string
        title: remediation_status is the status of the remediation
      remediationLastUpdated:
        type: string
        format: date-time
        title: >-
          remediation_last_updated is the last time the remediation was
          performed or attempted
      remediationDetails:
        type: string
        title: >-
          remediation_details is the description of the remediation attempt if
          any
      ruleTypeName:
        type: string
        title: rule_type_name is the name of the rule
      ruleDescriptionName:
        type: string
        title: rule_description_name is the name to describe the rule
    title: get the status of the rules for a given profile
  v1RuleType:
    type: object
    properties:
      id:
        type: string
        description: |-
          id is the id of the rule type.
          This is mostly optional and is set by the server.
      name:
        type: string
        description: name is the name of the rule type.
      context:
        $ref: '#/definitions/v1Context'
        description: context is the context in which the rule is evaluated.
      def:
        $ref: '#/definitions/RuleTypeDefinition'
        description: def is the definition of the rule type.
      description:
        type: string
        description: description is the description of the rule type.
      guidance:
        type: string
        description: guidance are instructions we give the user in case a rule fails.
    description: |-
      RuleType defines rules that may or may not be user defined.
      The version is assumed from the folder's version.
  v1StoreProviderTokenResponse:
    type: object
  v1UpdateProfileRequest:
    type: object
    properties:
      profile:
        $ref: '#/definitions/v1Profile'
  v1UpdateProfileResponse:
    type: object
    properties:
      profile:
        $ref: '#/definitions/v1Profile'
  v1UpdateRuleTypeRequest:
    type: object
    properties:
      ruleType:
        $ref: '#/definitions/v1RuleType'
        description: rule_type is the rule type to be updated.
    description: UpdateRuleTypeRequest is the request to update a rule type.
  v1UpdateRuleTypeResponse:
    type: object
    properties:
      ruleType:
        $ref: '#/definitions/v1RuleType'
        description: rule_type is the rule type that was updated.
    description: UpdateRuleTypeResponse is the response to update a rule type.
  v1UpstreamRepositoryRef:
    type: object
    properties:
      owner:
        type: string
      name:
        type: string
      repoId:
        type: integer
        format: int32
  v1UserRecord:
    type: object
    properties:
      id:
        type: integer
        format: int32
      organizationId:
        type: string
      identitySubject:
        type: string
      createdAt:
        type: string
        format: date-time
      updatedAt:
        type: string
        format: date-time
    title: user record to be returned
  v1VerifyProviderTokenFromResponse:
    type: object
    properties:
      status:
        type: string
