// SPDX-FileCopyrightText: Copyright 2024 The Minder Authors
// SPDX-License-Identifier: Apache-2.0

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        (unknown)
// source: internal.proto

// buf:lint:ignore PACKAGE_VERSION_SUFFIX

package proto

import (
	v1 "github.com/mindersec/minder/pkg/api/protobuf/go/minder/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DepEcosystem int32

const (
	DepEcosystem_DEP_ECOSYSTEM_UNSPECIFIED DepEcosystem = 0
	DepEcosystem_DEP_ECOSYSTEM_NPM         DepEcosystem = 1
	DepEcosystem_DEP_ECOSYSTEM_GO          DepEcosystem = 2
	DepEcosystem_DEP_ECOSYSTEM_PYPI        DepEcosystem = 3
)

// Enum value maps for DepEcosystem.
var (
	DepEcosystem_name = map[int32]string{
		0: "DEP_ECOSYSTEM_UNSPECIFIED",
		1: "DEP_ECOSYSTEM_NPM",
		2: "DEP_ECOSYSTEM_GO",
		3: "DEP_ECOSYSTEM_PYPI",
	}
	DepEcosystem_value = map[string]int32{
		"DEP_ECOSYSTEM_UNSPECIFIED": 0,
		"DEP_ECOSYSTEM_NPM":         1,
		"DEP_ECOSYSTEM_GO":          2,
		"DEP_ECOSYSTEM_PYPI":        3,
	}
)

func (x DepEcosystem) Enum() *DepEcosystem {
	p := new(DepEcosystem)
	*p = x
	return p
}

func (x DepEcosystem) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DepEcosystem) Descriptor() protoreflect.EnumDescriptor {
	return file_internal_proto_enumTypes[0].Descriptor()
}

func (DepEcosystem) Type() protoreflect.EnumType {
	return &file_internal_proto_enumTypes[0]
}

func (x DepEcosystem) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DepEcosystem.Descriptor instead.
func (DepEcosystem) EnumDescriptor() ([]byte, []int) {
	return file_internal_proto_rawDescGZIP(), []int{0}
}

type Dependency struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ecosystem DepEcosystem `protobuf:"varint,1,opt,name=ecosystem,proto3,enum=internal.DepEcosystem" json:"ecosystem,omitempty"`
	Name      string       `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Version   string       `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *Dependency) Reset() {
	*x = Dependency{}
	mi := &file_internal_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Dependency) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Dependency) ProtoMessage() {}

func (x *Dependency) ProtoReflect() protoreflect.Message {
	mi := &file_internal_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Dependency.ProtoReflect.Descriptor instead.
func (*Dependency) Descriptor() ([]byte, []int) {
	return file_internal_proto_rawDescGZIP(), []int{0}
}

func (x *Dependency) GetEcosystem() DepEcosystem {
	if x != nil {
		return x.Ecosystem
	}
	return DepEcosystem_DEP_ECOSYSTEM_UNSPECIFIED
}

func (x *Dependency) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Dependency) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type PullRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url       string      `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`                              // The full URL to the PR
	CommitSha string      `protobuf:"bytes,2,opt,name=commit_sha,json=commitSha,proto3" json:"commit_sha,omitempty"` // Commit SHA of the PR HEAD. Will be useful to submit a review
	Number    int64       `protobuf:"varint,3,opt,name=number,proto3" json:"number,omitempty"`                       // The sequential PR number (not the DB PK!)
	RepoOwner string      `protobuf:"bytes,4,opt,name=repo_owner,json=repoOwner,proto3" json:"repo_owner,omitempty"` // The owner of the repo, will be used to submit a review
	RepoName  string      `protobuf:"bytes,5,opt,name=repo_name,json=repoName,proto3" json:"repo_name,omitempty"`    // The name of the repo, will be used to submit a review
	AuthorId  int64       `protobuf:"varint,6,opt,name=author_id,json=authorId,proto3" json:"author_id,omitempty"`   // The author of the PR, will be used to check if we can request changes
	Action    string      `protobuf:"bytes,7,opt,name=action,proto3" json:"action,omitempty"`                        // The action that triggered the webhook
	Context   *v1.Context `protobuf:"bytes,8,opt,name=context,proto3" json:"context,omitempty"`
	// properties is a map of properties of the entity.
	Properties     *structpb.Struct `protobuf:"bytes,9,opt,name=properties,proto3" json:"properties,omitempty"`
	BaseCloneUrl   string           `protobuf:"bytes,10,opt,name=base_clone_url,json=baseCloneUrl,proto3" json:"base_clone_url,omitempty"`       // URL used to clone the base repository
	TargetCloneUrl string           `protobuf:"bytes,11,opt,name=target_clone_url,json=targetCloneUrl,proto3" json:"target_clone_url,omitempty"` // URL used to clone the target repository
	BaseRef        string           `protobuf:"bytes,12,opt,name=base_ref,json=baseRef,proto3" json:"base_ref,omitempty"`                        // The base ref of the PR
	TargetRef      string           `protobuf:"bytes,13,opt,name=target_ref,json=targetRef,proto3" json:"target_ref,omitempty"`                  // The target ref of the PR
}

func (x *PullRequest) Reset() {
	*x = PullRequest{}
	mi := &file_internal_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PullRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullRequest) ProtoMessage() {}

func (x *PullRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullRequest.ProtoReflect.Descriptor instead.
func (*PullRequest) Descriptor() ([]byte, []int) {
	return file_internal_proto_rawDescGZIP(), []int{1}
}

func (x *PullRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *PullRequest) GetCommitSha() string {
	if x != nil {
		return x.CommitSha
	}
	return ""
}

func (x *PullRequest) GetNumber() int64 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *PullRequest) GetRepoOwner() string {
	if x != nil {
		return x.RepoOwner
	}
	return ""
}

func (x *PullRequest) GetRepoName() string {
	if x != nil {
		return x.RepoName
	}
	return ""
}

func (x *PullRequest) GetAuthorId() int64 {
	if x != nil {
		return x.AuthorId
	}
	return 0
}

func (x *PullRequest) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *PullRequest) GetContext() *v1.Context {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *PullRequest) GetProperties() *structpb.Struct {
	if x != nil {
		return x.Properties
	}
	return nil
}

func (x *PullRequest) GetBaseCloneUrl() string {
	if x != nil {
		return x.BaseCloneUrl
	}
	return ""
}

func (x *PullRequest) GetTargetCloneUrl() string {
	if x != nil {
		return x.TargetCloneUrl
	}
	return ""
}

func (x *PullRequest) GetBaseRef() string {
	if x != nil {
		return x.BaseRef
	}
	return ""
}

func (x *PullRequest) GetTargetRef() string {
	if x != nil {
		return x.TargetRef
	}
	return ""
}

type PrDependencies struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pr   *PullRequest                           `protobuf:"bytes,1,opt,name=pr,proto3" json:"pr,omitempty"`
	Deps []*PrDependencies_ContextualDependency `protobuf:"bytes,2,rep,name=deps,proto3" json:"deps,omitempty"`
}

func (x *PrDependencies) Reset() {
	*x = PrDependencies{}
	mi := &file_internal_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PrDependencies) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrDependencies) ProtoMessage() {}

func (x *PrDependencies) ProtoReflect() protoreflect.Message {
	mi := &file_internal_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrDependencies.ProtoReflect.Descriptor instead.
func (*PrDependencies) Descriptor() ([]byte, []int) {
	return file_internal_proto_rawDescGZIP(), []int{2}
}

func (x *PrDependencies) GetPr() *PullRequest {
	if x != nil {
		return x.Pr
	}
	return nil
}

func (x *PrDependencies) GetDeps() []*PrDependencies_ContextualDependency {
	if x != nil {
		return x.Deps
	}
	return nil
}

type PrContents struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pr    *PullRequest       `protobuf:"bytes,1,opt,name=pr,proto3" json:"pr,omitempty"`
	Files []*PrContents_File `protobuf:"bytes,2,rep,name=files,proto3" json:"files,omitempty"`
}

func (x *PrContents) Reset() {
	*x = PrContents{}
	mi := &file_internal_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PrContents) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrContents) ProtoMessage() {}

func (x *PrContents) ProtoReflect() protoreflect.Message {
	mi := &file_internal_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrContents.ProtoReflect.Descriptor instead.
func (*PrContents) Descriptor() ([]byte, []int) {
	return file_internal_proto_rawDescGZIP(), []int{3}
}

func (x *PrContents) GetPr() *PullRequest {
	if x != nil {
		return x.Pr
	}
	return nil
}

func (x *PrContents) GetFiles() []*PrContents_File {
	if x != nil {
		return x.Files
	}
	return nil
}

type SelectorProvider struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the name of the provider, e.g. github-app-jakubtestorg
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// the class of the provider, e.g. github-app
	Class string `protobuf:"bytes,2,opt,name=class,proto3" json:"class,omitempty"`
}

func (x *SelectorProvider) Reset() {
	*x = SelectorProvider{}
	mi := &file_internal_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SelectorProvider) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectorProvider) ProtoMessage() {}

func (x *SelectorProvider) ProtoReflect() protoreflect.Message {
	mi := &file_internal_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectorProvider.ProtoReflect.Descriptor instead.
func (*SelectorProvider) Descriptor() ([]byte, []int) {
	return file_internal_proto_rawDescGZIP(), []int{4}
}

func (x *SelectorProvider) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SelectorProvider) GetClass() string {
	if x != nil {
		return x.Class
	}
	return ""
}

type SelectorRepository struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the full name of the repository, e.g. mindersec/minder
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// the provider of the repository
	Provider *SelectorProvider `protobuf:"bytes,2,opt,name=provider,proto3" json:"provider,omitempty"`
	// is_fork is true if the repository is a fork, nil if "don't know" or rather
	// not applicable to this provider
	IsFork *bool `protobuf:"varint,3,opt,name=is_fork,json=isFork,proto3,oneof" json:"is_fork,omitempty"`
	// is_private is true if the repository is private, nil if "don't know" or rather
	// not applicable to this provider
	IsPrivate  *bool            `protobuf:"varint,4,opt,name=is_private,json=isPrivate,proto3,oneof" json:"is_private,omitempty"`
	Properties *structpb.Struct `protobuf:"bytes,5,opt,name=properties,proto3" json:"properties,omitempty"`
}

func (x *SelectorRepository) Reset() {
	*x = SelectorRepository{}
	mi := &file_internal_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SelectorRepository) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectorRepository) ProtoMessage() {}

func (x *SelectorRepository) ProtoReflect() protoreflect.Message {
	mi := &file_internal_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectorRepository.ProtoReflect.Descriptor instead.
func (*SelectorRepository) Descriptor() ([]byte, []int) {
	return file_internal_proto_rawDescGZIP(), []int{5}
}

func (x *SelectorRepository) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SelectorRepository) GetProvider() *SelectorProvider {
	if x != nil {
		return x.Provider
	}
	return nil
}

func (x *SelectorRepository) GetIsFork() bool {
	if x != nil && x.IsFork != nil {
		return *x.IsFork
	}
	return false
}

func (x *SelectorRepository) GetIsPrivate() bool {
	if x != nil && x.IsPrivate != nil {
		return *x.IsPrivate
	}
	return false
}

func (x *SelectorRepository) GetProperties() *structpb.Struct {
	if x != nil {
		return x.Properties
	}
	return nil
}

type SelectorArtifact struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the full name of the artifact, e.g. mindersec/minder-server
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// the provider of the artifact
	Provider *SelectorProvider `protobuf:"bytes,2,opt,name=provider,proto3" json:"provider,omitempty"`
	// the type of the artifact, e.g. "container"
	Type       string           `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	Properties *structpb.Struct `protobuf:"bytes,5,opt,name=properties,proto3" json:"properties,omitempty"`
}

func (x *SelectorArtifact) Reset() {
	*x = SelectorArtifact{}
	mi := &file_internal_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SelectorArtifact) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectorArtifact) ProtoMessage() {}

func (x *SelectorArtifact) ProtoReflect() protoreflect.Message {
	mi := &file_internal_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectorArtifact.ProtoReflect.Descriptor instead.
func (*SelectorArtifact) Descriptor() ([]byte, []int) {
	return file_internal_proto_rawDescGZIP(), []int{6}
}

func (x *SelectorArtifact) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SelectorArtifact) GetProvider() *SelectorProvider {
	if x != nil {
		return x.Provider
	}
	return nil
}

func (x *SelectorArtifact) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *SelectorArtifact) GetProperties() *structpb.Struct {
	if x != nil {
		return x.Properties
	}
	return nil
}

type SelectorPullRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the full name of the pr, e.g. mindersec/minder-server/123
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// the provider of the pull request
	Provider *SelectorProvider `protobuf:"bytes,3,opt,name=provider,proto3" json:"provider,omitempty"`
	// provider-specific properties
	Properties *structpb.Struct `protobuf:"bytes,2,opt,name=properties,proto3" json:"properties,omitempty"`
}

func (x *SelectorPullRequest) Reset() {
	*x = SelectorPullRequest{}
	mi := &file_internal_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SelectorPullRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectorPullRequest) ProtoMessage() {}

func (x *SelectorPullRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectorPullRequest.ProtoReflect.Descriptor instead.
func (*SelectorPullRequest) Descriptor() ([]byte, []int) {
	return file_internal_proto_rawDescGZIP(), []int{7}
}

func (x *SelectorPullRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SelectorPullRequest) GetProvider() *SelectorProvider {
	if x != nil {
		return x.Provider
	}
	return nil
}

func (x *SelectorPullRequest) GetProperties() *structpb.Struct {
	if x != nil {
		return x.Properties
	}
	return nil
}

type SelectorEntity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// one of repository, pull_request, artifact (see oneof entity)
	EntityType v1.Entity `protobuf:"varint,1,opt,name=entity_type,json=entityType,proto3,enum=minder.v1.Entity" json:"entity_type,omitempty"`
	// the name of the entity, same as the name in the entity message
	Name     string            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Provider *SelectorProvider `protobuf:"bytes,3,opt,name=provider,proto3" json:"provider,omitempty"`
	// Types that are assignable to Entity:
	//
	//	*SelectorEntity_Repository
	//	*SelectorEntity_Artifact
	//	*SelectorEntity_PullRequest
	Entity isSelectorEntity_Entity `protobuf_oneof:"entity"`
}

func (x *SelectorEntity) Reset() {
	*x = SelectorEntity{}
	mi := &file_internal_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SelectorEntity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectorEntity) ProtoMessage() {}

func (x *SelectorEntity) ProtoReflect() protoreflect.Message {
	mi := &file_internal_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectorEntity.ProtoReflect.Descriptor instead.
func (*SelectorEntity) Descriptor() ([]byte, []int) {
	return file_internal_proto_rawDescGZIP(), []int{8}
}

func (x *SelectorEntity) GetEntityType() v1.Entity {
	if x != nil {
		return x.EntityType
	}
	return v1.Entity(0)
}

func (x *SelectorEntity) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SelectorEntity) GetProvider() *SelectorProvider {
	if x != nil {
		return x.Provider
	}
	return nil
}

func (m *SelectorEntity) GetEntity() isSelectorEntity_Entity {
	if m != nil {
		return m.Entity
	}
	return nil
}

func (x *SelectorEntity) GetRepository() *SelectorRepository {
	if x, ok := x.GetEntity().(*SelectorEntity_Repository); ok {
		return x.Repository
	}
	return nil
}

func (x *SelectorEntity) GetArtifact() *SelectorArtifact {
	if x, ok := x.GetEntity().(*SelectorEntity_Artifact); ok {
		return x.Artifact
	}
	return nil
}

func (x *SelectorEntity) GetPullRequest() *SelectorPullRequest {
	if x, ok := x.GetEntity().(*SelectorEntity_PullRequest); ok {
		return x.PullRequest
	}
	return nil
}

type isSelectorEntity_Entity interface {
	isSelectorEntity_Entity()
}

type SelectorEntity_Repository struct {
	Repository *SelectorRepository `protobuf:"bytes,4,opt,name=repository,proto3,oneof"`
}

type SelectorEntity_Artifact struct {
	Artifact *SelectorArtifact `protobuf:"bytes,5,opt,name=artifact,proto3,oneof"`
}

type SelectorEntity_PullRequest struct {
	PullRequest *SelectorPullRequest `protobuf:"bytes,6,opt,name=pull_request,json=pullRequest,proto3,oneof"`
}

func (*SelectorEntity_Repository) isSelectorEntity_Entity() {}

func (*SelectorEntity_Artifact) isSelectorEntity_Entity() {}

func (*SelectorEntity_PullRequest) isSelectorEntity_Entity() {}

type PrDependencies_ContextualDependency struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dep  *Dependency                                    `protobuf:"bytes,1,opt,name=dep,proto3" json:"dep,omitempty"`
	File *PrDependencies_ContextualDependency_FilePatch `protobuf:"bytes,2,opt,name=file,proto3" json:"file,omitempty"`
}

func (x *PrDependencies_ContextualDependency) Reset() {
	*x = PrDependencies_ContextualDependency{}
	mi := &file_internal_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PrDependencies_ContextualDependency) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrDependencies_ContextualDependency) ProtoMessage() {}

func (x *PrDependencies_ContextualDependency) ProtoReflect() protoreflect.Message {
	mi := &file_internal_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrDependencies_ContextualDependency.ProtoReflect.Descriptor instead.
func (*PrDependencies_ContextualDependency) Descriptor() ([]byte, []int) {
	return file_internal_proto_rawDescGZIP(), []int{2, 0}
}

func (x *PrDependencies_ContextualDependency) GetDep() *Dependency {
	if x != nil {
		return x.Dep
	}
	return nil
}

func (x *PrDependencies_ContextualDependency) GetFile() *PrDependencies_ContextualDependency_FilePatch {
	if x != nil {
		return x.File
	}
	return nil
}

type PrDependencies_ContextualDependency_FilePatch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                         // file changed, e.g. package-lock.json
	PatchUrl string `protobuf:"bytes,2,opt,name=patch_url,json=patchUrl,proto3" json:"patch_url,omitempty"` // points to the the raw patchfile
}

func (x *PrDependencies_ContextualDependency_FilePatch) Reset() {
	*x = PrDependencies_ContextualDependency_FilePatch{}
	mi := &file_internal_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PrDependencies_ContextualDependency_FilePatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrDependencies_ContextualDependency_FilePatch) ProtoMessage() {}

func (x *PrDependencies_ContextualDependency_FilePatch) ProtoReflect() protoreflect.Message {
	mi := &file_internal_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrDependencies_ContextualDependency_FilePatch.ProtoReflect.Descriptor instead.
func (*PrDependencies_ContextualDependency_FilePatch) Descriptor() ([]byte, []int) {
	return file_internal_proto_rawDescGZIP(), []int{2, 0, 0}
}

func (x *PrDependencies_ContextualDependency_FilePatch) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PrDependencies_ContextualDependency_FilePatch) GetPatchUrl() string {
	if x != nil {
		return x.PatchUrl
	}
	return ""
}

type PrContents_File struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string                  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	FilePatchUrl string                  `protobuf:"bytes,2,opt,name=file_patch_url,json=filePatchUrl,proto3" json:"file_patch_url,omitempty"`
	PatchLines   []*PrContents_File_Line `protobuf:"bytes,3,rep,name=patch_lines,json=patchLines,proto3" json:"patch_lines,omitempty"`
}

func (x *PrContents_File) Reset() {
	*x = PrContents_File{}
	mi := &file_internal_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PrContents_File) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrContents_File) ProtoMessage() {}

func (x *PrContents_File) ProtoReflect() protoreflect.Message {
	mi := &file_internal_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrContents_File.ProtoReflect.Descriptor instead.
func (*PrContents_File) Descriptor() ([]byte, []int) {
	return file_internal_proto_rawDescGZIP(), []int{3, 0}
}

func (x *PrContents_File) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PrContents_File) GetFilePatchUrl() string {
	if x != nil {
		return x.FilePatchUrl
	}
	return ""
}

func (x *PrContents_File) GetPatchLines() []*PrContents_File_Line {
	if x != nil {
		return x.PatchLines
	}
	return nil
}

type PrContents_File_Line struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Deliberately left as an int32: a diff with more than 2^31 lines
	// could lead to various problems while processing.
	LineNumber int32  `protobuf:"varint,1,opt,name=line_number,json=lineNumber,proto3" json:"line_number,omitempty"`
	Content    string `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *PrContents_File_Line) Reset() {
	*x = PrContents_File_Line{}
	mi := &file_internal_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PrContents_File_Line) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrContents_File_Line) ProtoMessage() {}

func (x *PrContents_File_Line) ProtoReflect() protoreflect.Message {
	mi := &file_internal_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrContents_File_Line.ProtoReflect.Descriptor instead.
func (*PrContents_File_Line) Descriptor() ([]byte, []int) {
	return file_internal_proto_rawDescGZIP(), []int{3, 0, 0}
}

func (x *PrContents_File_Line) GetLineNumber() int32 {
	if x != nil {
		return x.LineNumber
	}
	return 0
}

func (x *PrContents_File_Line) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

var File_internal_proto protoreflect.FileDescriptor

var file_internal_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x1a, 0x16, 0x6d, 0x69, 0x6e, 0x64,
	0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x70, 0x0a, 0x0a, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x34,
	0x0a, 0x09, 0x65, 0x63, 0x6f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x16, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x44, 0x65, 0x70,
	0x45, 0x63, 0x6f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x09, 0x65, 0x63, 0x6f, 0x73, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x22, 0xb8, 0x03, 0x0a, 0x0b, 0x50, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x75, 0x72, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x5f, 0x73,
	0x68, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74,
	0x53, 0x68, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x72,
	0x65, 0x70, 0x6f, 0x5f, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x72, 0x65, 0x70, 0x6f, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65,
	0x70, 0x6f, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72,
	0x65, 0x70, 0x6f, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x61, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x37, 0x0a, 0x0a, 0x70, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x69, 0x65, 0x73, 0x12, 0x24, 0x0a, 0x0e, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x63, 0x6c, 0x6f, 0x6e,
	0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x61, 0x73,
	0x65, 0x43, 0x6c, 0x6f, 0x6e, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x28, 0x0a, 0x10, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x5f, 0x63, 0x6c, 0x6f, 0x6e, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x43, 0x6c, 0x6f, 0x6e, 0x65,
	0x55, 0x72, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x72, 0x65, 0x66, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x66, 0x12, 0x1d,
	0x0a, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x65, 0x66, 0x22, 0xc6, 0x02,
	0x0a, 0x0e, 0x50, 0x72, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73,
	0x12, 0x25, 0x0a, 0x02, 0x70, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x50, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x52, 0x02, 0x70, 0x72, 0x12, 0x41, 0x0a, 0x04, 0x64, 0x65, 0x70, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x2e, 0x50, 0x72, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x2e,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x75, 0x61, 0x6c, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64,
	0x65, 0x6e, 0x63, 0x79, 0x52, 0x04, 0x64, 0x65, 0x70, 0x73, 0x1a, 0xc9, 0x01, 0x0a, 0x14, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x75, 0x61, 0x6c, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65,
	0x6e, 0x63, 0x79, 0x12, 0x26, 0x0a, 0x03, 0x64, 0x65, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x44, 0x65, 0x70, 0x65,
	0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x03, 0x64, 0x65, 0x70, 0x12, 0x4b, 0x0a, 0x04, 0x66,
	0x69, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x50, 0x72, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63,
	0x69, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x75, 0x61, 0x6c, 0x44, 0x65,
	0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74,
	0x63, 0x68, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x1a, 0x3c, 0x0a, 0x09, 0x46, 0x69, 0x6c, 0x65,
	0x50, 0x61, 0x74, 0x63, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x74,
	0x63, 0x68, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61,
	0x74, 0x63, 0x68, 0x55, 0x72, 0x6c, 0x22, 0xab, 0x02, 0x0a, 0x0a, 0x50, 0x72, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x25, 0x0a, 0x02, 0x70, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x50, 0x75, 0x6c,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x02, 0x70, 0x72, 0x12, 0x2f, 0x0a, 0x05,
	0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x50, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x73, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x1a, 0xc4, 0x01,
	0x0a, 0x04, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x66, 0x69,
	0x6c, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x63, 0x68, 0x55, 0x72, 0x6c,
	0x12, 0x3f, 0x0a, 0x0b, 0x70, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x2e, 0x50, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x46, 0x69, 0x6c, 0x65,
	0x2e, 0x4c, 0x69, 0x6e, 0x65, 0x52, 0x0a, 0x70, 0x61, 0x74, 0x63, 0x68, 0x4c, 0x69, 0x6e, 0x65,
	0x73, 0x1a, 0x41, 0x0a, 0x04, 0x4c, 0x69, 0x6e, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x69, 0x6e,
	0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x6c, 0x69, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x22, 0x3c, 0x0a, 0x10, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6c, 0x61,
	0x73, 0x73, 0x22, 0xf6, 0x01, 0x0a, 0x12, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52,
	0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x36, 0x0a,
	0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x08, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x66, 0x6f, 0x72, 0x6b,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x06, 0x69, 0x73, 0x46, 0x6f, 0x72, 0x6b,
	0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x48, 0x01, 0x52, 0x09, 0x69, 0x73, 0x50, 0x72, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x37, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73,
	0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x69, 0x73, 0x5f, 0x66, 0x6f, 0x72, 0x6b, 0x42, 0x0d, 0x0a, 0x0b,
	0x5f, 0x69, 0x73, 0x5f, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x22, 0xab, 0x01, 0x0a, 0x10,
	0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x36, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x37, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x0a, 0x70,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x22, 0x9a, 0x01, 0x0a, 0x13, 0x53, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x50, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x36, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x37, 0x0a,
	0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x22, 0xd8, 0x02, 0x0a, 0x0e, 0x53, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x32, 0x0a, 0x0b, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11,
	0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x52, 0x0a, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x36, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x53,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52,
	0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x3e, 0x0a, 0x0a, 0x72, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x48, 0x00, 0x52, 0x0a, 0x72,
	0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x38, 0x0a, 0x08, 0x61, 0x72, 0x74,
	0x69, 0x66, 0x61, 0x63, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x41,
	0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x48, 0x00, 0x52, 0x08, 0x61, 0x72, 0x74, 0x69, 0x66,
	0x61, 0x63, 0x74, 0x12, 0x42, 0x0a, 0x0c, 0x70, 0x75, 0x6c, 0x6c, 0x5f, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x50, 0x75, 0x6c,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0b, 0x70, 0x75, 0x6c, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x08, 0x0a, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x2a, 0x72, 0x0a, 0x0c, 0x44, 0x65, 0x70, 0x45, 0x63, 0x6f, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x12, 0x1d, 0x0a, 0x19, 0x44, 0x45, 0x50, 0x5f, 0x45, 0x43, 0x4f, 0x53, 0x59, 0x53, 0x54,
	0x45, 0x4d, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00,
	0x12, 0x15, 0x0a, 0x11, 0x44, 0x45, 0x50, 0x5f, 0x45, 0x43, 0x4f, 0x53, 0x59, 0x53, 0x54, 0x45,
	0x4d, 0x5f, 0x4e, 0x50, 0x4d, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x44, 0x45, 0x50, 0x5f, 0x45,
	0x43, 0x4f, 0x53, 0x59, 0x53, 0x54, 0x45, 0x4d, 0x5f, 0x47, 0x4f, 0x10, 0x02, 0x12, 0x16, 0x0a,
	0x12, 0x44, 0x45, 0x50, 0x5f, 0x45, 0x43, 0x4f, 0x53, 0x59, 0x53, 0x54, 0x45, 0x4d, 0x5f, 0x50,
	0x59, 0x50, 0x49, 0x10, 0x03, 0x42, 0x2c, 0x5a, 0x2a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x73, 0x65, 0x63, 0x2f, 0x6d, 0x69,
	0x6e, 0x64, 0x65, 0x72, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_internal_proto_rawDescOnce sync.Once
	file_internal_proto_rawDescData = file_internal_proto_rawDesc
)

func file_internal_proto_rawDescGZIP() []byte {
	file_internal_proto_rawDescOnce.Do(func() {
		file_internal_proto_rawDescData = protoimpl.X.CompressGZIP(file_internal_proto_rawDescData)
	})
	return file_internal_proto_rawDescData
}

var file_internal_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_internal_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_internal_proto_goTypes = []any{
	(DepEcosystem)(0),                                     // 0: internal.DepEcosystem
	(*Dependency)(nil),                                    // 1: internal.Dependency
	(*PullRequest)(nil),                                   // 2: internal.PullRequest
	(*PrDependencies)(nil),                                // 3: internal.PrDependencies
	(*PrContents)(nil),                                    // 4: internal.PrContents
	(*SelectorProvider)(nil),                              // 5: internal.SelectorProvider
	(*SelectorRepository)(nil),                            // 6: internal.SelectorRepository
	(*SelectorArtifact)(nil),                              // 7: internal.SelectorArtifact
	(*SelectorPullRequest)(nil),                           // 8: internal.SelectorPullRequest
	(*SelectorEntity)(nil),                                // 9: internal.SelectorEntity
	(*PrDependencies_ContextualDependency)(nil),           // 10: internal.PrDependencies.ContextualDependency
	(*PrDependencies_ContextualDependency_FilePatch)(nil), // 11: internal.PrDependencies.ContextualDependency.FilePatch
	(*PrContents_File)(nil),                               // 12: internal.PrContents.File
	(*PrContents_File_Line)(nil),                          // 13: internal.PrContents.File.Line
	(*v1.Context)(nil),                                    // 14: minder.v1.Context
	(*structpb.Struct)(nil),                               // 15: google.protobuf.Struct
	(v1.Entity)(0),                                        // 16: minder.v1.Entity
}
var file_internal_proto_depIdxs = []int32{
	0,  // 0: internal.Dependency.ecosystem:type_name -> internal.DepEcosystem
	14, // 1: internal.PullRequest.context:type_name -> minder.v1.Context
	15, // 2: internal.PullRequest.properties:type_name -> google.protobuf.Struct
	2,  // 3: internal.PrDependencies.pr:type_name -> internal.PullRequest
	10, // 4: internal.PrDependencies.deps:type_name -> internal.PrDependencies.ContextualDependency
	2,  // 5: internal.PrContents.pr:type_name -> internal.PullRequest
	12, // 6: internal.PrContents.files:type_name -> internal.PrContents.File
	5,  // 7: internal.SelectorRepository.provider:type_name -> internal.SelectorProvider
	15, // 8: internal.SelectorRepository.properties:type_name -> google.protobuf.Struct
	5,  // 9: internal.SelectorArtifact.provider:type_name -> internal.SelectorProvider
	15, // 10: internal.SelectorArtifact.properties:type_name -> google.protobuf.Struct
	5,  // 11: internal.SelectorPullRequest.provider:type_name -> internal.SelectorProvider
	15, // 12: internal.SelectorPullRequest.properties:type_name -> google.protobuf.Struct
	16, // 13: internal.SelectorEntity.entity_type:type_name -> minder.v1.Entity
	5,  // 14: internal.SelectorEntity.provider:type_name -> internal.SelectorProvider
	6,  // 15: internal.SelectorEntity.repository:type_name -> internal.SelectorRepository
	7,  // 16: internal.SelectorEntity.artifact:type_name -> internal.SelectorArtifact
	8,  // 17: internal.SelectorEntity.pull_request:type_name -> internal.SelectorPullRequest
	1,  // 18: internal.PrDependencies.ContextualDependency.dep:type_name -> internal.Dependency
	11, // 19: internal.PrDependencies.ContextualDependency.file:type_name -> internal.PrDependencies.ContextualDependency.FilePatch
	13, // 20: internal.PrContents.File.patch_lines:type_name -> internal.PrContents.File.Line
	21, // [21:21] is the sub-list for method output_type
	21, // [21:21] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_internal_proto_init() }
func file_internal_proto_init() {
	if File_internal_proto != nil {
		return
	}
	file_internal_proto_msgTypes[5].OneofWrappers = []any{}
	file_internal_proto_msgTypes[8].OneofWrappers = []any{
		(*SelectorEntity_Repository)(nil),
		(*SelectorEntity_Artifact)(nil),
		(*SelectorEntity_PullRequest)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_internal_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_internal_proto_goTypes,
		DependencyIndexes: file_internal_proto_depIdxs,
		EnumInfos:         file_internal_proto_enumTypes,
		MessageInfos:      file_internal_proto_msgTypes,
	}.Build()
	File_internal_proto = out.File
	file_internal_proto_rawDesc = nil
	file_internal_proto_goTypes = nil
	file_internal_proto_depIdxs = nil
}
