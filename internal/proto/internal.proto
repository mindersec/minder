// SPDX-FileCopyrightText: Copyright 2024 The Minder Authors
// SPDX-License-Identifier: Apache-2.0

syntax = "proto3";

// buf:lint:ignore PACKAGE_VERSION_SUFFIX
package internal;

import "minder/v1/minder.proto";
import "google/protobuf/struct.proto";

option go_package = "github.com/mindersec/minder/internal/proto";

enum DepEcosystem {
  DEP_ECOSYSTEM_UNSPECIFIED = 0;
  DEP_ECOSYSTEM_NPM = 1;
  DEP_ECOSYSTEM_GO = 2;
  DEP_ECOSYSTEM_PYPI = 3;
}

message Dependency {
  DepEcosystem ecosystem = 1;

  string name = 2;
  string version = 3;
}

message PullRequest {
  string url = 1;         // The full URL to the PR
  string commit_sha = 2;  // Commit SHA of the PR HEAD. Will be useful to submit a review
  int64 number = 3;  // The sequential PR number (not the DB PK!)

  string repo_owner = 4;  // The owner of the repo, will be used to submit a review
  string repo_name = 5;   // The name of the repo, will be used to submit a review

  int64 author_id = 6;  // The author of the PR, will be used to check if we can request changes

  string action = 7;      // The action that triggered the webhook

  minder.v1.Context context = 8;

  // properties is a map of properties of the entity.
  google.protobuf.Struct properties = 9;

  string base_clone_url = 10;   // URL used to clone the base repository
  string target_clone_url = 11; // URL used to clone the target repository
  string base_ref = 12;         // The base ref of the PR
  string target_ref = 13;       // The target ref of the PR
}

message PrDependencies {
  message ContextualDependency {
    message FilePatch {
      string name = 1;      // file changed, e.g. package-lock.json
      string patch_url = 2;  // points to the the raw patchfile
    }

    Dependency dep = 1;
    FilePatch file = 2;
  }

  PullRequest pr = 1;
  repeated ContextualDependency deps = 2;
}

message PrContents {
  message File {
    string name = 1;
    string file_patch_url = 2;
    repeated Line patch_lines = 3;

    message Line {
      // Deliberately left as an int32: a diff with more than 2^31 lines
      // could lead to various problems while processing.
      int32 line_number = 1;
      string content = 2;
    }
  }

  PullRequest pr = 1;
  repeated File files = 2;
}

message SelectorProvider {
  // the name of the provider, e.g. github-app-jakubtestorg
  string name = 1;
  // the class of the provider, e.g. github-app
  string class = 2;
}

message SelectorRepository {
  // the full name of the repository, e.g. mindersec/minder
  string name = 1;
  // the provider of the repository
  SelectorProvider provider = 2;

  // is_fork is true if the repository is a fork, nil if "don't know" or rather
  // not applicable to this provider
  optional bool is_fork = 3;
  // is_private is true if the repository is private, nil if "don't know" or rather
  // not applicable to this provider
  optional bool is_private = 4;

  google.protobuf.Struct properties = 5;
}

message SelectorArtifact {
  // the full name of the artifact, e.g. mindersec/minder-server
  string name = 1;
  // the provider of the artifact
  SelectorProvider provider = 2;

  // the type of the artifact, e.g. "container"
  string type = 4;

  google.protobuf.Struct properties = 5;
}

message SelectorPullRequest {
  // the full name of the pr, e.g. mindersec/minder-server/123
  string name = 1;
  // the provider of the pull request
  SelectorProvider provider = 3;

  // provider-specific properties
  google.protobuf.Struct properties = 2;
}

message SelectorEntity {
  // one of repository, pull_request, artifact (see oneof entity)
  minder.v1.Entity entity_type = 1;
  // the name of the entity, same as the name in the entity message
  string name = 2;
  SelectorProvider provider = 3;

  oneof entity {
    SelectorRepository repository = 4;
    SelectorArtifact artifact = 5;
    SelectorPullRequest pull_request = 6;
  }
}
