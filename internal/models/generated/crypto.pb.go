// Copyright 2023 Stacklok, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

//
// Contains crypto structures which are not part of the Minder API contract.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        (unknown)
// source: internal/crypto.proto

package generated

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EncryptionAlgorithm int32

const (
	EncryptionAlgorithm_AES_256_CFB EncryptionAlgorithm = 0
)

// Enum value maps for EncryptionAlgorithm.
var (
	EncryptionAlgorithm_name = map[int32]string{
		0: "AES_256_CFB",
	}
	EncryptionAlgorithm_value = map[string]int32{
		"AES_256_CFB": 0,
	}
)

func (x EncryptionAlgorithm) Enum() *EncryptionAlgorithm {
	p := new(EncryptionAlgorithm)
	*p = x
	return p
}

func (x EncryptionAlgorithm) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EncryptionAlgorithm) Descriptor() protoreflect.EnumDescriptor {
	return file_internal_crypto_proto_enumTypes[0].Descriptor()
}

func (EncryptionAlgorithm) Type() protoreflect.EnumType {
	return &file_internal_crypto_proto_enumTypes[0]
}

func (x EncryptionAlgorithm) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EncryptionAlgorithm.Descriptor instead.
func (EncryptionAlgorithm) EnumDescriptor() ([]byte, []int) {
	return file_internal_crypto_proto_rawDescGZIP(), []int{0}
}

type EncryptedData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Method     EncryptionAlgorithm `protobuf:"varint,1,opt,name=method,proto3,enum=EncryptionAlgorithm" json:"method,omitempty"`
	Data       []byte              `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Salt       []byte              `protobuf:"bytes,3,opt,name=salt,proto3" json:"salt,omitempty"`
	KeyVersion string              `protobuf:"bytes,4,opt,name=key_version,json=keyVersion,proto3" json:"key_version,omitempty"`
}

func (x *EncryptedData) Reset() {
	*x = EncryptedData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_crypto_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EncryptedData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncryptedData) ProtoMessage() {}

func (x *EncryptedData) ProtoReflect() protoreflect.Message {
	mi := &file_internal_crypto_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncryptedData.ProtoReflect.Descriptor instead.
func (*EncryptedData) Descriptor() ([]byte, []int) {
	return file_internal_crypto_proto_rawDescGZIP(), []int{0}
}

func (x *EncryptedData) GetMethod() EncryptionAlgorithm {
	if x != nil {
		return x.Method
	}
	return EncryptionAlgorithm_AES_256_CFB
}

func (x *EncryptedData) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *EncryptedData) GetSalt() []byte {
	if x != nil {
		return x.Salt
	}
	return nil
}

func (x *EncryptedData) GetKeyVersion() string {
	if x != nil {
		return x.KeyVersion
	}
	return ""
}

var File_internal_crypto_proto protoreflect.FileDescriptor

var file_internal_crypto_proto_rawDesc = []byte{
	0x0a, 0x15, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x63, 0x72, 0x79, 0x70, 0x74,
	0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x86, 0x01, 0x0a, 0x0d, 0x45, 0x6e, 0x63, 0x72,
	0x79, 0x70, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2c, 0x0a, 0x06, 0x6d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x45, 0x6e, 0x63, 0x72,
	0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x52,
	0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x61, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x73, 0x61, 0x6c, 0x74, 0x12,
	0x1f, 0x0a, 0x0b, 0x6b, 0x65, 0x79, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6b, 0x65, 0x79, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x2a, 0x26, 0x0a, 0x13, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6c,
	0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x12, 0x0f, 0x0a, 0x0b, 0x41, 0x45, 0x53, 0x5f, 0x32,
	0x35, 0x36, 0x5f, 0x43, 0x46, 0x42, 0x10, 0x00, 0x42, 0x36, 0x5a, 0x34, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x6c, 0x6f, 0x6b, 0x2f,
	0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_internal_crypto_proto_rawDescOnce sync.Once
	file_internal_crypto_proto_rawDescData = file_internal_crypto_proto_rawDesc
)

func file_internal_crypto_proto_rawDescGZIP() []byte {
	file_internal_crypto_proto_rawDescOnce.Do(func() {
		file_internal_crypto_proto_rawDescData = protoimpl.X.CompressGZIP(file_internal_crypto_proto_rawDescData)
	})
	return file_internal_crypto_proto_rawDescData
}

var file_internal_crypto_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_internal_crypto_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_internal_crypto_proto_goTypes = []interface{}{
	(EncryptionAlgorithm)(0), // 0: EncryptionAlgorithm
	(*EncryptedData)(nil),    // 1: EncryptedData
}
var file_internal_crypto_proto_depIdxs = []int32{
	0, // 0: EncryptedData.method:type_name -> EncryptionAlgorithm
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_internal_crypto_proto_init() }
func file_internal_crypto_proto_init() {
	if File_internal_crypto_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_internal_crypto_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EncryptedData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_internal_crypto_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_internal_crypto_proto_goTypes,
		DependencyIndexes: file_internal_crypto_proto_depIdxs,
		EnumInfos:         file_internal_crypto_proto_enumTypes,
		MessageInfos:      file_internal_crypto_proto_msgTypes,
	}.Build()
	File_internal_crypto_proto = out.File
	file_internal_crypto_proto_rawDesc = nil
	file_internal_crypto_proto_goTypes = nil
	file_internal_crypto_proto_depIdxs = nil
}
