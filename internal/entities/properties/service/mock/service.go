// Code generated by MockGen. DO NOT EDIT.
// Source: ./service.go
//
// Generated by this command:
//
//	mockgen -package mock_service -destination=./mock/service.go -source=./service.go
//

// Package mock_service is a generated GoMock package.
package mock_service

import (
	context "context"
	reflect "reflect"

	uuid "github.com/google/uuid"
	properties "github.com/stacklok/minder/internal/entities/properties"
	v1 "github.com/stacklok/minder/pkg/api/protobuf/go/minder/v1"
	v10 "github.com/stacklok/minder/pkg/providers/v1"
	gomock "go.uber.org/mock/gomock"
)

// MockPropertiesService is a mock of PropertiesService interface.
type MockPropertiesService struct {
	ctrl     *gomock.Controller
	recorder *MockPropertiesServiceMockRecorder
}

// MockPropertiesServiceMockRecorder is the mock recorder for MockPropertiesService.
type MockPropertiesServiceMockRecorder struct {
	mock *MockPropertiesService
}

// NewMockPropertiesService creates a new mock instance.
func NewMockPropertiesService(ctrl *gomock.Controller) *MockPropertiesService {
	mock := &MockPropertiesService{ctrl: ctrl}
	mock.recorder = &MockPropertiesServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPropertiesService) EXPECT() *MockPropertiesServiceMockRecorder {
	return m.recorder
}

// RetrieveAllProperties mocks base method.
func (m *MockPropertiesService) RetrieveAllProperties(ctx context.Context, provider v10.Provider, projectId uuid.UUID, lookupProperties *properties.Properties, entType v1.Entity) (*properties.Properties, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RetrieveAllProperties", ctx, provider, projectId, lookupProperties, entType)
	ret0, _ := ret[0].(*properties.Properties)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// RetrieveAllProperties indicates an expected call of RetrieveAllProperties.
func (mr *MockPropertiesServiceMockRecorder) RetrieveAllProperties(ctx, provider, projectId, lookupProperties, entType any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RetrieveAllProperties", reflect.TypeOf((*MockPropertiesService)(nil).RetrieveAllProperties), ctx, provider, projectId, lookupProperties, entType)
}

// RetrieveProperty mocks base method.
func (m *MockPropertiesService) RetrieveProperty(ctx context.Context, provider v10.Provider, projectId uuid.UUID, lookupProperties *properties.Properties, entType v1.Entity, key string) (*properties.Property, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RetrieveProperty", ctx, provider, projectId, lookupProperties, entType, key)
	ret0, _ := ret[0].(*properties.Property)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// RetrieveProperty indicates an expected call of RetrieveProperty.
func (mr *MockPropertiesServiceMockRecorder) RetrieveProperty(ctx, provider, projectId, lookupProperties, entType, key any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RetrieveProperty", reflect.TypeOf((*MockPropertiesService)(nil).RetrieveProperty), ctx, provider, projectId, lookupProperties, entType, key)
}

// SaveAllProperties mocks base method.
func (m *MockPropertiesService) SaveAllProperties(ctx context.Context, entityID uuid.UUID, props *properties.Properties) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SaveAllProperties", ctx, entityID, props)
	ret0, _ := ret[0].(error)
	return ret0
}

// SaveAllProperties indicates an expected call of SaveAllProperties.
func (mr *MockPropertiesServiceMockRecorder) SaveAllProperties(ctx, entityID, props any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveAllProperties", reflect.TypeOf((*MockPropertiesService)(nil).SaveAllProperties), ctx, entityID, props)
}

// SaveProperty mocks base method.
func (m *MockPropertiesService) SaveProperty(ctx context.Context, entityID uuid.UUID, key string, prop *properties.Property) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SaveProperty", ctx, entityID, key, prop)
	ret0, _ := ret[0].(error)
	return ret0
}

// SaveProperty indicates an expected call of SaveProperty.
func (mr *MockPropertiesServiceMockRecorder) SaveProperty(ctx, entityID, key, prop any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveProperty", reflect.TypeOf((*MockPropertiesService)(nil).SaveProperty), ctx, entityID, key, prop)
}
