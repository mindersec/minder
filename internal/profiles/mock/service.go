// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/stacklok/minder/internal/profiles (interfaces: ProfileService)
//
// Generated by this command:
//
//	mockgen -package mockprofsvc -destination internal/profiles/mock/service.go github.com/stacklok/minder/internal/profiles ProfileService
//

// Package mockprofsvc is a generated GoMock package.
package mockprofsvc

import (
	context "context"
	reflect "reflect"

	uuid "github.com/google/uuid"
	db "github.com/stacklok/minder/internal/db"
	v1 "github.com/stacklok/minder/pkg/api/protobuf/go/minder/v1"
	gomock "go.uber.org/mock/gomock"
)

// MockProfileService is a mock of ProfileService interface.
type MockProfileService struct {
	ctrl     *gomock.Controller
	recorder *MockProfileServiceMockRecorder
}

// MockProfileServiceMockRecorder is the mock recorder for MockProfileService.
type MockProfileServiceMockRecorder struct {
	mock *MockProfileService
}

// NewMockProfileService creates a new mock instance.
func NewMockProfileService(ctrl *gomock.Controller) *MockProfileService {
	mock := &MockProfileService{ctrl: ctrl}
	mock.recorder = &MockProfileServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockProfileService) EXPECT() *MockProfileServiceMockRecorder {
	return m.recorder
}

// CreateProfile mocks base method.
func (m *MockProfileService) CreateProfile(arg0 context.Context, arg1, arg2 uuid.UUID, arg3 *v1.Profile, arg4 db.Querier) (*v1.Profile, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateProfile", arg0, arg1, arg2, arg3, arg4)
	ret0, _ := ret[0].(*v1.Profile)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateProfile indicates an expected call of CreateProfile.
func (mr *MockProfileServiceMockRecorder) CreateProfile(arg0, arg1, arg2, arg3, arg4 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateProfile", reflect.TypeOf((*MockProfileService)(nil).CreateProfile), arg0, arg1, arg2, arg3, arg4)
}

// UpdateProfile mocks base method.
func (m *MockProfileService) UpdateProfile(arg0 context.Context, arg1, arg2 uuid.UUID, arg3 *v1.Profile, arg4 db.Querier) (*v1.Profile, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateProfile", arg0, arg1, arg2, arg3, arg4)
	ret0, _ := ret[0].(*v1.Profile)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateProfile indicates an expected call of UpdateProfile.
func (mr *MockProfileServiceMockRecorder) UpdateProfile(arg0, arg1, arg2, arg3, arg4 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateProfile", reflect.TypeOf((*MockProfileService)(nil).UpdateProfile), arg0, arg1, arg2, arg3, arg4)
}
