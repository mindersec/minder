// SPDX-FileCopyrightText: Copyright 2024 The Minder Authors
// SPDX-License-Identifier: Apache-2.0

// Package webhooksecret provides a way to generate and verify secrets for GitLab webhooks.
package webhooksecret

import (
	sum "crypto/sha512"
	"encoding/hex"
	"errors"
	"fmt"
)

var (
	// ErrEmptyBaseOrUniq is returned when the base or uniq strings are empty.
	ErrEmptyBaseOrUniq = errors.New("base or uniq strings are empty")
)

// New creates a new secret for usage in the gitlab webhook.
// The secret is generated by combining the base and uniq strings
// and then hashing the result.
func New(base string, uniq string) (string, error) {
	if base == "" || uniq == "" {
		return "", ErrEmptyBaseOrUniq
	}

	hash := sum.New()
	_, err := hash.Write([]byte(base + uniq))
	if err != nil {
		return "", fmt.Errorf("failed to write secret: %w", err)
	}

	return hex.EncodeToString(hash.Sum(nil)), nil
}

// Verify checks if the given secret is valid for the given base and uniq strings.
func Verify(base string, uniq string, secret string) bool {
	s, err := New(base, uniq)
	if err != nil {
		// If we can't generate the secret, we can't verify it.
		return false
	}

	return s == secret
}
