---
version: v1
type: rule-type
name: codeql_enabled
context:
  provider: github
description: Verifies that CodeQL is enabled for the repository
guidance: |
  CodeQL is a tool that can be used to analyze code for security vulnerabilities.
  It is recommended that repositories have some form of static analysis enabled
  to ensure that vulnerabilities are not introduced into the codebase.

  To enable CodeQL, add a GitHub workflow to the repository that runs the
  CodeQL analysis.

  For more information, see
  https://docs.github.com/en/code-security/secure-coding/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#configuring-code-scanning-for-a-private-repository
def:
  # Defines the section of the pipeline the rule will appear in.
  # This will affect the template used to render multiple parts
  # of the rule.
  in_entity: repository
  # Defines the schema for writing a rule with this rule being checked
  rule_schema:
    type: object
    properties:
      languages:
        type: array
        items:
          type: string
        description: |
          Only applicable for remediation. Sets the CodeQL languages to use in the workflow.
          CodeQL supports 'c-cpp', 'csharp', 'go', 'java-kotlin', 'javascript-typescript', 'python', 'ruby', 'swift'
      schedule_interval:
        type: string
        description: |
          Only applicable for remediation. Sets the schedule interval for the workflow.
    required:
      - languages
      - schedule_interval
  # Defines the configuration for ingesting data relevant for the rule
  ingest:
    type: git
    git:
      branch: main
  # Defines the configuration for evaluating data ingested against the given profile
  eval:
    type: rego
    rego:
      type: deny-by-default
      def: |
        package minder

        default allow := false

        allow {
            # List all workflows
            workflows := file.ls("./.github/workflows")

            # Read all workflows
            some w
            workflowstr := file.read(workflows[w])

            workflow := yaml.unmarshal(workflowstr)

            # Ensure a workflow contains the codel-ql action
            some i
            steps := workflow.jobs.analyze.steps[i]
            startswith(steps.uses, "github/codeql-action/analyze@")
        }
  remediate:
    type: pull_request
    pull_request:
      title: "Add CodeQL configuration"
      body: |
        This is a Minder automated pull request.
        
        This pull request adds a CodeQL workflow to the repository.
        
        For more information, see
        https://docs.github.com/en/code-security/secure-coding/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning
      contents:
        - path: .github/workflows/codeql.yml
          action: replace
          content: |
            # Adapted from https://raw.githubusercontent.com/actions/starter-workflows/main/code-scanning/codeql.yml
            name: "CodeQL"

            on:
              workflow_dispatch:
              push:
                branches: [ "main" ]
              pull_request:
                # The branches below must be a subset of the branches above
                branches: [ "main" ]
              schedule:
                - cron: '{{ .Profile.schedule_interval }}'

            jobs:
              analyze:
                name: Analyze
                # Runner size impacts CodeQL analysis time. To learn more, please see:
                #   - https://gh.io/recommended-hardware-resources-for-running-codeql
                #   - https://gh.io/supported-runners-and-hardware-resources
                #   - https://gh.io/using-larger-runners
                # Consider using larger runners for possible analysis time improvements.
                runs-on: ${{"{{"}} (matrix.language == 'swift' && 'macos-latest') || 'ubuntu-latest' {{"}}"}}
                timeout-minutes: ${{"{{"}} (matrix.language == 'swift' && 120) || 360 {{"}}"}}
                permissions:
                  actions: read
                  contents: read
                  security-events: write

                strategy:
                  fail-fast: false
                  matrix:
                    language: [{{range $index, $pattern := .Profile.languages}}{{if $index}},{{end}}"{{ $pattern }}"{{end}}]
                    # CodeQL supports [ 'c-cpp', 'csharp', 'go', 'java-kotlin', 'javascript-typescript', 'python', 'ruby', 'swift' ]
                    # Use only 'java-kotlin' to analyze code written in Java, Kotlin or both
                    # Use only 'javascript-typescript' to analyze code written in JavaScript, TypeScript or both
                    # Learn more about CodeQL language support at https://aka.ms/codeql-docs/language-support

                steps:
                  - name: Checkout repository
                    uses: actions/checkout@v3
                  
                  # Initializes the CodeQL tools for scanning.
                  - name: Initialize CodeQL
                    uses: github/codeql-action/init@v2
                    with:
                      languages: ${{"{{"}} matrix.language {{"}}"}}
                        # If you wish to specify custom queries, you can do so here or in a config file.
                        # By default, queries listed here will override any specified in a config file.
                        # Prefix the list here with "+" to use these queries and those in the config file.
                        
                        # For more details on CodeQL's query packs, refer to: https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs
                        # queries: security-extended,security-and-quality
  # Defines the configuration for alerting on the rule
  alert:
    type: security_advisory
    security_advisory:
      severity: "medium"