#
# Copyright 2023 Stacklok, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# HTTP & gRPC server configuration
http_server:
  host: "127.0.0.1"
  port: 8080
grpc_server:
  host: "127.0.0.1"
  port: 8090

logging:
  level: "debug"
  format: "json"
  #logFile: "/var/log/mediator.log"

tracing:
  enabled: false
  #sample_ratio: 0.1

metrics:
  enabled: true

database:
  dbhost: "localhost"
  dbport: 5432
  dbuser: postgres
  dbpass: postgres
  dbname: mediator
  sslmode: disable
  encryption_key: p6ssw0rd

# Crypto (these should be ultimately stored in a secure vault)
# sample keys can be generated with:
#Â ssh-keygen -t rsa -b 2048 -m PEM -f access_token_rsa
# Don't add passphrase
# openssl rsa -in access_token_rsa -pubout -outform PEM -out access_token_rsa.pub
auth:
  access_token_private_key: "./.ssh/access_token_rsa"
  access_token_public_key: "./.ssh/access_token_rsa.pub"
  refresh_token_private_key: "./.ssh/refresh_token_rsa"
  refresh_token_public_key: "./.ssh/refresh_token_rsa.pub"
  token_expiry: 3600
  refresh_expiry: 86400
  nonce: 3600
  session_key: "12345678901234567890123456789012"

# Password Salting, these values are using argon2id
# https://en.wikipedia.org/wiki/Argon2
# Argon has resistance against side-channel timing attacks and tradeoff attacks
# but it is computationally expensive.
# If this is a problematic, we could use bcrypt instead.
# https://en.wikipedia.org/wiki/Bcrypt
salt:
  # The amount of memory used by the algorithm (in kibibytes).
  memory: 65536
  # the amount of iterations
  iterations:  50
  # degree of parallelism (number of threads)
  parallelism: 4
  # the length of the salt to be used
  salt_length: 16
  # the desired number of returned bytes
  key_length: 32

# Webhook Configuration
# change example.com to an exposed IP / domain
# webhook_secret is set withing the webhook sent to github. Github then signs
# the payload sent to mediator and mediator verifies.
webhook-config:
  external_webhook_url: "https://example.com/api/v1/webhook/github"
  external_ping_url: "https://example.com/api/v1/health"
  webhook_secret: "your-password"

# OAuth2 Configuration (used during enrollment)
# These values are to be set within the GitHub OAuth2 App page
github:
    client_id: "abcde....."
    client_secret: "abcde....."
    payload_secret: "your-password"
    redirect_uri: "http://localhost:8080/api/v1/auth/callback/github"
