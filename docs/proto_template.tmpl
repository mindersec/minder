---
sidebar_position: 60
title: Protocol documentation
toc_max_heading_level: 4
---

import useBrokenLinks from '@docusaurus/useBrokenLinks';

export const File = ({ children, id }) => {
  useBrokenLinks().collectAnchor(id);
  return <h2 id={id} name={id}>{children}</h2>;
}
export const Service = ({ children, id }) => {
  useBrokenLinks().collectAnchor(id);
  return <h4 id={id} name={id}>{children}</h4>;
}
export const Message = ({ children, id }) => {
  useBrokenLinks().collectAnchor(id);
  return <h4 id={id} name={id}>{children}</h4>;
}
export const Extension = ({ children, id }) => {
  useBrokenLinks().collectAnchor(id);
  return <h3 id={id} name={id}>{children}</h3>;
}
export const Enum = ({ children, id }) => {
  useBrokenLinks().collectAnchor(id);
  return <h3 id={id} name={id}>{children}</h3>;
}
export const ProtoType = ({ children, id }) => {
  useBrokenLinks().collectAnchor(id);
  return <a id={id} name={id}>{children}</a>;
}
export const TypeLink = ({ children, type }) => {
  let link = type.startsWith('google-protobuf-') ?
    `https://protobuf.dev/reference/protobuf/google.protobuf/#${type.replace('google-protobuf-', '')}` :
    `#${type}`;
  return <a href={link}>{children}</a>;
}


# Protocol documentation
<a id="top"></a>

{{range .Files}}
{{$file_name := .Name}}

<File id="{{.Name | anchor}}">{{.Name}}</File>

{{.Description}}

{{- if .Services}}
### Services
{{range .Services}}

<Service id="{{.FullName | anchor}}">{{.Name}}</Service>

{{.Description}}

| Method Name | Request Type | Response Type | Description |
| ----------- | ------------ | ------------- | ------------|
{{range .Methods -}}
  | {{.Name}} | [{{.RequestLongType}}](#{{.RequestFullType | anchor}}){{if .RequestStreaming}} stream{{end}} | [{{.ResponseLongType}}](#{{.ResponseFullType | anchor}}){{if .ResponseStreaming}} stream{{end}} | {{ .Description | replace "\n" " "}} |
{{end}}
{{end}}
{{- end -}}

{{- if .Messages}}
### Messages
{{range .Messages}}

<Message id="{{.FullName | anchor}}">{{.LongName}}</Message>

{{.Description}}

{{if .HasFields}}
| Field | Type | Label | Description |
| ----- | ---- | ----- | ----------- |
{{range .Fields -}}
  | {{.Name}} | <TypeLink type="{{.FullType | anchor}}">{{.LongType}}</TypeLink> | {{.Label}} | {{if (index .Options "deprecated"|default false)}}**Deprecated.** {{end}}{{nobr .Description}}{{if .DefaultValue}} Default: {{.DefaultValue}}{{end}} |
{{end}}
{{end}}
{{- end -}}

{{if .HasExtensions}}
| Extension | Type | Base | Number | Description |
| --------- | ---- | ---- | ------ | ----------- |
{{range .Extensions -}}
  | {{.Name}} | {{.LongType}} | {{.ContainingLongType}} | {{.Number}} | {{nobr .Description}}{{if .DefaultValue}} Default: {{.DefaultValue}}{{end}} |
{{end}}
{{end}}
{{end}}

{{range .Enums}}

<Enum id="{{.FullName | anchor}}">{{.LongName}}</Enum>

{{.Description}}

| Name | Number | Description |
| ---- | ------ | ----------- |
{{range .Values -}}
  | {{.Name}} | {{.Number}} | {{nobr .Description}} |
{{end}}
{{end}}

{{if .HasExtensions}}

<Extension id="{{$file_name | anchor}}-extensions">File-level Extensions</Extension>

| Extension | Type | Base | Number | Description |
| --------- | ---- | ---- | ------ | ----------- |
{{range .Extensions -}}
  | {{.Name}} | {{.LongType}} | {{.ContainingLongType}} | {{.Number}} | {{nobr .Description}}{{if .DefaultValue}} Default: `{{.DefaultValue}}`{{end}} |
{{end}}
{{end}}

{{end}}

## Scalar Value Types

| .proto Type | Notes | C++ | Java | Python | Go | C# | PHP | Ruby |
| ----------- | ----- | --- | ---- | ------ | -- | -- | --- | ---- |
{{range .Scalars -}}
  | <ProtoType id="{{.ProtoType | anchor}}">{{.ProtoType}}</ProtoType> | {{.Notes}} | {{.CppType}} | {{.JavaType}} | {{.PythonType}} | {{.GoType}} | {{.CSharp}} | {{.PhpType}} | {{.RubyType}} |
{{end}}
