#
# Copyright 2023 Stacklok, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Main

on:
  push:
    branches:
      - main
      - release-*
    paths-ignore:
      - "**.md"
      - "doc/**"
      - "**.txt"
      - "images/**"
      - "LICENSE"
  pull_request:
    branches:
      - main
      - release-*
    paths-ignore:
      - "**.md"
      - "doc/**"
      - "**.txt"
      - "images/**"
      - "LICENSE"

permissions:
  contents: read

jobs:
  license-check:
    name: license boilerplate check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3 # v3.5.0

      - uses: actions/setup-go@v4 # v4.0.0
        with:
          go-version: 1.20.0
      - name: Install addlicense
        run: go install github.com/google/addlicense@v1.0.0
      - name: Check license headers
        run: |
          set -e
          addlicense -ignore **/pkg/generated/* -ignore **/pkg/db/* -ignore **/database/query/* -l apache -c 'Stacklok, Inc' -v * 
          git diff --exit-code

  golangci:
    name: golangci-lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3 # v3.5.0
      - name: deps
        run: sudo apt-get update && sudo apt-get install -yq libpcsclite-dev
      - name: Extract version of Go to use
        run: echo "GOVERSION=$(sed -n 's/^go \([0-9.]*\)/\1/p' go.mod)" >> $GITHUB_ENV
      - uses: actions/setup-go@v4 # v4.0.0
        with:
          go-version: ${{ env.GOVERSION }}
      - name: golangci-lint
        uses: golangci/golangci-lint-action@08e2f20817b15149a52b5b3ebe7de50aff2ba8c5 # v3.4.0
        timeout-minutes: 5
        with:
          # Required: the version of golangci-lint is required and must be specified without patch version: we always use the latest patch version.
          version: v1.51.0

  build:
    name: verify build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3 # v3.5.0
      - name: Extract version of Go to use
        run: echo "GOVERSION=$(sed -n 's/^go \([0-9.]*\)/\1/p' go.mod)" >> $GITHUB_ENV
      - uses: actions/setup-go@v4 # v4.0.0
        with:
          go-version: 1.20.0
      - name: build
        run: make build

  test:
    name: Test
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      # Checkout your project with git
      - name: Checkout
        uses: actions/checkout@v3

      # Install Go on the VM running the action.
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.20.0

      # Install gotestfmt on the VM running the action.
      - name: Set up gotestfmt
        uses: GoTestTools/gotestfmt-action@v2
        with:
          # Optional: pass GITHUB_TOKEN to avoid rate limiting.
          token: ${{ secrets.GITHUB_TOKEN }}
          # Optional: pass the gotestfmt version you want to run.
          version: v2.0.0
          # Optional: pass an organization name and repo to use a fork
          org: GoTestTools
          repo: gotestfmt

      # copy config file into place
      - name: Copy config file
        run: cp config/config.yaml.example ./config.yaml

      # Migrate the database
      - name: Migrate database
        run: make migrateup

      # Run the tests
      - name: Run tests
        run: make test
