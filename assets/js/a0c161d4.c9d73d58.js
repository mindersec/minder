"use strict";(self.webpackChunkstacklok=self.webpackChunkstacklok||[]).push([[1143],{68e3:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>o,contentTitle:()=>p,default:()=>a,frontMatter:()=>l,metadata:()=>s,toc:()=>c});var t=r(74848),i=r(28453);const l={title:"minder ruletype apply"},p=void 0,s={id:"ref/cli/minder_ruletype_apply",title:"minder ruletype apply",description:"minder ruletype apply",source:"@site/docs/ref/cli/minder_ruletype_apply.md",sourceDirName:"ref/cli",slug:"/ref/cli/minder_ruletype_apply",permalink:"/ref/cli/minder_ruletype_apply",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"minder ruletype apply"},sidebar:"minder",previous:{title:"minder ruletype",permalink:"/ref/cli/minder_ruletype"},next:{title:"minder ruletype create",permalink:"/ref/cli/minder_ruletype_create"}},o={},c=[{value:"minder ruletype apply",id:"minder-ruletype-apply",level:2},{value:"Synopsis",id:"synopsis",level:3},{value:"Options",id:"options",level:3},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:3},{value:"SEE ALSO",id:"see-also",level:3}];function d(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"minder-ruletype-apply",children:"minder ruletype apply"}),"\n",(0,t.jsx)(n.p,{children:"Apply a rule type"}),"\n",(0,t.jsx)(n.h3,{id:"synopsis",children:"Synopsis"}),"\n",(0,t.jsx)(n.p,{children:"The ruletype apply subcommand lets you create or update rule types for a project within Minder."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"minder ruletype apply [flags]\n"})}),"\n",(0,t.jsx)(n.h3,{id:"options",children:"Options"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"  -f, --file stringArray   Path to the YAML defining the rule type (or - for stdin). Can be specified multiple times. Can be a directory.\n  -h, --help               help for apply\n"})}),"\n",(0,t.jsx)(n.h3,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'      --config string            Config file (default is $PWD/config.yaml)\n      --grpc-host string         Server host (default "api.stacklok.com")\n      --grpc-insecure            Allow establishing insecure connections\n      --grpc-port int            Server port (default 443)\n      --identity-client string   Identity server client ID (default "minder-cli")\n      --identity-url string      Identity server issuer URL (default "https://auth.stacklok.com")\n  -j, --project string           ID of the project\n'})}),"\n",(0,t.jsx)(n.h3,{id:"see-also",children:"SEE ALSO"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"/ref/cli/minder_ruletype",children:"minder ruletype"}),"\t - Manage rule types"]}),"\n"]})]})}function a(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},28453:(e,n,r)=>{r.d(n,{R:()=>p,x:()=>s});var t=r(96540);const i={},l=t.createContext(i);function p(e){const n=t.useContext(l);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:p(e.components),t.createElement(l.Provider,{value:n},e.children)}}}]);