"use strict";(self.webpackChunkstacklok=self.webpackChunkstacklok||[]).push([[3064],{91147:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>c,contentTitle:()=>s,default:()=>a,frontMatter:()=>l,metadata:()=>d,toc:()=>o});var t=n(74848),i=n(28453);const l={title:"minder ruletype"},s=void 0,d={id:"ref/cli/minder_ruletype",title:"minder ruletype",description:"minder ruletype",source:"@site/docs/ref/cli/minder_ruletype.md",sourceDirName:"ref/cli",slug:"/ref/cli/minder_ruletype",permalink:"/ref/cli/minder_ruletype",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"minder ruletype"},sidebar:"minder",previous:{title:"minder repo register",permalink:"/ref/cli/minder_repo_register"},next:{title:"minder ruletype apply",permalink:"/ref/cli/minder_ruletype_apply"}},c={},o=[{value:"minder ruletype",id:"minder-ruletype",level:2},{value:"Synopsis",id:"synopsis",level:3},{value:"Options",id:"options",level:3},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:3},{value:"SEE ALSO",id:"see-also",level:3}];function p(e){const r={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.h2,{id:"minder-ruletype",children:"minder ruletype"}),"\n",(0,t.jsx)(r.p,{children:"Manage rule types"}),"\n",(0,t.jsx)(r.h3,{id:"synopsis",children:"Synopsis"}),"\n",(0,t.jsx)(r.p,{children:"The ruletype subcommands allows the management of rule types within Minder."}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{children:"minder ruletype [flags]\n"})}),"\n",(0,t.jsx)(r.h3,{id:"options",children:"Options"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{children:"  -h, --help             help for ruletype\n  -j, --project string   ID of the project\n"})}),"\n",(0,t.jsx)(r.h3,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{children:'      --config string            Config file (default is $PWD/config.yaml)\n      --grpc-host string         Server host (default "api.stacklok.com")\n      --grpc-insecure            Allow establishing insecure connections\n      --grpc-port int            Server port (default 443)\n      --identity-client string   Identity server client ID (default "minder-cli")\n      --identity-url string      Identity server issuer URL (default "https://auth.stacklok.com")\n'})}),"\n",(0,t.jsx)(r.h3,{id:"see-also",children:"SEE ALSO"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.a,{href:"/ref/cli/minder",children:"minder"}),"\t - Minder controls the hosted minder service"]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.a,{href:"/ref/cli/minder_ruletype_apply",children:"minder ruletype apply"}),"\t - Apply a rule type"]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.a,{href:"/ref/cli/minder_ruletype_create",children:"minder ruletype create"}),"\t - Create a rule type"]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.a,{href:"/ref/cli/minder_ruletype_delete",children:"minder ruletype delete"}),"\t - Delete a rule type"]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.a,{href:"/ref/cli/minder_ruletype_get",children:"minder ruletype get"}),"\t - Get details for a rule type"]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.a,{href:"/ref/cli/minder_ruletype_list",children:"minder ruletype list"}),"\t - List rule types"]}),"\n"]})]})}function a(e={}){const{wrapper:r}={...(0,i.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(p,{...e})}):p(e)}},28453:(e,r,n)=>{n.d(r,{R:()=>s,x:()=>d});var t=n(96540);const i={},l=t.createContext(i);function s(e){const r=t.useContext(l);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function d(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),t.createElement(l.Provider,{value:r},e.children)}}}]);