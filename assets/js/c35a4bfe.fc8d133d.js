"use strict";(self.webpackChunkminder_docs=self.webpackChunkminder_docs||[]).push([[1854],{12192:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>o,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"getting_started/first_profile","title":"Creating your first profile","description":"Once you have registered repositories, you can create a profile that specifies","source":"@site/docs/getting_started/first_profile.md","sourceDirName":"getting_started","slug":"/getting_started/first_profile","permalink":"/getting_started/first_profile","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":60,"frontMatter":{"title":"Creating your first profile","sidebar_position":60},"sidebar":"minder","previous":{"title":"Registering repositories","permalink":"/getting_started/register_repos"},"next":{"title":"Viewing profile status","permalink":"/getting_started/viewing_status"}}');var i=r(74848),s=r(28453);const o={title:"Creating your first profile",sidebar_position:60},a=void 0,l={},c=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Creating a profile",id:"creating-a-profile",level:2},{value:"Add rule types",id:"add-rule-types",level:3},{value:"Create the profile",id:"create-the-profile",level:3}];function d(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:"Once you have registered repositories, you can create a profile that specifies\nthe common, consistent configuration that you expect your your repositories to\ncomply with."}),"\n",(0,i.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,i.jsxs)(n.p,{children:["Before you can create a profile, you should\n",(0,i.jsx)(n.a,{href:"register_repos",children:"register repositories"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"creating-a-profile",children:"Creating a profile"}),"\n",(0,i.jsx)(n.p,{children:"A profile is composed of a set of one or more rule types, each of which scan for\nan individual piece of configuration within a repository."}),"\n",(0,i.jsx)(n.p,{children:"For example, you may have a profile that describes your organization's security\nbest practices, and this profile may have two rule types: GitHub secret scanning\nshould be enabled, and secret push protection should be enabled."}),"\n",(0,i.jsx)(n.p,{children:"In this example, Minder will scan the repositories that you've registered and\nidentify any repositories that do not have secret scanning enabled, and those\nthat do not have secret push protection enabled."}),"\n",(0,i.jsx)(n.h3,{id:"add-rule-types",children:"Add rule types"}),"\n",(0,i.jsxs)(n.p,{children:["In Minder, the rule type configuration is completely flexible, and you can\nauthor them yourself. Because of this, your Minder organization does not have\nany rule types configured when you create it. You need to configure some, and\nyou can upload some of Minder's already created rules from the\n",(0,i.jsx)(n.a,{href:"https://github.com/mindersec/minder-rules-and-profiles",children:"minder-rules-and-profiles repository"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["For example, to add a rule type that ensures that secret scanning is enabled,\nand one that ensures that secret push protection is enabled, you can download\nthe\n",(0,i.jsx)(n.a,{href:"https://github.com/mindersec/minder-rules-and-profiles/blob/main/rule-types/github/secret_scanning.yaml",children:"secret_scanning.yaml"}),"\nand\n",(0,i.jsx)(n.a,{href:"https://github.com/mindersec/minder-rules-and-profiles/blob/main/rule-types/github/secret_push_protection.yaml",children:"secret_push_protection.yaml"}),"\nrule types."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"curl -LO https://raw.githubusercontent.com/mindersec/minder-rules-and-profiles/main/rule-types/github/secret_scanning.yaml\ncurl -LO https://raw.githubusercontent.com/mindersec/minder-rules-and-profiles/main/rule-types/github/secret_push_protection.yaml\n"})}),"\n",(0,i.jsx)(n.p,{children:"Once you've downloaded the rule type configuration from GitHub, you can upload\nthem to your Minder organization."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"minder ruletype create -f secret_scanning.yaml\nminder ruletype create -f secret_push_protection.yaml\n"})}),"\n",(0,i.jsx)(n.h3,{id:"create-the-profile",children:"Create the profile"}),"\n",(0,i.jsx)(n.p,{children:"Once you have added the rule type definitions to Minder, you can create a\nprofile that uses them to scan your repositories."}),"\n",(0,i.jsx)(n.p,{children:"Like rules, profiles are defined in YAML. They specify the rules that apply to\nyour organization, whether you want to be alerted with GitHub Security\nAdvisories, and whether you want Minder to try to automatically remediate\nproblems when they're found."}),"\n",(0,i.jsxs)(n.p,{children:["To create a profile that checks for secret scanning and secret push protection\nin your repositories, create a file called ",(0,i.jsx)(n.code,{children:"my_profile.yaml"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"---\nversion: v1\ntype: profile\nname: my_profile\ncontext:\n  provider: github\nalert: 'on'\nremediate: 'off'\nrepository:\n  - type: secret_scanning\n    def:\n      enabled: true\n  - type: secret_push_protection\n    def:\n      enabled: true\n"})}),"\n",(0,i.jsx)(n.p,{children:"Then upload the profile configuration to Minder:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"minder profile create -f my_profile.yaml\n"})}),"\n",(0,i.jsx)(n.p,{children:"Check the status of the profile:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"minder profile status list --name my_profile\n"})}),"\n",(0,i.jsxs)(n.p,{children:["If all registered repositories have secret scanning enabled, you will see the\n",(0,i.jsx)(n.code,{children:"OVERALL STATUS"})," is ",(0,i.jsx)(n.code,{children:"Success"}),", otherwise the overall status is ",(0,i.jsx)(n.code,{children:"Failure"}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-plain",children:"+--------------------------------------+------------+----------------+----------------------+\n|                  ID                  |    NAME    | OVERALL STATUS |     LAST UPDATED     |\n+--------------------------------------+------------+----------------+----------------------+\n| 1abcae55-5eb8-4d9e-847c-18e605fbc1cc | my_profile |    Success     | 2023-11-06T17:42:04Z |\n+--------------------------------------+------------+----------------+----------------------+\n"})}),"\n",(0,i.jsxs)(n.p,{children:["If secret scanning is not enabled, you will see ",(0,i.jsx)(n.code,{children:"Failure"})," instead of ",(0,i.jsx)(n.code,{children:"Success"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"See a detailed view of which repositories satisfy the secret scanning rule:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"minder profile status list --name my_profile --detailed\n"})})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},28453:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>a});var t=r(96540);const i={},s=t.createContext(i);function o(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);