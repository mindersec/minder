"use strict";(self.webpackChunkminder_docs=self.webpackChunkminder_docs||[]).push([[9706],{56161:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>u,frontMatter:()=>l,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"understand/alerts","title":"Alerting","description":"Minder issues alerts to notify you when the state of your software supply","source":"@site/docs/understand/alerts.md","sourceDirName":"understand","slug":"/understand/alerts","permalink":"/understand/alerts","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":60,"frontMatter":{"title":"Alerting","sidebar_position":60},"sidebar":"minder","previous":{"title":"Rule evaluations","permalink":"/understand/rule_evaluation"},"next":{"title":"Automatic remediation","permalink":"/understand/remediations"}}');var r=t(74848),s=t(28453);const l={title:"Alerting",sidebar_position:60},o=void 0,a={},d=[{value:"Enabling alerts in a profile",id:"enabling-alerts-in-a-profile",level:2},{value:"Alert types",id:"alert-types",level:2},{value:"Configuring alerts in profiles",id:"configuring-alerts-in-profiles",level:2}];function c(e){const n={a:"a",code:"code",em:"em",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:["Minder issues ",(0,r.jsx)(n.em,{children:"alerts"})," to notify you when the state of your software supply\nchain does not meet the criteria that you've defined in your\n",(0,r.jsx)(n.a,{href:"/understand/profiles",children:"profile"}),"."]}),"\n",(0,r.jsx)(n.p,{children:"Alerts are a core feature of Minder providing you with notifications about the\nstatus of your registered repositories. These alerts automatically open and\nclose based on the evaluation of the rules defined in your profiles."}),"\n",(0,r.jsx)(n.p,{children:"When a rule fails, Minder opens an alert to bring your attention to the\nnon-compliance issue. Conversely, when the rule evaluation passes, Minder will\nautomatically close any previously opened alerts related to that rule."}),"\n",(0,r.jsx)(n.p,{children:"In the alert, you'll be able to see details such as:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"The repository that is affected"}),"\n",(0,r.jsx)(n.li,{children:"The rule type that failed"}),"\n",(0,r.jsx)(n.li,{children:"The profile that the rule belongs to"}),"\n",(0,r.jsx)(n.li,{children:"Guidance on how to remediate and also fix the issue"}),"\n",(0,r.jsx)(n.li,{children:"Severity of the issue. The severity of the alert is based on what is set in\nthe rule type definition."}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"enabling-alerts-in-a-profile",children:"Enabling alerts in a profile"}),"\n",(0,r.jsx)(n.p,{children:'To activate the alert feature within a profile, you need to adjust the YAML\ndefinition. Specifically, you should set the alert parameter to "on":'}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"alert: 'on'\n"})}),"\n",(0,r.jsx)(n.p,{children:"Enabling alerts at the profile level means that for any rules included in the\nprofile, alerts will be generated for any rule failures. For better clarity,\nconsider this rule snippet:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"---\nversion: v1\ntype: rule-type\nname: sample_rule\ndef:\n  alert:\n    type: security_advisory\n    security_advisory:\n      severity: 'medium'\n"})}),"\n",(0,r.jsxs)(n.p,{children:["In this example, the ",(0,r.jsx)(n.code,{children:"sample_rule"})," defines an alert action that creates a medium\nseverity security advisory in the repository for any non-compliant repositories."]}),"\n",(0,r.jsx)(n.p,{children:"Now, let's see how this works in practice within a profile. Consider the\nfollowing profile configuration with alerts turned on:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"version: v1\ntype: profile\nname: sample-profile\ncontext:\n  provider: github\nalert: 'on'\nrepository:\n  - type: sample_rule\n    def:\n      enabled: true\n"})}),"\n",(0,r.jsxs)(n.p,{children:["In this profile, all repositories that do not meet the conditions specified in\nthe ",(0,r.jsx)(n.code,{children:"sample_rule"})," will automatically generate security advisories."]}),"\n",(0,r.jsx)(n.h2,{id:"alert-types",children:"Alert types"}),"\n",(0,r.jsx)(n.p,{children:"Minder supports alerts of type GitHub Security Advisory."}),"\n",(0,r.jsx)(n.p,{children:"The following is an example of how the alert definition looks like for a give\nrule type:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"---\nversion: v1\ntype: rule-type\nname: artifact_signature\n---\ndef:\n  # Defines the configuration for alerting on the rule\n  alert:\n    type: security_advisory\n    security_advisory:\n      severity: 'medium'\n"})}),"\n",(0,r.jsx)(n.h2,{id:"configuring-alerts-in-profiles",children:"Configuring alerts in profiles"}),"\n",(0,r.jsxs)(n.p,{children:["Alerts are configured in the ",(0,r.jsx)(n.code,{children:"alert"})," section of the profile yaml file. The\nfollowing example shows how to configure alerts for a profile:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"---\nversion: v1\ntype: profile\nname: github-profile\ncontext:\n  provider: github\nalert: 'on'\nrepository:\n  - type: secret_scanning\n    def:\n      enabled: true\n"})}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"alert"})," section can be configured with the following values: ",(0,r.jsx)(n.code,{children:"on"})," (default),\n",(0,r.jsx)(n.code,{children:"off"})," and ",(0,r.jsx)(n.code,{children:"dry_run"}),". Dry run would be useful for testing. In ",(0,r.jsx)(n.code,{children:"dry_run"})," Minder\nwill process the alert conditions and output the resulted REST call, but it\nwon't execute it."]})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>o});var i=t(96540);const r={},s=i.createContext(r);function l(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);