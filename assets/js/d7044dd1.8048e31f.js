"use strict";(self.webpackChunkminder_docs=self.webpackChunkminder_docs||[]).push([[5629],{61133:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>o,contentTitle:()=>l,default:()=>a,frontMatter:()=>d,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"how-to/profile_selectors","title":"Apply a profile to a subset of entities","description":"Profiles allow you to apply a consistent set of rules to a group of entities within your project. By default, these","source":"@site/docs/how-to/profile_selectors.md","sourceDirName":"how-to","slug":"/how-to/profile_selectors","permalink":"/how-to/profile_selectors","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":130,"frontMatter":{"sidebar_position":130,"title":"Apply a profile to a subset of entities"},"sidebar":"minder","previous":{"title":"Using Mindev to develop and debug rule types","permalink":"/how-to/mindev"},"next":{"title":"Get hacking","permalink":"/developer_guide/get-hacking"}}');var s=t(74848),n=t(28453);const d={sidebar_position:130,title:"Apply a profile to a subset of entities"},l="Apply a profile to a subset of entities",o={},c=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Add a selector to a profile",id:"add-a-selector-to-a-profile",level:2},{value:"Repository selectors",id:"repository-selectors",level:2},{value:"Repository properties set by the GitHub provider",id:"repository-properties-set-by-the-github-provider",level:2},{value:"Artifact selectors",id:"artifact-selectors",level:2},{value:"Artifact properties set by the GitHub provider",id:"artifact-properties-set-by-the-github-provider",level:2},{value:"Pull request selectors",id:"pull-request-selectors",level:2},{value:"Pull request properties set by the GitHub provider",id:"pull-request-properties-set-by-the-github-provider",level:2},{value:"Entity provider selectors",id:"entity-provider-selectors",level:2}];function h(e){const r={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,n.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.header,{children:(0,s.jsx)(r.h1,{id:"apply-a-profile-to-a-subset-of-entities",children:"Apply a profile to a subset of entities"})}),"\n",(0,s.jsx)(r.p,{children:"Profiles allow you to apply a consistent set of rules to a group of entities within your project. By default, these\nprofiles are applied universally across all entities in a project. However, you may need to target a specific subset, such as\nrepositories belonging to a specific organization. Minder simplifies this process with profile selectors, enabling you\nto easily customize which entities a profile applies to."}),"\n",(0,s.jsx)(r.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:["The ",(0,s.jsx)(r.code,{children:"minder"})," CLI application"]}),"\n",(0,s.jsxs)(r.li,{children:["A Minder account with\n",(0,s.jsxs)(r.a,{href:"/user_management/user_roles",children:["at least ",(0,s.jsx)(r.code,{children:"editor"})," permission"]})]}),"\n",(0,s.jsx)(r.li,{children:"An enrolled Provider (e.g., GitHub) and registered repositories"}),"\n"]}),"\n",(0,s.jsx)(r.h2,{id:"add-a-selector-to-a-profile",children:"Add a selector to a profile"}),"\n",(0,s.jsxs)(r.p,{children:["Selectors are written using ",(0,s.jsx)(r.a,{href:"https://github.com/google/cel-spec",children:"CEL (Common Expression Language)"}),". To add a selector to\nyour profile, you need to define the entity and the condition you want to apply. Below is an example showing how to\nconfigure a selector to filter repositories and artifacts:"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-yaml",children:"name: profile-with-selectors\nselection:\n  - entity: repository\n    selector: repository.is_fork != true && repository.name.startsWith('stacklok/')\n  - entity: artifact\n    selector: artifact.provider.name == 'github-app-stacklok'\n  - entity: repository\n    selector: repository.properties['github/license'].contains('GPL') == true\n    comment: \"Be extra careful with GPL licenses\"\n  - entity: repository\n    selector: repository.properties['github/primary_language'] == 'Go'\n    comment: \"Only Go repositories\"\n  - entity: repository\n    selector: repository.provider.class.contains('github')\n    comment: \"Only github repositories\"\n"})}),"\n",(0,s.jsx)(r.p,{children:"Let's break down the example above:"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"entity"}),": Defines the type of entity you want to filter (",(0,s.jsx)(r.code,{children:"repository"}),", ",(0,s.jsx)(r.code,{children:"artifact"}),", or ",(0,s.jsx)(r.code,{children:"pull_request"}),"). In the case that the ",(0,s.jsx)(r.code,{children:"entity"})," type is omitted, the selector will be applied to all entities."]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"selector"}),": The CEL expression that specifies the filtering criteria. In the example:","\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsx)(r.li,{children:"The first selector filters repositories to include only those that are not forks and whose name starts with stacklok. In other words, those that are part of the stacklok organization."}),"\n",(0,s.jsxs)(r.li,{children:["The second selector filters artifacts to include only those provided by ",(0,s.jsx)(r.code,{children:"github-app-stacklok"}),"."]}),"\n",(0,s.jsx)(r.li,{children:"The third selector filters repositories to include only those with a GPL license and the fourth selector filters repositories to include only those written in Go. These two selectors use the properties map which is provider-specific."}),"\n",(0,s.jsx)(r.li,{children:"The fourth selector filters repositories to include only that use Go as the primary language."}),"\n",(0,s.jsxs)(r.li,{children:["The fifth selector filters repositories to include only those provided by the GitHub provider. We use the ",(0,s.jsx)(r.code,{children:"contains"})," function to check if the provider class contains the string ",(0,s.jsx)(r.code,{children:"github"})," to cover for both ",(0,s.jsx)(r.code,{children:"github"})," and ",(0,s.jsx)(r.code,{children:"github-app"})," providers."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(r.p,{children:"Below you can find the full list of selectors available for each entity type."}),"\n",(0,s.jsx)(r.h2,{id:"repository-selectors",children:"Repository selectors"}),"\n",(0,s.jsx)(r.p,{children:"Selectors for repositories allow you to filter and manage repositories based on specific attributes and properties. The attributes are common to all providers, while the properties are provider-specific and prefixed with the provider name."}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Field"}),(0,s.jsx)(r.th,{children:"Description"}),(0,s.jsx)(r.th,{children:"Type"})]})}),(0,s.jsxs)(r.tbody,{children:[(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"name"})}),(0,s.jsx)(r.td,{children:"The full name of the repository, e.g. mindersec/minder"}),(0,s.jsx)(r.td,{children:"string"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"is_fork"})}),(0,s.jsxs)(r.td,{children:[(0,s.jsx)(r.code,{children:"true"})," if the repository is a fork, ",(0,s.jsx)(r.code,{children:"nil"})," if unknown or not applicable to this provider"]}),(0,s.jsx)(r.td,{children:"bool"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"is_private"})}),(0,s.jsxs)(r.td,{children:[(0,s.jsx)(r.code,{children:"true"})," if the repository is private, ",(0,s.jsx)(r.code,{children:"nil"})," if unknown or not applicable to this provider"]}),(0,s.jsx)(r.td,{children:"bool"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"provider"})}),(0,s.jsxs)(r.td,{children:["The provider of the repository, for more details see ",(0,s.jsx)(r.a,{href:"#entity-provider-selectors",children:"Provider Selectors"})]}),(0,s.jsx)(r.td,{children:"ProviderSelector"})]})]})]}),"\n",(0,s.jsx)(r.h2,{id:"repository-properties-set-by-the-github-provider",children:"Repository properties set by the GitHub provider"}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Field"}),(0,s.jsx)(r.th,{children:"Description"}),(0,s.jsx)(r.th,{children:"Type"})]})}),(0,s.jsxs)(r.tbody,{children:[(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"github/license"})}),(0,s.jsx)(r.td,{children:"The license of the repository, e.g. MIT, GPL, Apache-2.0, etc."}),(0,s.jsx)(r.td,{children:"string"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"github/primary_language"})}),(0,s.jsx)(r.td,{children:"The primary language of the repository, e.g. Go, Python, Java, etc."}),(0,s.jsx)(r.td,{children:"string"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"github/default_branch"})}),(0,s.jsxs)(r.td,{children:["The default branch of the repository, e.g. ",(0,s.jsx)(r.code,{children:"main"}),", ",(0,s.jsx)(r.code,{children:"master"}),", etc."]}),(0,s.jsx)(r.td,{children:"string"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"github/repo_id"})}),(0,s.jsx)(r.td,{children:"The github repo ID"}),(0,s.jsx)(r.td,{children:"integer"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"github/repo_name"})}),(0,s.jsxs)(r.td,{children:["The github repo name (e.g. ",(0,s.jsx)(r.code,{children:"stacklok"}),")"]}),(0,s.jsx)(r.td,{children:"string"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"github/repo_owner"})}),(0,s.jsxs)(r.td,{children:["The github repo owner (e.g. ",(0,s.jsx)(r.code,{children:"minder"}),")"]}),(0,s.jsx)(r.td,{children:"string"})]})]})]}),"\n",(0,s.jsx)(r.h2,{id:"artifact-selectors",children:"Artifact selectors"}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Field"}),(0,s.jsx)(r.th,{children:"Description"}),(0,s.jsx)(r.th,{children:"Type"})]})}),(0,s.jsxs)(r.tbody,{children:[(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"name"})}),(0,s.jsx)(r.td,{children:"The full name of the artifact, e.g. mindersec/minder-server"}),(0,s.jsx)(r.td,{children:"string"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"type"})}),(0,s.jsx)(r.td,{children:'The type of the artifact, e.g. "container"'}),(0,s.jsx)(r.td,{children:"string"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"provider"})}),(0,s.jsxs)(r.td,{children:["The provider of the artifact, for more details see ",(0,s.jsx)(r.a,{href:"#entity-provider-selectors",children:"Provider Selectors"})]}),(0,s.jsx)(r.td,{children:"ProviderSelector"})]})]})]}),"\n",(0,s.jsx)(r.h2,{id:"artifact-properties-set-by-the-github-provider",children:"Artifact properties set by the GitHub provider"}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Field"}),(0,s.jsx)(r.th,{children:"Description"}),(0,s.jsx)(r.th,{children:"Type"})]})}),(0,s.jsxs)(r.tbody,{children:[(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"github/created_at"})}),(0,s.jsx)(r.td,{children:"The time the artifact was created formatted as RFC3339 string"}),(0,s.jsx)(r.td,{children:"string"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"github/name"})}),(0,s.jsx)(r.td,{children:"The full name of the artifact."}),(0,s.jsx)(r.td,{children:"string"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"github/type"})}),(0,s.jsx)(r.td,{children:'The type of the artifact, e.g. "container"'}),(0,s.jsx)(r.td,{children:"string"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"github/visibility"})}),(0,s.jsx)(r.td,{children:'The visibility of the artifact, e.g. "public"'}),(0,s.jsx)(r.td,{children:"string"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"github/owner"})}),(0,s.jsx)(r.td,{children:"The full name of the artifact owner. Can be a repo or an org."}),(0,s.jsx)(r.td,{children:"string"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"github/repo"})}),(0,s.jsxs)(r.td,{children:["The github repo full name (e.g. ",(0,s.jsx)(r.code,{children:"mindersec/minder"}),"). Empty for org packages."]}),(0,s.jsx)(r.td,{children:"string"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"github/repo_name"})}),(0,s.jsxs)(r.td,{children:["The github repo name (e.g. ",(0,s.jsx)(r.code,{children:"stacklok"}),"). Empty for org packages."]}),(0,s.jsx)(r.td,{children:"string"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"github/repo_owner"})}),(0,s.jsxs)(r.td,{children:["The github repo owner (e.g. ",(0,s.jsx)(r.code,{children:"minder"}),"). Empty for org packages."]}),(0,s.jsx)(r.td,{children:"string"})]})]})]}),"\n",(0,s.jsx)(r.h2,{id:"pull-request-selectors",children:"Pull request selectors"}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Field"}),(0,s.jsx)(r.th,{children:"Description"}),(0,s.jsx)(r.th,{children:"Type"})]})}),(0,s.jsx)(r.tbody,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"name"})}),(0,s.jsx)(r.td,{children:"The full name of the pull request, e.g. mindersec/minder/123"}),(0,s.jsx)(r.td,{children:"string"})]})})]}),"\n",(0,s.jsx)(r.h2,{id:"pull-request-properties-set-by-the-github-provider",children:"Pull request properties set by the GitHub provider"}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Field"}),(0,s.jsx)(r.th,{children:"Description"}),(0,s.jsx)(r.th,{children:"Type"})]})}),(0,s.jsxs)(r.tbody,{children:[(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"github/pull_url"})}),(0,s.jsx)(r.td,{children:"The URL of the pull request"}),(0,s.jsx)(r.td,{children:"string"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"github/pull_number"})}),(0,s.jsx)(r.td,{children:"The number of the pull request"}),(0,s.jsx)(r.td,{children:"string"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"github/pull_author_id"})}),(0,s.jsx)(r.td,{children:"The numerical ID of the author of the pull request"}),(0,s.jsx)(r.td,{children:"int"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"github/pull_author_login"})}),(0,s.jsx)(r.td,{children:"The github login of the author of the pull request"}),(0,s.jsx)(r.td,{children:"string"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"github/repo_name"})}),(0,s.jsxs)(r.td,{children:["The github repo name (e.g. ",(0,s.jsx)(r.code,{children:"stacklok"}),")."]}),(0,s.jsx)(r.td,{children:"string"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"github/repo_owner"})}),(0,s.jsxs)(r.td,{children:["The github repo owner (e.g. ",(0,s.jsx)(r.code,{children:"minder"}),")."]}),(0,s.jsx)(r.td,{children:"string"})]})]})]}),"\n",(0,s.jsx)(r.h2,{id:"entity-provider-selectors",children:"Entity provider selectors"}),"\n",(0,s.jsx)(r.p,{children:"Each entity can be filtered based on its provider."}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Field"}),(0,s.jsx)(r.th,{children:"Description"}),(0,s.jsx)(r.th,{children:"Type"})]})}),(0,s.jsxs)(r.tbody,{children:[(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"name"})}),(0,s.jsx)(r.td,{children:"The name of the provider, e.g. github-app-stacklok"}),(0,s.jsx)(r.td,{children:"string"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"class"})}),(0,s.jsx)(r.td,{children:"The class of the provider, e.g. github-app"}),(0,s.jsx)(r.td,{children:"string"})]})]})]})]})}function a(e={}){const{wrapper:r}={...(0,n.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},28453:(e,r,t)=>{t.d(r,{R:()=>d,x:()=>l});var i=t(96540);const s={},n=i.createContext(s);function d(e){const r=i.useContext(n);return i.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function l(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),i.createElement(n.Provider,{value:r},e.children)}}}]);