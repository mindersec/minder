"use strict";(self.webpackChunkminder_docs=self.webpackChunkminder_docs||[]).push([[5340],{60382:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>o,contentTitle:()=>c,default:()=>h,frontMatter:()=>s,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"how-to/artifact_signatures","title":"Check artifact provenance","description":"With Minder you can create rules that assert that artifacts built from your","source":"@site/docs/how-to/artifact_signatures.md","sourceDirName":"how-to","slug":"/how-to/artifact_signatures","permalink":"/how-to/artifact_signatures","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":55,"frontMatter":{"title":"Check artifact provenance","sidebar_position":55},"sidebar":"minder","previous":{"title":"Enabling pull request reviews","permalink":"/how-to/pr_reviews"},"next":{"title":"Setting up a profile for automatic remediation","permalink":"/how-to/setup-autoremediation"}}');var a=r(74848),i=r(28453);const s={title:"Check artifact provenance",sidebar_position:55},c=void 0,o={},l=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Create the artifact provenance rule type",id:"create-the-artifact-provenance-rule-type",level:2},{value:"Define a simple profile that checks artifact signatures",id:"define-a-simple-profile-that-checks-artifact-signatures",level:2},{value:"Define a more advanced profile that checks artifact provenance",id:"define-a-more-advanced-profile-that-checks-artifact-provenance",level:2}];function d(e){const t={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.p,{children:"With Minder you can create rules that assert that artifacts built from your\nrepositories are built from trusted sources and using trusted workflows based on\ntheir cryptographically signed provenance."}),"\n",(0,a.jsxs)(t.p,{children:["This is done by creating a profile which utilizes the ",(0,a.jsx)(t.code,{children:"artifact_signature"}),"\n",(0,a.jsx)(t.code,{children:"rule_type"}),"."]}),"\n",(0,a.jsx)(t.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:["The ",(0,a.jsx)(t.code,{children:"minder"})," CLI application"]}),"\n",(0,a.jsxs)(t.li,{children:["A Minder account with\n",(0,a.jsxs)(t.a,{href:"/user_management/user_roles",children:["at least ",(0,a.jsx)(t.code,{children:"editor"})," permission"]})]}),"\n",(0,a.jsx)(t.li,{children:"An enrolled provider (e.g., GitHub)"}),"\n",(0,a.jsxs)(t.li,{children:["A repository that produces container images. At the moment Minder's artifact\nsignature checks are only available for container images and only the\n",(0,a.jsx)(t.code,{children:"ghcr.io"})," registry is supported."]}),"\n"]}),"\n",(0,a.jsx)(t.h2,{id:"create-the-artifact-provenance-rule-type",children:"Create the artifact provenance rule type"}),"\n",(0,a.jsxs)(t.p,{children:["Fetch all the reference rules by cloning the\n",(0,a.jsx)(t.a,{href:"https://github.com/mindersec/minder-rules-and-profiles",children:"minder-rules-and-profiles repository"}),"."]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-bash",children:"git clone https://github.com/mindersec/minder-rules-and-profiles.git\n"})}),"\n",(0,a.jsx)(t.p,{children:"In that directory you can find all the reference rules and profiles."}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-bash",children:"cd minder-rules-and-profiles\n"})}),"\n",(0,a.jsxs)(t.p,{children:["Create the ",(0,a.jsx)(t.code,{children:"artifact_signature"})," rule type in Minder:"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-bash",children:"minder ruletype create -f rule-types/github/artifact_signature.yaml\n"})}),"\n",(0,a.jsx)(t.h2,{id:"define-a-simple-profile-that-checks-artifact-signatures",children:"Define a simple profile that checks artifact signatures"}),"\n",(0,a.jsx)(t.p,{children:"Next, create a profile that applies the rule type to the appropriate artifact."}),"\n",(0,a.jsxs)(t.p,{children:["The artifacts are referred to by name and tag. If the name is not specified, the\nrule will match any artifact name. The tag can be specified either as a list of\ntags using the ",(0,a.jsx)(t.code,{children:"tags"})," parameter or as a regular expression using the ",(0,a.jsx)(t.code,{children:"tag_regex"}),"\nparameter. If both are empty, the rule will match any tag. It is an error to\nspecify both ",(0,a.jsx)(t.code,{children:"tags"})," and ",(0,a.jsx)(t.code,{children:"tag_regex"}),"."]}),"\n",(0,a.jsxs)(t.p,{children:["Create a new file called ",(0,a.jsx)(t.code,{children:"profile-artifact-simple.yaml"}),". The following example\nwould match a container image named ",(0,a.jsx)(t.code,{children:"good-repo-go"})," with the ",(0,a.jsx)(t.code,{children:"latest"})," tag. The\nprofile would pass for any artifact that has a signature, regardless of who\nsigned it."]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-yaml",children:"---\n# sample policy for validating artifact signatures\nversion: v1\ntype: profile\nname: latest-artifact-simple\ncontext:\n  provider: github\nartifact:\n  - type: artifact_signature\n    params:\n      tags: [latest]\n      name: good-repo-go\n    def:\n      is_signed: true\n      is_verified: true\n"})}),"\n",(0,a.jsx)(t.p,{children:"Create the profile in Minder:"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-bash",children:"minder profile create -f profile-artifact-simple.yaml\n"})}),"\n",(0,a.jsx)(t.p,{children:"Once the profile is created, Minder will start checking the artifacts produced\nby the enrolled repositories and the policy status will be updated accordingly.\nIf the artifact is not matching the expected provenance (for example someone\npushes a new image to the registry without signing it), a violation is presented\nvia the profile status and an alert is raised."}),"\n",(0,a.jsx)(t.h2,{id:"define-a-more-advanced-profile-that-checks-artifact-provenance",children:"Define a more advanced profile that checks artifact provenance"}),"\n",(0,a.jsxs)(t.p,{children:["As the next step, let's create a profile that checks the provenance of the\nartifact. Create a new file called ",(0,a.jsx)(t.code,{children:"profile-artifact-provenance.yaml"}),"."]}),"\n",(0,a.jsxs)(t.p,{children:["The profile would pass only if the container was built from the ",(0,a.jsx)(t.code,{children:"main"})," branch of\nthe ",(0,a.jsx)(t.code,{children:"good-repo-go"})," repository, using the ",(0,a.jsx)(t.code,{children:"build-image-signed-ghat.yml"})," workflow\nusing a hosted GitHub runner."]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-yaml",children:"---\n# sample policy for validating artifact provenance\nversion: v1\ntype: profile\nname: latest-artifact-hardened\ncontext:\n  provider: github\nartifact:\n  - type: artifact_signature\n    params:\n      tags: [latest]\n      name: good-repo-go\n    def:\n      is_signed: true\n      is_verified: true\n      branch: main\n      signer_identity: build-image-signed-ghat.yml\n      runner_environment: github-hosted\n      repository: https://github.com/mytestorg/good-repo-go\n      cert_issuer: https://token.actions.githubusercontent.com\n"})}),"\n",(0,a.jsx)(t.p,{children:"Create the profile in Minder:"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-bash",children:"minder profile create -f profile-artifact-provenance.yaml\n"})}),"\n",(0,a.jsx)(t.p,{children:"Once the profile is created, Minder will start checking the artifacts produced\nby the enrolled repositories and the policy status will be updated accordingly.\nIf the artifact is not matching the expected provenance (for example someone\npushes a new image to the registry after having signed the image with their\npersonal account or the image is built from a different workflow or a different\nbranch), a violation is presented via the profile status and an alert is raised."})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},28453:(e,t,r)=>{r.d(t,{R:()=>s,x:()=>c});var n=r(96540);const a={},i=n.createContext(a);function s(e){const t=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),n.createElement(i.Provider,{value:t},e.children)}}}]);