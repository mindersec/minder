"use strict";(self.webpackChunkminder_docs=self.webpackChunkminder_docs||[]).push([[5882],{33361:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"ref/rules/pr_trusty_check","title":"Stacklok Insight rule","description":"The following rule type is available to check dependency risk with","source":"@site/docs/ref/rules/pr_trusty_check.md","sourceDirName":"ref/rules","slug":"/ref/rules/pr_trusty_check","permalink":"/ref/rules/pr_trusty_check","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":90,"frontMatter":{"title":"Stacklok Insight rule","sidebar_label":"Stacklok Insight check","sidebar_position":90},"sidebar":"minder","previous":{"title":"Secret scanning","permalink":"/ref/rules/secret_scanning"},"next":{"title":"REST API documentation","permalink":"/ref/api"}}');var t=i(74848),r=i(28453);const o={title:"Stacklok Insight rule",sidebar_label:"Stacklok Insight check",sidebar_position:90},c=void 0,l={},a=[{value:"<code>pr_trusty_check</code> - Verifies that pull requests do not add any dependencies with risk indicators from Stacklok Insight",id:"pr_trusty_check---verifies-that-pull-requests-do-not-add-any-dependencies-with-risk-indicators-from-stacklok-insight",level:2},{value:"Entity",id:"entity",level:2},{value:"Type",id:"type",level:2},{value:"Rule parameters",id:"rule-parameters",level:2},{value:"Rule definition options",id:"rule-definition-options",level:2}];function d(e){const n={a:"a",code:"code",h2:"h2",li:"li",p:"p",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:["The following rule type is available to check dependency risk with\n",(0,t.jsx)(n.a,{href:"https://insight.stacklok.com/",children:"Stacklok Insight"}),"."]}),"\n",(0,t.jsxs)(n.h2,{id:"pr_trusty_check---verifies-that-pull-requests-do-not-add-any-dependencies-with-risk-indicators-from-stacklok-insight",children:[(0,t.jsx)(n.code,{children:"pr_trusty_check"})," - Verifies that pull requests do not add any dependencies with risk indicators from Stacklok Insight"]}),"\n",(0,t.jsxs)(n.p,{children:["This rule allows you to monitor new pull requests for newly added dependencies\nwith risk indicators from ",(0,t.jsx)(n.a,{href:"https://insight.stacklok.com/",children:"Stacklok Insight"}),". For\nevery pull request submitted to a repository, this rule will check any software\ndependencies for the supported ecosystems and flag any problems found with them.\nBased on the Stacklok Insight data, Minder can block the PR or mark the policy\nas failed."]}),"\n",(0,t.jsx)(n.h2,{id:"entity",children:"Entity"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"pull_request"})}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"type",children:"Type"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"pr_trusty_check"})}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"rule-parameters",children:"Rule parameters"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"None"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"rule-definition-options",children:"Rule definition options"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"pr_trusty_check"})," rule supports the following options:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"action"})," (string): The action to take if a risky package is found. Valid\nvalues are:","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"summary"}),": The evaluator engine will add a single summary comment with a\ntable listing risky packages found"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"profile_only"}),": The evaluator engine will merely pass on an error, marking\nthe profile as failed if a risky package is found"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"review"}),": The trusty evaluator will add a review asking for changes when\nproblematic dependencies are found. Use the review action to block any pull\nrequests introducing dependencies that break the policy established defined\nby the rule."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"ecosystem_config"}),": An array of ecosystem configurations to check. Each\necosystem configuration has the following options:","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"name"})," (string): The name of the ecosystem to check. Currently ",(0,t.jsx)(n.code,{children:"npm"})," and\n",(0,t.jsx)(n.code,{children:"pypi"})," are supported."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"score (integer)"}),": DEPRECATED - this score is deprecated and only remains\nfor backward compatibility. It always returns a value of ",(0,t.jsx)(n.code,{children:"0"}),". We recommend\nsetting this option to ",(0,t.jsx)(n.code,{children:"0"})," and using the other options to control this\nrule's behavior."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"provenance"})," (number): Minimum provenance score to consider a package's\nproof of origin satisfactory."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"activity"})," (number): Minimum activity score to consider a package as active."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"allow_malicious"})," (boolean): Don't raise an error when a PR introduces\ndependencies known to be malicious (not recommended)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"allow_deprecated"})," (boolean): Don't block when a pull request introduces\ndependencies marked as deprecated upstream."]}),"\n"]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>c});var s=i(96540);const t={},r=s.createContext(t);function o(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);