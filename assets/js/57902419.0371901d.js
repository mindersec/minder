"use strict";(self.webpackChunkminder_docs=self.webpackChunkminder_docs||[]).push([[7176],{91972:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>u,frontMatter:()=>s,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"about/roadmap","title":"Roadmap","description":"About this roadmap","source":"@site/docs/about/roadmap.md","sourceDirName":"about","slug":"/about/roadmap","permalink":"/about/roadmap","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":70,"frontMatter":{"title":"Roadmap","sidebar_position":70},"sidebar":"minder","previous":{"title":"Changelog","permalink":"/about/changelog"},"next":{"title":"Contributing to Minder","permalink":"/about/contributing"}}');var o=t(74848),r=t(28453);const s={title:"Roadmap",sidebar_position:70},a=void 0,d={},c=[{value:"About this roadmap",id:"about-this-roadmap",level:2},{value:"How to contribute",id:"how-to-contribute",level:2},{value:"In progress",id:"in-progress",level:2},{value:"Next",id:"next",level:2},{value:"Future considerations",id:"future-considerations",level:2}];function l(e){const n={a:"a",code:"code",h2:"h2",li:"li",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h2,{id:"about-this-roadmap",children:"About this roadmap"}),"\n",(0,o.jsxs)(n.p,{children:["This roadmap should serve as a reference point for Minder users and community\nmembers to understand where the project is heading. The roadmap is where you can\nlearn about what features we're working on, what stage they're in, and when we\nexpect to bring them to you. Priorities and requirements may change based on\ncommunity feedback, roadblocks encountered, community contributions, and other\nfactors. If you depend on a specific item, we encourage you to reach out to\n",(0,o.jsxs)(n.a,{href:"https://openssf.slack.com/archives/C07SP9RSM2L",children:["the Minder team on OpenSSF Slack\n(",(0,o.jsx)(n.code,{children:"#minder"}),")"]})," to get updated\nstatus information, or help us deliver that feature by contributing to Minder."]}),"\n",(0,o.jsx)(n.h2,{id:"how-to-contribute",children:"How to contribute"}),"\n",(0,o.jsxs)(n.p,{children:["Have any questions or comments about items on the Minder roadmap? Share your\nfeedback via\n",(0,o.jsx)(n.a,{href:"https://github.com/mindersec/minder/discussions",children:"Minder GitHub Discussions"}),"."]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Last updated:"})," June 2024"]}),"\n",(0,o.jsx)(n.h2,{id:"in-progress",children:"In progress"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Improved information about alerts:"})," Improve the verbiage and explanation\nabout the state of rule evaluations, and how you can remediate the problems."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Enforce license information for dependencies:"})," Ensure that dependencies in\nyour repositories use licenses that you approve."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Create policy to manage licenses in PRs:"})," Add a rule type to block and/or\nadd comments to pull requests based on the licenses of the dependencies they\nimport."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:'Generalized "provider" support:'})," Improve the ability for developers to add\nintegration points to Minder to provide custom information about entities in\ntheir software development lifecycle."]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"next",children:"Next"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Report CVEs and license info for ingested SBOMs:"}),"\nIngest SBOMS and identify dependencies; show CVEs, and license information\nincluding any changes over time."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Block PRs based on Minder rules:"})," In addition to adding comments to pull\nrequests (as is currently available), add the option to block pull requests\nas a policy remediation."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Policy events:"})," Provide information about rule evaluation as it changes,\nand historical rule evaluation."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Generate SBOMs:"})," Enable users to automatically create and sign SBOMs."]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"future-considerations",children:"Future considerations"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Project hierarchies:"})," Enable users to create nested projects and group\nrepositories within those projects. Projects will inherit profile rules in\norder to simplify profile and policy management."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Automate the generation and signing of SLSA provenance statements:"})," Enable\nusers to generate SLSA provenance statements (e.g. through SLSA GitHub\ngenerator) and sign them with Sigstore."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Register GitLab and Bitbucket repositories:"})," In addition to managing GitHub\nrepositories, enable users to manage configuration and policy for other source\ncontrol providers."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Export a Minder 'badge/certification' that shows what practices a project\nfollowed:"})," Create a badge that OSS maintainers and enterprise developers can\ncreate and share with others that asserts the Minder practices and policies\ntheir projects follow."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Temporary permissions to providers vs. long-running:"})," Policy remediation\ncurrently requires long-running permissions to providers such as GitHub;\nprovide the option to enable temporary permissions."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Create PRs for dependency updates:"})," As a policy autoremediation option,\nenable Minder to automatically create pull requests to update dependencies\nbased on vulnerabilities or license changes."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Drive policy through git (config management):"})," Enable users to dynamically\ncreate and maintain policies from other sources, e.g. Git, allowing for easier\npolicy maintenance and the ability to manage policies through GitOps\nworkflows."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Integrations with additional OSS and commercial tools:"})," Integrate with\ntools that run code and secrets scanning (eg Snyk), and behavior analysis (eg\n",(0,o.jsx)(n.a,{href:"https://github.com/ossf/package-analysis",children:"OSSF Package Analysis tool"}),")."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Help package authors improve OpenSSF Scorecard scores:"})," Provide policies\nto improve OpenSSF Scorecard scores through targeted remediations."]}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>a});var i=t(96540);const o={},r=i.createContext(o);function s(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);