"use strict";(self.webpackChunkminder_docs=self.webpackChunkminder_docs||[]).push([[8361],{3053:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>d,default:()=>c,frontMatter:()=>s,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"ref/cli/minder_provider_update","title":"minder provider update","description":"minder provider update","source":"@site/docs/ref/cli/minder_provider_update.md","sourceDirName":"ref/cli","slug":"/ref/cli/minder_provider_update","permalink":"/ref/cli/minder_provider_update","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"minder provider update"},"sidebar":"minder","previous":{"title":"minder provider list","permalink":"/ref/cli/minder_provider_list"},"next":{"title":"minder quickstart","permalink":"/ref/cli/minder_quickstart"}}');var t=r(74848),o=r(28453);const s={title:"minder provider update"},d=void 0,a={},l=[{value:"minder provider update",id:"minder-provider-update",level:2},{value:"Synopsis",id:"synopsis",level:3},{value:"Options",id:"options",level:3},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:3},{value:"SEE ALSO",id:"see-also",level:3}];function p(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"minder-provider-update",children:"minder provider update"}),"\n",(0,t.jsx)(n.p,{children:"Updates a provider's configuration"}),"\n",(0,t.jsx)(n.h3,{id:"synopsis",children:"Synopsis"}),"\n",(0,t.jsx)(n.p,{children:"The minder provider update command allows a user to update a provider's\nconfiguration after enrollement."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"minder provider update [flags]\n"})}),"\n",(0,t.jsx)(n.h3,{id:"options",children:"Options"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"  -h, --help                      help for update\n  -n, --name string               Name of the provider.\n  -s, --set-attribute strings     List of attributes to set in the config in <name>=<value> format\n  -u, --unset-attribute strings   List of attributes to unset in the config in <name> format\n"})}),"\n",(0,t.jsx)(n.h3,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'      --config string            Config file (default is $PWD/config.yaml)\n      --grpc-host string         Server host (default "api.stacklok.com")\n      --grpc-insecure            Allow establishing insecure connections\n      --grpc-port int            Server port (default 443)\n      --identity-client string   Identity server client ID (default "minder-cli")\n      --identity-url string      Identity server issuer URL (default "https://auth.stacklok.com")\n  -j, --project string           ID of the project\n  -v, --verbose                  Output additional messages to STDERR\n'})}),"\n",(0,t.jsx)(n.h3,{id:"see-also",children:"SEE ALSO"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"/ref/cli/minder_provider",children:"minder provider"}),"\t - Manage providers within a minder control plane"]}),"\n"]})]})}function c(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(p,{...e})}):p(e)}},28453:(e,n,r)=>{r.d(n,{R:()=>s,x:()=>d});var i=r(96540);const t={},o=i.createContext(t);function s(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);