"use strict";(self.webpackChunkstacklok=self.webpackChunkstacklok||[]).push([[1347],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var f=r.createContext({}),c=function(e){var t=r.useContext(f),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(f.Provider,{value:t},e.children)},s="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,f=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),s=c(n),d=o,m=s["".concat(f,".").concat(d)]||s[d]||p[d]||i;return n?r.createElement(m,l(l({ref:t},u),{},{components:n})):r.createElement(m,l({ref:t},u))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,l=new Array(i);l[0]=d;var a={};for(var f in t)hasOwnProperty.call(t,f)&&(a[f]=t[f]);a.originalType=e,a[s]="string"==typeof e?e:o,l[1]=a;for(var c=2;c<i;c++)l[c]=n[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},39514:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>f,contentTitle:()=>l,default:()=>p,frontMatter:()=>i,metadata:()=>a,toc:()=>c});var r=n(87462),o=(n(67294),n(3905));const i={title:"minder auth offline-token get"},l=void 0,a={unversionedId:"ref/cli/minder_auth_offline-token_get",id:"ref/cli/minder_auth_offline-token_get",title:"minder auth offline-token get",description:"minder auth offline-token get",source:"@site/docs/ref/cli/minder_auth_offline-token_get.md",sourceDirName:"ref/cli",slug:"/ref/cli/minder_auth_offline-token_get",permalink:"/ref/cli/minder_auth_offline-token_get",draft:!1,tags:[],version:"current",frontMatter:{title:"minder auth offline-token get"},sidebar:"minder",previous:{title:"minder auth offline-token",permalink:"/ref/cli/minder_auth_offline-token"},next:{title:"minder auth offline-token revoke",permalink:"/ref/cli/minder_auth_offline-token_revoke"}},f={},c=[{value:"minder auth offline-token get",id:"minder-auth-offline-token-get",level:2},{value:"Synopsis",id:"synopsis",level:3},{value:"Options",id:"options",level:3},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:3},{value:"SEE ALSO",id:"see-also",level:3}],u={toc:c},s="wrapper";function p(e){let{components:t,...n}=e;return(0,o.kt)(s,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"minder-auth-offline-token-get"},"minder auth offline-token get"),(0,o.kt)("p",null,"Retrieve an offline token"),(0,o.kt)("h3",{id:"synopsis"},"Synopsis"),(0,o.kt)("p",null,"The minder auth offline-token get command project lets you retrieve an offline token\nfor the minder control plane."),(0,o.kt)("p",null,"Offline tokens are used to authenticate to the minder control plane without\nrequiring the user's presence. This is useful for long-running processes\nthat need to authenticate to the control plane."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"minder auth offline-token get [flags]\n")),(0,o.kt)("h3",{id:"options"},"Options"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'  -f, --file string   The file to write the offline token to (default "offline.token")\n  -h, --help          help for get\n')),(0,o.kt)("h3",{id:"options-inherited-from-parent-commands"},"Options inherited from parent commands"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'      --config string            Config file (default is $PWD/config.yaml)\n      --grpc-host string         Server host (default "api.stacklok.com")\n      --grpc-insecure            Allow establishing insecure connections\n      --grpc-port int            Server port (default 443)\n      --identity-client string   Identity server client ID (default "minder-cli")\n      --identity-url string      Identity server issuer URL (default "https://auth.stacklok.com")\n')),(0,o.kt)("h3",{id:"see-also"},"SEE ALSO"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/ref/cli/minder_auth_offline-token"},"minder auth offline-token"),"\t - Manage offline tokens")))}p.isMDXComponent=!0}}]);