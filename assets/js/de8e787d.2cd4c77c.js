"use strict";(self.webpackChunkstacklok=self.webpackChunkstacklok||[]).push([[7799],{83813:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>u,frontMatter:()=>t,metadata:()=>c,toc:()=>a});var s=i(74848),r=i(28453);const t={title:"Secret Scanning",sidebar_position:50},l="Secret Scanning Rule",c={id:"ref/rules/secrets",title:"Secret Scanning",description:"The following rule type is available for secret scanning.",source:"@site/docs/ref/rules/secrets.md",sourceDirName:"ref/rules",slug:"/ref/rules/secrets",permalink:"/ref/rules/secrets",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:50,frontMatter:{title:"Secret Scanning",sidebar_position:50},sidebar:"minder",previous:{title:"Code Scanning",permalink:"/ref/rules/code_scanning"},next:{title:"Known Vulnerabilities",permalink:"/ref/rules/vulnerabilities"}},o={},a=[{value:"<code>secret_scanning</code> - Verifies that secret scanning is enabled for a given repository",id:"secret_scanning---verifies-that-secret-scanning-is-enabled-for-a-given-repository",level:2},{value:"Entity",id:"entity",level:3},{value:"Type",id:"type",level:3},{value:"Rule parameters",id:"rule-parameters",level:3},{value:"Rule definition options",id:"rule-definition-options",level:3}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"secret-scanning-rule",children:"Secret Scanning Rule"}),"\n",(0,s.jsx)(n.p,{children:"The following rule type is available for secret scanning."}),"\n",(0,s.jsxs)(n.h2,{id:"secret_scanning---verifies-that-secret-scanning-is-enabled-for-a-given-repository",children:[(0,s.jsx)(n.code,{children:"secret_scanning"})," - Verifies that secret scanning is enabled for a given repository"]}),"\n",(0,s.jsx)(n.p,{children:"Secret scanning is a feature that scans repositories for secrets and alerts\nthe repository owner when a secret is found. To enable this feature in GitHub,\nyou must enable it in the repository settings."}),"\n",(0,s.jsx)(n.h3,{id:"entity",children:"Entity"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"repository"})}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"type",children:"Type"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"secret_scanning"})}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"rule-parameters",children:"Rule parameters"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"None"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"rule-definition-options",children:"Rule definition options"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"secret_scanning"})," rule supports the following options:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"enabled (boolean)"})," - Whether secret scanning should be enabled for a given repository."]}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>c});var s=i(96540);const r={},t=s.createContext(r);function l(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);