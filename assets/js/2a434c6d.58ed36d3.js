"use strict";(self.webpackChunkminder_docs=self.webpackChunkminder_docs||[]).push([[7458],{67074:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>a,frontMatter:()=>s,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"ref/cli/minder_repo_reconcile","title":"minder repo reconcile","description":"minder repo reconcile","source":"@site/docs/ref/cli/minder_repo_reconcile.md","sourceDirName":"ref/cli","slug":"/ref/cli/minder_repo_reconcile","permalink":"/ref/cli/minder_repo_reconcile","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"minder repo reconcile"},"sidebar":"minder","previous":{"title":"minder repo list","permalink":"/ref/cli/minder_repo_list"},"next":{"title":"minder repo register","permalink":"/ref/cli/minder_repo_register"}}');var o=r(74848),t=r(28453);const s={title:"minder repo reconcile"},c=void 0,l={},d=[{value:"minder repo reconcile",id:"minder-repo-reconcile",level:2},{value:"Synopsis",id:"synopsis",level:3},{value:"Options",id:"options",level:3},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:3},{value:"SEE ALSO",id:"see-also",level:3}];function p(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h2,{id:"minder-repo-reconcile",children:"minder repo reconcile"}),"\n",(0,o.jsx)(n.p,{children:"Reconcile (Sync) a repository with Minder."}),"\n",(0,o.jsx)(n.h3,{id:"synopsis",children:"Synopsis"}),"\n",(0,o.jsx)(n.p,{children:"The reconcile command is used to trigger a reconciliation (sync) of a repository against\nprofiles and rules in a project."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"minder repo reconcile [flags]\n"})}),"\n",(0,o.jsx)(n.h3,{id:"options",children:"Options"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"  -h, --help          help for reconcile\n  -i, --id string     ID of the repository\n  -n, --name string   Name of the repository (owner/repo)\n"})}),"\n",(0,o.jsx)(n.h3,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:'      --config string            Config file (default is $PWD/config.yaml)\n      --grpc-host string         Server host (default "api.stacklok.com")\n      --grpc-insecure            Allow establishing insecure connections\n      --grpc-port int            Server port (default 443)\n      --identity-client string   Identity server client ID (default "minder-cli")\n      --identity-url string      Identity server issuer URL (default "https://auth.stacklok.com")\n  -j, --project string           ID of the project\n  -p, --provider string          Name of the provider, i.e. github\n  -v, --verbose                  Output additional messages to STDERR\n'})}),"\n",(0,o.jsx)(n.h3,{id:"see-also",children:"SEE ALSO"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"/ref/cli/minder_repo",children:"minder repo"}),"\t - Manage repositories"]}),"\n"]})]})}function a(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(p,{...e})}):p(e)}},28453:(e,n,r)=>{r.d(n,{R:()=>s,x:()=>c});var i=r(96540);const o={},t=i.createContext(o);function s(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);